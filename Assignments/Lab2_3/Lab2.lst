                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module Lab2
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _MapADC_PARM_3
                                     12 	.globl _MapADC_PARM_2
                                     13 	.globl _Pot_Scaling_PARM_2
                                     14 	.globl _main
                                     15 	.globl _abs
                                     16 	.globl _rand
                                     17 	.globl _putchar
                                     18 	.globl _printf
                                     19 	.globl _getchar_nw
                                     20 	.globl _Sys_Init
                                     21 	.globl _UART0_Init
                                     22 	.globl _SYSCLK_Init
                                     23 	.globl _LED2
                                     24 	.globl _LED0
                                     25 	.globl _LED1
                                     26 	.globl _BILED1
                                     27 	.globl _BILED0
                                     28 	.globl _LED3
                                     29 	.globl _PB0
                                     30 	.globl _SS1
                                     31 	.globl _SS0
                                     32 	.globl _SPIF
                                     33 	.globl _WCOL
                                     34 	.globl _MODF
                                     35 	.globl _RXOVRN
                                     36 	.globl _TXBSY
                                     37 	.globl _SLVSEL
                                     38 	.globl _MSTEN
                                     39 	.globl _SPIEN
                                     40 	.globl _AD0EN
                                     41 	.globl _ADCEN
                                     42 	.globl _AD0TM
                                     43 	.globl _ADCTM
                                     44 	.globl _AD0INT
                                     45 	.globl _ADCINT
                                     46 	.globl _AD0BUSY
                                     47 	.globl _ADBUSY
                                     48 	.globl _AD0CM1
                                     49 	.globl _ADSTM1
                                     50 	.globl _AD0CM0
                                     51 	.globl _ADSTM0
                                     52 	.globl _AD0WINT
                                     53 	.globl _ADWINT
                                     54 	.globl _AD0LJST
                                     55 	.globl _ADLJST
                                     56 	.globl _CF
                                     57 	.globl _CR
                                     58 	.globl _CCF4
                                     59 	.globl _CCF3
                                     60 	.globl _CCF2
                                     61 	.globl _CCF1
                                     62 	.globl _CCF0
                                     63 	.globl _CY
                                     64 	.globl _AC
                                     65 	.globl _F0
                                     66 	.globl _RS1
                                     67 	.globl _RS0
                                     68 	.globl _OV
                                     69 	.globl _F1
                                     70 	.globl _P
                                     71 	.globl _TF2
                                     72 	.globl _EXF2
                                     73 	.globl _RCLK
                                     74 	.globl _TCLK
                                     75 	.globl _EXEN2
                                     76 	.globl _TR2
                                     77 	.globl _CT2
                                     78 	.globl _CPRL2
                                     79 	.globl _BUSY
                                     80 	.globl _ENSMB
                                     81 	.globl _STA
                                     82 	.globl _STO
                                     83 	.globl _SI
                                     84 	.globl _AA
                                     85 	.globl _SMBFTE
                                     86 	.globl _SMBTOE
                                     87 	.globl _PT2
                                     88 	.globl _PS
                                     89 	.globl _PS0
                                     90 	.globl _PT1
                                     91 	.globl _PX1
                                     92 	.globl _PT0
                                     93 	.globl _PX0
                                     94 	.globl _P3_7
                                     95 	.globl _P3_6
                                     96 	.globl _P3_5
                                     97 	.globl _P3_4
                                     98 	.globl _P3_3
                                     99 	.globl _P3_2
                                    100 	.globl _P3_1
                                    101 	.globl _P3_0
                                    102 	.globl _EA
                                    103 	.globl _ET2
                                    104 	.globl _ES
                                    105 	.globl _ES0
                                    106 	.globl _ET1
                                    107 	.globl _EX1
                                    108 	.globl _ET0
                                    109 	.globl _EX0
                                    110 	.globl _P2_7
                                    111 	.globl _P2_6
                                    112 	.globl _P2_5
                                    113 	.globl _P2_4
                                    114 	.globl _P2_3
                                    115 	.globl _P2_2
                                    116 	.globl _P2_1
                                    117 	.globl _P2_0
                                    118 	.globl _S0MODE
                                    119 	.globl _SM00
                                    120 	.globl _SM0
                                    121 	.globl _SM10
                                    122 	.globl _SM1
                                    123 	.globl _MCE0
                                    124 	.globl _SM20
                                    125 	.globl _SM2
                                    126 	.globl _REN0
                                    127 	.globl _REN
                                    128 	.globl _TB80
                                    129 	.globl _TB8
                                    130 	.globl _RB80
                                    131 	.globl _RB8
                                    132 	.globl _TI0
                                    133 	.globl _TI
                                    134 	.globl _RI0
                                    135 	.globl _RI
                                    136 	.globl _P1_7
                                    137 	.globl _P1_6
                                    138 	.globl _P1_5
                                    139 	.globl _P1_4
                                    140 	.globl _P1_3
                                    141 	.globl _P1_2
                                    142 	.globl _P1_1
                                    143 	.globl _P1_0
                                    144 	.globl _TF1
                                    145 	.globl _TR1
                                    146 	.globl _TF0
                                    147 	.globl _TR0
                                    148 	.globl _IE1
                                    149 	.globl _IT1
                                    150 	.globl _IE0
                                    151 	.globl _IT0
                                    152 	.globl _P0_7
                                    153 	.globl _P0_6
                                    154 	.globl _P0_5
                                    155 	.globl _P0_4
                                    156 	.globl _P0_3
                                    157 	.globl _P0_2
                                    158 	.globl _P0_1
                                    159 	.globl _P0_0
                                    160 	.globl _PCA0CP4
                                    161 	.globl _PCA0CP3
                                    162 	.globl _PCA0CP2
                                    163 	.globl _PCA0CP1
                                    164 	.globl _PCA0CP0
                                    165 	.globl _PCA0
                                    166 	.globl _DAC1
                                    167 	.globl _DAC0
                                    168 	.globl _ADC0LT
                                    169 	.globl _ADC0GT
                                    170 	.globl _ADC0
                                    171 	.globl _RCAP4
                                    172 	.globl _TMR4
                                    173 	.globl _TMR3RL
                                    174 	.globl _TMR3
                                    175 	.globl _RCAP2
                                    176 	.globl _TMR2
                                    177 	.globl _TMR1
                                    178 	.globl _TMR0
                                    179 	.globl _WDTCN
                                    180 	.globl _PCA0CPH4
                                    181 	.globl _PCA0CPH3
                                    182 	.globl _PCA0CPH2
                                    183 	.globl _PCA0CPH1
                                    184 	.globl _PCA0CPH0
                                    185 	.globl _PCA0H
                                    186 	.globl _SPI0CN
                                    187 	.globl _EIP2
                                    188 	.globl _EIP1
                                    189 	.globl _TH4
                                    190 	.globl _TL4
                                    191 	.globl _SADDR1
                                    192 	.globl _SBUF1
                                    193 	.globl _SCON1
                                    194 	.globl _B
                                    195 	.globl _RSTSRC
                                    196 	.globl _PCA0CPL4
                                    197 	.globl _PCA0CPL3
                                    198 	.globl _PCA0CPL2
                                    199 	.globl _PCA0CPL1
                                    200 	.globl _PCA0CPL0
                                    201 	.globl _PCA0L
                                    202 	.globl _ADC0CN
                                    203 	.globl _EIE2
                                    204 	.globl _EIE1
                                    205 	.globl _RCAP4H
                                    206 	.globl _RCAP4L
                                    207 	.globl _XBR2
                                    208 	.globl _XBR1
                                    209 	.globl _XBR0
                                    210 	.globl _ACC
                                    211 	.globl _PCA0CPM4
                                    212 	.globl _PCA0CPM3
                                    213 	.globl _PCA0CPM2
                                    214 	.globl _PCA0CPM1
                                    215 	.globl _PCA0CPM0
                                    216 	.globl _PCA0MD
                                    217 	.globl _PCA0CN
                                    218 	.globl _DAC1CN
                                    219 	.globl _DAC1H
                                    220 	.globl _DAC1L
                                    221 	.globl _DAC0CN
                                    222 	.globl _DAC0H
                                    223 	.globl _DAC0L
                                    224 	.globl _REF0CN
                                    225 	.globl _PSW
                                    226 	.globl _SMB0CR
                                    227 	.globl _TH2
                                    228 	.globl _TL2
                                    229 	.globl _RCAP2H
                                    230 	.globl _RCAP2L
                                    231 	.globl _T4CON
                                    232 	.globl _T2CON
                                    233 	.globl _ADC0LTH
                                    234 	.globl _ADC0LTL
                                    235 	.globl _ADC0GTH
                                    236 	.globl _ADC0GTL
                                    237 	.globl _SMB0ADR
                                    238 	.globl _SMB0DAT
                                    239 	.globl _SMB0STA
                                    240 	.globl _SMB0CN
                                    241 	.globl _ADC0H
                                    242 	.globl _ADC0L
                                    243 	.globl _P1MDIN
                                    244 	.globl _ADC0CF
                                    245 	.globl _AMX0SL
                                    246 	.globl _AMX0CF
                                    247 	.globl _SADEN0
                                    248 	.globl _IP
                                    249 	.globl _FLACL
                                    250 	.globl _FLSCL
                                    251 	.globl _P74OUT
                                    252 	.globl _OSCICN
                                    253 	.globl _OSCXCN
                                    254 	.globl _P3
                                    255 	.globl __XPAGE
                                    256 	.globl _EMI0CN
                                    257 	.globl _SADEN1
                                    258 	.globl _P3IF
                                    259 	.globl _AMX1SL
                                    260 	.globl _ADC1CF
                                    261 	.globl _ADC1CN
                                    262 	.globl _SADDR0
                                    263 	.globl _IE
                                    264 	.globl _P3MDOUT
                                    265 	.globl _PRT3CF
                                    266 	.globl _P2MDOUT
                                    267 	.globl _PRT2CF
                                    268 	.globl _P1MDOUT
                                    269 	.globl _PRT1CF
                                    270 	.globl _P0MDOUT
                                    271 	.globl _PRT0CF
                                    272 	.globl _EMI0CF
                                    273 	.globl _EMI0TC
                                    274 	.globl _P2
                                    275 	.globl _CPT1CN
                                    276 	.globl _CPT0CN
                                    277 	.globl _SPI0CKR
                                    278 	.globl _ADC1
                                    279 	.globl _SPI0DAT
                                    280 	.globl _SPI0CFG
                                    281 	.globl _SBUF0
                                    282 	.globl _SBUF
                                    283 	.globl _SCON0
                                    284 	.globl _SCON
                                    285 	.globl _P7
                                    286 	.globl _TMR3H
                                    287 	.globl _TMR3L
                                    288 	.globl _TMR3RLH
                                    289 	.globl _TMR3RLL
                                    290 	.globl _TMR3CN
                                    291 	.globl _P1
                                    292 	.globl _PSCTL
                                    293 	.globl _CKCON
                                    294 	.globl _TH1
                                    295 	.globl _TH0
                                    296 	.globl _TL1
                                    297 	.globl _TL0
                                    298 	.globl _TMOD
                                    299 	.globl _TCON
                                    300 	.globl _PCON
                                    301 	.globl _P6
                                    302 	.globl _P5
                                    303 	.globl _P4
                                    304 	.globl _DPH
                                    305 	.globl _DPL
                                    306 	.globl _SP
                                    307 	.globl _P0
                                    308 	.globl _CompareVals_PARM_2
                                    309 	.globl _Compare_Answer_PARM_2
                                    310 	.globl _aligned_alloc_PARM_2
                                    311 	.globl _tries
                                    312 	.globl _numLEDs
                                    313 	.globl _overflows
                                    314 	.globl _tmpCount
                                    315 	.globl _buttonPresses
                                    316 	.globl _score
                                    317 	.globl _scaledValue
                                    318 	.globl _error
                                    319 	.globl _ADC_value
                                    320 	.globl _length
                                    321 	.globl _randomNumber
                                    322 	.globl _totalPoints
                                    323 	.globl _points
                                    324 	.globl _round
                                    325 	.globl _var
                                    326 	.globl _counts
                                    327 	.globl _Port_Init
                                    328 	.globl _Timer_Init
                                    329 	.globl _Interrupt_Init
                                    330 	.globl _ADC1_Init
                                    331 	.globl _read_AD_input
                                    332 	.globl _Pot_Scaling
                                    333 	.globl _Compare_Answer
                                    334 	.globl _Flash_Biled
                                    335 	.globl _Mode_One
                                    336 	.globl _Mode_Two
                                    337 	.globl _Mode_Three
                                    338 	.globl _Draw_Bar
                                    339 	.globl _Timer0_ISR
                                    340 	.globl _random
                                    341 	.globl _SetAllLEDs
                                    342 	.globl _MapADC
                                    343 	.globl _LightNumLEDs
                                    344 	.globl _ClearTimer0
                                    345 	.globl _SetBILED
                                    346 	.globl _DebounceButton
                                    347 	.globl _CompareVals
                                    348 ;--------------------------------------------------------
                                    349 ; special function registers
                                    350 ;--------------------------------------------------------
                                    351 	.area RSEG    (ABS,DATA)
      000000                        352 	.org 0x0000
                           000080   353 G$P0$0$0 == 0x0080
                           000080   354 _P0	=	0x0080
                           000081   355 G$SP$0$0 == 0x0081
                           000081   356 _SP	=	0x0081
                           000082   357 G$DPL$0$0 == 0x0082
                           000082   358 _DPL	=	0x0082
                           000083   359 G$DPH$0$0 == 0x0083
                           000083   360 _DPH	=	0x0083
                           000084   361 G$P4$0$0 == 0x0084
                           000084   362 _P4	=	0x0084
                           000085   363 G$P5$0$0 == 0x0085
                           000085   364 _P5	=	0x0085
                           000086   365 G$P6$0$0 == 0x0086
                           000086   366 _P6	=	0x0086
                           000087   367 G$PCON$0$0 == 0x0087
                           000087   368 _PCON	=	0x0087
                           000088   369 G$TCON$0$0 == 0x0088
                           000088   370 _TCON	=	0x0088
                           000089   371 G$TMOD$0$0 == 0x0089
                           000089   372 _TMOD	=	0x0089
                           00008A   373 G$TL0$0$0 == 0x008a
                           00008A   374 _TL0	=	0x008a
                           00008B   375 G$TL1$0$0 == 0x008b
                           00008B   376 _TL1	=	0x008b
                           00008C   377 G$TH0$0$0 == 0x008c
                           00008C   378 _TH0	=	0x008c
                           00008D   379 G$TH1$0$0 == 0x008d
                           00008D   380 _TH1	=	0x008d
                           00008E   381 G$CKCON$0$0 == 0x008e
                           00008E   382 _CKCON	=	0x008e
                           00008F   383 G$PSCTL$0$0 == 0x008f
                           00008F   384 _PSCTL	=	0x008f
                           000090   385 G$P1$0$0 == 0x0090
                           000090   386 _P1	=	0x0090
                           000091   387 G$TMR3CN$0$0 == 0x0091
                           000091   388 _TMR3CN	=	0x0091
                           000092   389 G$TMR3RLL$0$0 == 0x0092
                           000092   390 _TMR3RLL	=	0x0092
                           000093   391 G$TMR3RLH$0$0 == 0x0093
                           000093   392 _TMR3RLH	=	0x0093
                           000094   393 G$TMR3L$0$0 == 0x0094
                           000094   394 _TMR3L	=	0x0094
                           000095   395 G$TMR3H$0$0 == 0x0095
                           000095   396 _TMR3H	=	0x0095
                           000096   397 G$P7$0$0 == 0x0096
                           000096   398 _P7	=	0x0096
                           000098   399 G$SCON$0$0 == 0x0098
                           000098   400 _SCON	=	0x0098
                           000098   401 G$SCON0$0$0 == 0x0098
                           000098   402 _SCON0	=	0x0098
                           000099   403 G$SBUF$0$0 == 0x0099
                           000099   404 _SBUF	=	0x0099
                           000099   405 G$SBUF0$0$0 == 0x0099
                           000099   406 _SBUF0	=	0x0099
                           00009A   407 G$SPI0CFG$0$0 == 0x009a
                           00009A   408 _SPI0CFG	=	0x009a
                           00009B   409 G$SPI0DAT$0$0 == 0x009b
                           00009B   410 _SPI0DAT	=	0x009b
                           00009C   411 G$ADC1$0$0 == 0x009c
                           00009C   412 _ADC1	=	0x009c
                           00009D   413 G$SPI0CKR$0$0 == 0x009d
                           00009D   414 _SPI0CKR	=	0x009d
                           00009E   415 G$CPT0CN$0$0 == 0x009e
                           00009E   416 _CPT0CN	=	0x009e
                           00009F   417 G$CPT1CN$0$0 == 0x009f
                           00009F   418 _CPT1CN	=	0x009f
                           0000A0   419 G$P2$0$0 == 0x00a0
                           0000A0   420 _P2	=	0x00a0
                           0000A1   421 G$EMI0TC$0$0 == 0x00a1
                           0000A1   422 _EMI0TC	=	0x00a1
                           0000A3   423 G$EMI0CF$0$0 == 0x00a3
                           0000A3   424 _EMI0CF	=	0x00a3
                           0000A4   425 G$PRT0CF$0$0 == 0x00a4
                           0000A4   426 _PRT0CF	=	0x00a4
                           0000A4   427 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   428 _P0MDOUT	=	0x00a4
                           0000A5   429 G$PRT1CF$0$0 == 0x00a5
                           0000A5   430 _PRT1CF	=	0x00a5
                           0000A5   431 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   432 _P1MDOUT	=	0x00a5
                           0000A6   433 G$PRT2CF$0$0 == 0x00a6
                           0000A6   434 _PRT2CF	=	0x00a6
                           0000A6   435 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   436 _P2MDOUT	=	0x00a6
                           0000A7   437 G$PRT3CF$0$0 == 0x00a7
                           0000A7   438 _PRT3CF	=	0x00a7
                           0000A7   439 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   440 _P3MDOUT	=	0x00a7
                           0000A8   441 G$IE$0$0 == 0x00a8
                           0000A8   442 _IE	=	0x00a8
                           0000A9   443 G$SADDR0$0$0 == 0x00a9
                           0000A9   444 _SADDR0	=	0x00a9
                           0000AA   445 G$ADC1CN$0$0 == 0x00aa
                           0000AA   446 _ADC1CN	=	0x00aa
                           0000AB   447 G$ADC1CF$0$0 == 0x00ab
                           0000AB   448 _ADC1CF	=	0x00ab
                           0000AC   449 G$AMX1SL$0$0 == 0x00ac
                           0000AC   450 _AMX1SL	=	0x00ac
                           0000AD   451 G$P3IF$0$0 == 0x00ad
                           0000AD   452 _P3IF	=	0x00ad
                           0000AE   453 G$SADEN1$0$0 == 0x00ae
                           0000AE   454 _SADEN1	=	0x00ae
                           0000AF   455 G$EMI0CN$0$0 == 0x00af
                           0000AF   456 _EMI0CN	=	0x00af
                           0000AF   457 G$_XPAGE$0$0 == 0x00af
                           0000AF   458 __XPAGE	=	0x00af
                           0000B0   459 G$P3$0$0 == 0x00b0
                           0000B0   460 _P3	=	0x00b0
                           0000B1   461 G$OSCXCN$0$0 == 0x00b1
                           0000B1   462 _OSCXCN	=	0x00b1
                           0000B2   463 G$OSCICN$0$0 == 0x00b2
                           0000B2   464 _OSCICN	=	0x00b2
                           0000B5   465 G$P74OUT$0$0 == 0x00b5
                           0000B5   466 _P74OUT	=	0x00b5
                           0000B6   467 G$FLSCL$0$0 == 0x00b6
                           0000B6   468 _FLSCL	=	0x00b6
                           0000B7   469 G$FLACL$0$0 == 0x00b7
                           0000B7   470 _FLACL	=	0x00b7
                           0000B8   471 G$IP$0$0 == 0x00b8
                           0000B8   472 _IP	=	0x00b8
                           0000B9   473 G$SADEN0$0$0 == 0x00b9
                           0000B9   474 _SADEN0	=	0x00b9
                           0000BA   475 G$AMX0CF$0$0 == 0x00ba
                           0000BA   476 _AMX0CF	=	0x00ba
                           0000BB   477 G$AMX0SL$0$0 == 0x00bb
                           0000BB   478 _AMX0SL	=	0x00bb
                           0000BC   479 G$ADC0CF$0$0 == 0x00bc
                           0000BC   480 _ADC0CF	=	0x00bc
                           0000BD   481 G$P1MDIN$0$0 == 0x00bd
                           0000BD   482 _P1MDIN	=	0x00bd
                           0000BE   483 G$ADC0L$0$0 == 0x00be
                           0000BE   484 _ADC0L	=	0x00be
                           0000BF   485 G$ADC0H$0$0 == 0x00bf
                           0000BF   486 _ADC0H	=	0x00bf
                           0000C0   487 G$SMB0CN$0$0 == 0x00c0
                           0000C0   488 _SMB0CN	=	0x00c0
                           0000C1   489 G$SMB0STA$0$0 == 0x00c1
                           0000C1   490 _SMB0STA	=	0x00c1
                           0000C2   491 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   492 _SMB0DAT	=	0x00c2
                           0000C3   493 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   494 _SMB0ADR	=	0x00c3
                           0000C4   495 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   496 _ADC0GTL	=	0x00c4
                           0000C5   497 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   498 _ADC0GTH	=	0x00c5
                           0000C6   499 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   500 _ADC0LTL	=	0x00c6
                           0000C7   501 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   502 _ADC0LTH	=	0x00c7
                           0000C8   503 G$T2CON$0$0 == 0x00c8
                           0000C8   504 _T2CON	=	0x00c8
                           0000C9   505 G$T4CON$0$0 == 0x00c9
                           0000C9   506 _T4CON	=	0x00c9
                           0000CA   507 G$RCAP2L$0$0 == 0x00ca
                           0000CA   508 _RCAP2L	=	0x00ca
                           0000CB   509 G$RCAP2H$0$0 == 0x00cb
                           0000CB   510 _RCAP2H	=	0x00cb
                           0000CC   511 G$TL2$0$0 == 0x00cc
                           0000CC   512 _TL2	=	0x00cc
                           0000CD   513 G$TH2$0$0 == 0x00cd
                           0000CD   514 _TH2	=	0x00cd
                           0000CF   515 G$SMB0CR$0$0 == 0x00cf
                           0000CF   516 _SMB0CR	=	0x00cf
                           0000D0   517 G$PSW$0$0 == 0x00d0
                           0000D0   518 _PSW	=	0x00d0
                           0000D1   519 G$REF0CN$0$0 == 0x00d1
                           0000D1   520 _REF0CN	=	0x00d1
                           0000D2   521 G$DAC0L$0$0 == 0x00d2
                           0000D2   522 _DAC0L	=	0x00d2
                           0000D3   523 G$DAC0H$0$0 == 0x00d3
                           0000D3   524 _DAC0H	=	0x00d3
                           0000D4   525 G$DAC0CN$0$0 == 0x00d4
                           0000D4   526 _DAC0CN	=	0x00d4
                           0000D5   527 G$DAC1L$0$0 == 0x00d5
                           0000D5   528 _DAC1L	=	0x00d5
                           0000D6   529 G$DAC1H$0$0 == 0x00d6
                           0000D6   530 _DAC1H	=	0x00d6
                           0000D7   531 G$DAC1CN$0$0 == 0x00d7
                           0000D7   532 _DAC1CN	=	0x00d7
                           0000D8   533 G$PCA0CN$0$0 == 0x00d8
                           0000D8   534 _PCA0CN	=	0x00d8
                           0000D9   535 G$PCA0MD$0$0 == 0x00d9
                           0000D9   536 _PCA0MD	=	0x00d9
                           0000DA   537 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   538 _PCA0CPM0	=	0x00da
                           0000DB   539 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   540 _PCA0CPM1	=	0x00db
                           0000DC   541 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   542 _PCA0CPM2	=	0x00dc
                           0000DD   543 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   544 _PCA0CPM3	=	0x00dd
                           0000DE   545 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   546 _PCA0CPM4	=	0x00de
                           0000E0   547 G$ACC$0$0 == 0x00e0
                           0000E0   548 _ACC	=	0x00e0
                           0000E1   549 G$XBR0$0$0 == 0x00e1
                           0000E1   550 _XBR0	=	0x00e1
                           0000E2   551 G$XBR1$0$0 == 0x00e2
                           0000E2   552 _XBR1	=	0x00e2
                           0000E3   553 G$XBR2$0$0 == 0x00e3
                           0000E3   554 _XBR2	=	0x00e3
                           0000E4   555 G$RCAP4L$0$0 == 0x00e4
                           0000E4   556 _RCAP4L	=	0x00e4
                           0000E5   557 G$RCAP4H$0$0 == 0x00e5
                           0000E5   558 _RCAP4H	=	0x00e5
                           0000E6   559 G$EIE1$0$0 == 0x00e6
                           0000E6   560 _EIE1	=	0x00e6
                           0000E7   561 G$EIE2$0$0 == 0x00e7
                           0000E7   562 _EIE2	=	0x00e7
                           0000E8   563 G$ADC0CN$0$0 == 0x00e8
                           0000E8   564 _ADC0CN	=	0x00e8
                           0000E9   565 G$PCA0L$0$0 == 0x00e9
                           0000E9   566 _PCA0L	=	0x00e9
                           0000EA   567 G$PCA0CPL0$0$0 == 0x00ea
                           0000EA   568 _PCA0CPL0	=	0x00ea
                           0000EB   569 G$PCA0CPL1$0$0 == 0x00eb
                           0000EB   570 _PCA0CPL1	=	0x00eb
                           0000EC   571 G$PCA0CPL2$0$0 == 0x00ec
                           0000EC   572 _PCA0CPL2	=	0x00ec
                           0000ED   573 G$PCA0CPL3$0$0 == 0x00ed
                           0000ED   574 _PCA0CPL3	=	0x00ed
                           0000EE   575 G$PCA0CPL4$0$0 == 0x00ee
                           0000EE   576 _PCA0CPL4	=	0x00ee
                           0000EF   577 G$RSTSRC$0$0 == 0x00ef
                           0000EF   578 _RSTSRC	=	0x00ef
                           0000F0   579 G$B$0$0 == 0x00f0
                           0000F0   580 _B	=	0x00f0
                           0000F1   581 G$SCON1$0$0 == 0x00f1
                           0000F1   582 _SCON1	=	0x00f1
                           0000F2   583 G$SBUF1$0$0 == 0x00f2
                           0000F2   584 _SBUF1	=	0x00f2
                           0000F3   585 G$SADDR1$0$0 == 0x00f3
                           0000F3   586 _SADDR1	=	0x00f3
                           0000F4   587 G$TL4$0$0 == 0x00f4
                           0000F4   588 _TL4	=	0x00f4
                           0000F5   589 G$TH4$0$0 == 0x00f5
                           0000F5   590 _TH4	=	0x00f5
                           0000F6   591 G$EIP1$0$0 == 0x00f6
                           0000F6   592 _EIP1	=	0x00f6
                           0000F7   593 G$EIP2$0$0 == 0x00f7
                           0000F7   594 _EIP2	=	0x00f7
                           0000F8   595 G$SPI0CN$0$0 == 0x00f8
                           0000F8   596 _SPI0CN	=	0x00f8
                           0000F9   597 G$PCA0H$0$0 == 0x00f9
                           0000F9   598 _PCA0H	=	0x00f9
                           0000FA   599 G$PCA0CPH0$0$0 == 0x00fa
                           0000FA   600 _PCA0CPH0	=	0x00fa
                           0000FB   601 G$PCA0CPH1$0$0 == 0x00fb
                           0000FB   602 _PCA0CPH1	=	0x00fb
                           0000FC   603 G$PCA0CPH2$0$0 == 0x00fc
                           0000FC   604 _PCA0CPH2	=	0x00fc
                           0000FD   605 G$PCA0CPH3$0$0 == 0x00fd
                           0000FD   606 _PCA0CPH3	=	0x00fd
                           0000FE   607 G$PCA0CPH4$0$0 == 0x00fe
                           0000FE   608 _PCA0CPH4	=	0x00fe
                           0000FF   609 G$WDTCN$0$0 == 0x00ff
                           0000FF   610 _WDTCN	=	0x00ff
                           008C8A   611 G$TMR0$0$0 == 0x8c8a
                           008C8A   612 _TMR0	=	0x8c8a
                           008D8B   613 G$TMR1$0$0 == 0x8d8b
                           008D8B   614 _TMR1	=	0x8d8b
                           00CDCC   615 G$TMR2$0$0 == 0xcdcc
                           00CDCC   616 _TMR2	=	0xcdcc
                           00CBCA   617 G$RCAP2$0$0 == 0xcbca
                           00CBCA   618 _RCAP2	=	0xcbca
                           009594   619 G$TMR3$0$0 == 0x9594
                           009594   620 _TMR3	=	0x9594
                           009392   621 G$TMR3RL$0$0 == 0x9392
                           009392   622 _TMR3RL	=	0x9392
                           00F5F4   623 G$TMR4$0$0 == 0xf5f4
                           00F5F4   624 _TMR4	=	0xf5f4
                           00E5E4   625 G$RCAP4$0$0 == 0xe5e4
                           00E5E4   626 _RCAP4	=	0xe5e4
                           00BFBE   627 G$ADC0$0$0 == 0xbfbe
                           00BFBE   628 _ADC0	=	0xbfbe
                           00C5C4   629 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   630 _ADC0GT	=	0xc5c4
                           00C7C6   631 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   632 _ADC0LT	=	0xc7c6
                           00D3D2   633 G$DAC0$0$0 == 0xd3d2
                           00D3D2   634 _DAC0	=	0xd3d2
                           00D6D5   635 G$DAC1$0$0 == 0xd6d5
                           00D6D5   636 _DAC1	=	0xd6d5
                           00F9E9   637 G$PCA0$0$0 == 0xf9e9
                           00F9E9   638 _PCA0	=	0xf9e9
                           00FAEA   639 G$PCA0CP0$0$0 == 0xfaea
                           00FAEA   640 _PCA0CP0	=	0xfaea
                           00FBEB   641 G$PCA0CP1$0$0 == 0xfbeb
                           00FBEB   642 _PCA0CP1	=	0xfbeb
                           00FCEC   643 G$PCA0CP2$0$0 == 0xfcec
                           00FCEC   644 _PCA0CP2	=	0xfcec
                           00FDED   645 G$PCA0CP3$0$0 == 0xfded
                           00FDED   646 _PCA0CP3	=	0xfded
                           00FEEE   647 G$PCA0CP4$0$0 == 0xfeee
                           00FEEE   648 _PCA0CP4	=	0xfeee
                                    649 ;--------------------------------------------------------
                                    650 ; special function bits
                                    651 ;--------------------------------------------------------
                                    652 	.area RSEG    (ABS,DATA)
      000000                        653 	.org 0x0000
                           000080   654 G$P0_0$0$0 == 0x0080
                           000080   655 _P0_0	=	0x0080
                           000081   656 G$P0_1$0$0 == 0x0081
                           000081   657 _P0_1	=	0x0081
                           000082   658 G$P0_2$0$0 == 0x0082
                           000082   659 _P0_2	=	0x0082
                           000083   660 G$P0_3$0$0 == 0x0083
                           000083   661 _P0_3	=	0x0083
                           000084   662 G$P0_4$0$0 == 0x0084
                           000084   663 _P0_4	=	0x0084
                           000085   664 G$P0_5$0$0 == 0x0085
                           000085   665 _P0_5	=	0x0085
                           000086   666 G$P0_6$0$0 == 0x0086
                           000086   667 _P0_6	=	0x0086
                           000087   668 G$P0_7$0$0 == 0x0087
                           000087   669 _P0_7	=	0x0087
                           000088   670 G$IT0$0$0 == 0x0088
                           000088   671 _IT0	=	0x0088
                           000089   672 G$IE0$0$0 == 0x0089
                           000089   673 _IE0	=	0x0089
                           00008A   674 G$IT1$0$0 == 0x008a
                           00008A   675 _IT1	=	0x008a
                           00008B   676 G$IE1$0$0 == 0x008b
                           00008B   677 _IE1	=	0x008b
                           00008C   678 G$TR0$0$0 == 0x008c
                           00008C   679 _TR0	=	0x008c
                           00008D   680 G$TF0$0$0 == 0x008d
                           00008D   681 _TF0	=	0x008d
                           00008E   682 G$TR1$0$0 == 0x008e
                           00008E   683 _TR1	=	0x008e
                           00008F   684 G$TF1$0$0 == 0x008f
                           00008F   685 _TF1	=	0x008f
                           000090   686 G$P1_0$0$0 == 0x0090
                           000090   687 _P1_0	=	0x0090
                           000091   688 G$P1_1$0$0 == 0x0091
                           000091   689 _P1_1	=	0x0091
                           000092   690 G$P1_2$0$0 == 0x0092
                           000092   691 _P1_2	=	0x0092
                           000093   692 G$P1_3$0$0 == 0x0093
                           000093   693 _P1_3	=	0x0093
                           000094   694 G$P1_4$0$0 == 0x0094
                           000094   695 _P1_4	=	0x0094
                           000095   696 G$P1_5$0$0 == 0x0095
                           000095   697 _P1_5	=	0x0095
                           000096   698 G$P1_6$0$0 == 0x0096
                           000096   699 _P1_6	=	0x0096
                           000097   700 G$P1_7$0$0 == 0x0097
                           000097   701 _P1_7	=	0x0097
                           000098   702 G$RI$0$0 == 0x0098
                           000098   703 _RI	=	0x0098
                           000098   704 G$RI0$0$0 == 0x0098
                           000098   705 _RI0	=	0x0098
                           000099   706 G$TI$0$0 == 0x0099
                           000099   707 _TI	=	0x0099
                           000099   708 G$TI0$0$0 == 0x0099
                           000099   709 _TI0	=	0x0099
                           00009A   710 G$RB8$0$0 == 0x009a
                           00009A   711 _RB8	=	0x009a
                           00009A   712 G$RB80$0$0 == 0x009a
                           00009A   713 _RB80	=	0x009a
                           00009B   714 G$TB8$0$0 == 0x009b
                           00009B   715 _TB8	=	0x009b
                           00009B   716 G$TB80$0$0 == 0x009b
                           00009B   717 _TB80	=	0x009b
                           00009C   718 G$REN$0$0 == 0x009c
                           00009C   719 _REN	=	0x009c
                           00009C   720 G$REN0$0$0 == 0x009c
                           00009C   721 _REN0	=	0x009c
                           00009D   722 G$SM2$0$0 == 0x009d
                           00009D   723 _SM2	=	0x009d
                           00009D   724 G$SM20$0$0 == 0x009d
                           00009D   725 _SM20	=	0x009d
                           00009D   726 G$MCE0$0$0 == 0x009d
                           00009D   727 _MCE0	=	0x009d
                           00009E   728 G$SM1$0$0 == 0x009e
                           00009E   729 _SM1	=	0x009e
                           00009E   730 G$SM10$0$0 == 0x009e
                           00009E   731 _SM10	=	0x009e
                           00009F   732 G$SM0$0$0 == 0x009f
                           00009F   733 _SM0	=	0x009f
                           00009F   734 G$SM00$0$0 == 0x009f
                           00009F   735 _SM00	=	0x009f
                           00009F   736 G$S0MODE$0$0 == 0x009f
                           00009F   737 _S0MODE	=	0x009f
                           0000A0   738 G$P2_0$0$0 == 0x00a0
                           0000A0   739 _P2_0	=	0x00a0
                           0000A1   740 G$P2_1$0$0 == 0x00a1
                           0000A1   741 _P2_1	=	0x00a1
                           0000A2   742 G$P2_2$0$0 == 0x00a2
                           0000A2   743 _P2_2	=	0x00a2
                           0000A3   744 G$P2_3$0$0 == 0x00a3
                           0000A3   745 _P2_3	=	0x00a3
                           0000A4   746 G$P2_4$0$0 == 0x00a4
                           0000A4   747 _P2_4	=	0x00a4
                           0000A5   748 G$P2_5$0$0 == 0x00a5
                           0000A5   749 _P2_5	=	0x00a5
                           0000A6   750 G$P2_6$0$0 == 0x00a6
                           0000A6   751 _P2_6	=	0x00a6
                           0000A7   752 G$P2_7$0$0 == 0x00a7
                           0000A7   753 _P2_7	=	0x00a7
                           0000A8   754 G$EX0$0$0 == 0x00a8
                           0000A8   755 _EX0	=	0x00a8
                           0000A9   756 G$ET0$0$0 == 0x00a9
                           0000A9   757 _ET0	=	0x00a9
                           0000AA   758 G$EX1$0$0 == 0x00aa
                           0000AA   759 _EX1	=	0x00aa
                           0000AB   760 G$ET1$0$0 == 0x00ab
                           0000AB   761 _ET1	=	0x00ab
                           0000AC   762 G$ES0$0$0 == 0x00ac
                           0000AC   763 _ES0	=	0x00ac
                           0000AC   764 G$ES$0$0 == 0x00ac
                           0000AC   765 _ES	=	0x00ac
                           0000AD   766 G$ET2$0$0 == 0x00ad
                           0000AD   767 _ET2	=	0x00ad
                           0000AF   768 G$EA$0$0 == 0x00af
                           0000AF   769 _EA	=	0x00af
                           0000B0   770 G$P3_0$0$0 == 0x00b0
                           0000B0   771 _P3_0	=	0x00b0
                           0000B1   772 G$P3_1$0$0 == 0x00b1
                           0000B1   773 _P3_1	=	0x00b1
                           0000B2   774 G$P3_2$0$0 == 0x00b2
                           0000B2   775 _P3_2	=	0x00b2
                           0000B3   776 G$P3_3$0$0 == 0x00b3
                           0000B3   777 _P3_3	=	0x00b3
                           0000B4   778 G$P3_4$0$0 == 0x00b4
                           0000B4   779 _P3_4	=	0x00b4
                           0000B5   780 G$P3_5$0$0 == 0x00b5
                           0000B5   781 _P3_5	=	0x00b5
                           0000B6   782 G$P3_6$0$0 == 0x00b6
                           0000B6   783 _P3_6	=	0x00b6
                           0000B7   784 G$P3_7$0$0 == 0x00b7
                           0000B7   785 _P3_7	=	0x00b7
                           0000B8   786 G$PX0$0$0 == 0x00b8
                           0000B8   787 _PX0	=	0x00b8
                           0000B9   788 G$PT0$0$0 == 0x00b9
                           0000B9   789 _PT0	=	0x00b9
                           0000BA   790 G$PX1$0$0 == 0x00ba
                           0000BA   791 _PX1	=	0x00ba
                           0000BB   792 G$PT1$0$0 == 0x00bb
                           0000BB   793 _PT1	=	0x00bb
                           0000BC   794 G$PS0$0$0 == 0x00bc
                           0000BC   795 _PS0	=	0x00bc
                           0000BC   796 G$PS$0$0 == 0x00bc
                           0000BC   797 _PS	=	0x00bc
                           0000BD   798 G$PT2$0$0 == 0x00bd
                           0000BD   799 _PT2	=	0x00bd
                           0000C0   800 G$SMBTOE$0$0 == 0x00c0
                           0000C0   801 _SMBTOE	=	0x00c0
                           0000C1   802 G$SMBFTE$0$0 == 0x00c1
                           0000C1   803 _SMBFTE	=	0x00c1
                           0000C2   804 G$AA$0$0 == 0x00c2
                           0000C2   805 _AA	=	0x00c2
                           0000C3   806 G$SI$0$0 == 0x00c3
                           0000C3   807 _SI	=	0x00c3
                           0000C4   808 G$STO$0$0 == 0x00c4
                           0000C4   809 _STO	=	0x00c4
                           0000C5   810 G$STA$0$0 == 0x00c5
                           0000C5   811 _STA	=	0x00c5
                           0000C6   812 G$ENSMB$0$0 == 0x00c6
                           0000C6   813 _ENSMB	=	0x00c6
                           0000C7   814 G$BUSY$0$0 == 0x00c7
                           0000C7   815 _BUSY	=	0x00c7
                           0000C8   816 G$CPRL2$0$0 == 0x00c8
                           0000C8   817 _CPRL2	=	0x00c8
                           0000C9   818 G$CT2$0$0 == 0x00c9
                           0000C9   819 _CT2	=	0x00c9
                           0000CA   820 G$TR2$0$0 == 0x00ca
                           0000CA   821 _TR2	=	0x00ca
                           0000CB   822 G$EXEN2$0$0 == 0x00cb
                           0000CB   823 _EXEN2	=	0x00cb
                           0000CC   824 G$TCLK$0$0 == 0x00cc
                           0000CC   825 _TCLK	=	0x00cc
                           0000CD   826 G$RCLK$0$0 == 0x00cd
                           0000CD   827 _RCLK	=	0x00cd
                           0000CE   828 G$EXF2$0$0 == 0x00ce
                           0000CE   829 _EXF2	=	0x00ce
                           0000CF   830 G$TF2$0$0 == 0x00cf
                           0000CF   831 _TF2	=	0x00cf
                           0000D0   832 G$P$0$0 == 0x00d0
                           0000D0   833 _P	=	0x00d0
                           0000D1   834 G$F1$0$0 == 0x00d1
                           0000D1   835 _F1	=	0x00d1
                           0000D2   836 G$OV$0$0 == 0x00d2
                           0000D2   837 _OV	=	0x00d2
                           0000D3   838 G$RS0$0$0 == 0x00d3
                           0000D3   839 _RS0	=	0x00d3
                           0000D4   840 G$RS1$0$0 == 0x00d4
                           0000D4   841 _RS1	=	0x00d4
                           0000D5   842 G$F0$0$0 == 0x00d5
                           0000D5   843 _F0	=	0x00d5
                           0000D6   844 G$AC$0$0 == 0x00d6
                           0000D6   845 _AC	=	0x00d6
                           0000D7   846 G$CY$0$0 == 0x00d7
                           0000D7   847 _CY	=	0x00d7
                           0000D8   848 G$CCF0$0$0 == 0x00d8
                           0000D8   849 _CCF0	=	0x00d8
                           0000D9   850 G$CCF1$0$0 == 0x00d9
                           0000D9   851 _CCF1	=	0x00d9
                           0000DA   852 G$CCF2$0$0 == 0x00da
                           0000DA   853 _CCF2	=	0x00da
                           0000DB   854 G$CCF3$0$0 == 0x00db
                           0000DB   855 _CCF3	=	0x00db
                           0000DC   856 G$CCF4$0$0 == 0x00dc
                           0000DC   857 _CCF4	=	0x00dc
                           0000DE   858 G$CR$0$0 == 0x00de
                           0000DE   859 _CR	=	0x00de
                           0000DF   860 G$CF$0$0 == 0x00df
                           0000DF   861 _CF	=	0x00df
                           0000E8   862 G$ADLJST$0$0 == 0x00e8
                           0000E8   863 _ADLJST	=	0x00e8
                           0000E8   864 G$AD0LJST$0$0 == 0x00e8
                           0000E8   865 _AD0LJST	=	0x00e8
                           0000E9   866 G$ADWINT$0$0 == 0x00e9
                           0000E9   867 _ADWINT	=	0x00e9
                           0000E9   868 G$AD0WINT$0$0 == 0x00e9
                           0000E9   869 _AD0WINT	=	0x00e9
                           0000EA   870 G$ADSTM0$0$0 == 0x00ea
                           0000EA   871 _ADSTM0	=	0x00ea
                           0000EA   872 G$AD0CM0$0$0 == 0x00ea
                           0000EA   873 _AD0CM0	=	0x00ea
                           0000EB   874 G$ADSTM1$0$0 == 0x00eb
                           0000EB   875 _ADSTM1	=	0x00eb
                           0000EB   876 G$AD0CM1$0$0 == 0x00eb
                           0000EB   877 _AD0CM1	=	0x00eb
                           0000EC   878 G$ADBUSY$0$0 == 0x00ec
                           0000EC   879 _ADBUSY	=	0x00ec
                           0000EC   880 G$AD0BUSY$0$0 == 0x00ec
                           0000EC   881 _AD0BUSY	=	0x00ec
                           0000ED   882 G$ADCINT$0$0 == 0x00ed
                           0000ED   883 _ADCINT	=	0x00ed
                           0000ED   884 G$AD0INT$0$0 == 0x00ed
                           0000ED   885 _AD0INT	=	0x00ed
                           0000EE   886 G$ADCTM$0$0 == 0x00ee
                           0000EE   887 _ADCTM	=	0x00ee
                           0000EE   888 G$AD0TM$0$0 == 0x00ee
                           0000EE   889 _AD0TM	=	0x00ee
                           0000EF   890 G$ADCEN$0$0 == 0x00ef
                           0000EF   891 _ADCEN	=	0x00ef
                           0000EF   892 G$AD0EN$0$0 == 0x00ef
                           0000EF   893 _AD0EN	=	0x00ef
                           0000F8   894 G$SPIEN$0$0 == 0x00f8
                           0000F8   895 _SPIEN	=	0x00f8
                           0000F9   896 G$MSTEN$0$0 == 0x00f9
                           0000F9   897 _MSTEN	=	0x00f9
                           0000FA   898 G$SLVSEL$0$0 == 0x00fa
                           0000FA   899 _SLVSEL	=	0x00fa
                           0000FB   900 G$TXBSY$0$0 == 0x00fb
                           0000FB   901 _TXBSY	=	0x00fb
                           0000FC   902 G$RXOVRN$0$0 == 0x00fc
                           0000FC   903 _RXOVRN	=	0x00fc
                           0000FD   904 G$MODF$0$0 == 0x00fd
                           0000FD   905 _MODF	=	0x00fd
                           0000FE   906 G$WCOL$0$0 == 0x00fe
                           0000FE   907 _WCOL	=	0x00fe
                           0000FF   908 G$SPIF$0$0 == 0x00ff
                           0000FF   909 _SPIF	=	0x00ff
                           0000A0   910 G$SS0$0$0 == 0x00a0
                           0000A0   911 _SS0	=	0x00a0
                           0000A1   912 G$SS1$0$0 == 0x00a1
                           0000A1   913 _SS1	=	0x00a1
                           0000B0   914 G$PB0$0$0 == 0x00b0
                           0000B0   915 _PB0	=	0x00b0
                           0000B2   916 G$LED3$0$0 == 0x00b2
                           0000B2   917 _LED3	=	0x00b2
                           0000B3   918 G$BILED0$0$0 == 0x00b3
                           0000B3   919 _BILED0	=	0x00b3
                           0000B4   920 G$BILED1$0$0 == 0x00b4
                           0000B4   921 _BILED1	=	0x00b4
                           0000B5   922 G$LED1$0$0 == 0x00b5
                           0000B5   923 _LED1	=	0x00b5
                           0000B6   924 G$LED0$0$0 == 0x00b6
                           0000B6   925 _LED0	=	0x00b6
                           0000B7   926 G$LED2$0$0 == 0x00b7
                           0000B7   927 _LED2	=	0x00b7
                                    928 ;--------------------------------------------------------
                                    929 ; overlayable register banks
                                    930 ;--------------------------------------------------------
                                    931 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        932 	.ds 8
                                    933 ;--------------------------------------------------------
                                    934 ; internal ram data
                                    935 ;--------------------------------------------------------
                                    936 	.area DSEG    (DATA)
                           000000   937 G$counts$0$0==.
      000000                        938 _counts::
      000000                        939 	.ds 2
                           000002   940 G$var$0$0==.
      000002                        941 _var::
      000002                        942 	.ds 2
                           000004   943 G$round$0$0==.
      000004                        944 _round::
      000004                        945 	.ds 2
                           000006   946 G$points$0$0==.
      000006                        947 _points::
      000006                        948 	.ds 2
                           000008   949 G$totalPoints$0$0==.
      000008                        950 _totalPoints::
      000008                        951 	.ds 2
                           00000A   952 G$randomNumber$0$0==.
      00000A                        953 _randomNumber::
      00000A                        954 	.ds 2
                           00000C   955 G$length$0$0==.
      00000C                        956 _length::
      00000C                        957 	.ds 1
                           00000D   958 G$ADC_value$0$0==.
      00000D                        959 _ADC_value::
      00000D                        960 	.ds 2
                           00000F   961 G$error$0$0==.
      00000F                        962 _error::
      00000F                        963 	.ds 2
                           000011   964 G$scaledValue$0$0==.
      000011                        965 _scaledValue::
      000011                        966 	.ds 2
                           000013   967 G$score$0$0==.
      000013                        968 _score::
      000013                        969 	.ds 2
                           000015   970 G$buttonPresses$0$0==.
      000015                        971 _buttonPresses::
      000015                        972 	.ds 2
                           000017   973 G$tmpCount$0$0==.
      000017                        974 _tmpCount::
      000017                        975 	.ds 2
                           000019   976 G$overflows$0$0==.
      000019                        977 _overflows::
      000019                        978 	.ds 10
                           000023   979 G$numLEDs$0$0==.
      000023                        980 _numLEDs::
      000023                        981 	.ds 2
                           000025   982 G$tries$0$0==.
      000025                        983 _tries::
      000025                        984 	.ds 2
                           000027   985 LLab2.aligned_alloc$size$1$39==.
      000027                        986 _aligned_alloc_PARM_2:
      000027                        987 	.ds 2
                           000029   988 LLab2.Compare_Answer$randomNumber$1$90==.
      000029                        989 _Compare_Answer_PARM_2:
      000029                        990 	.ds 1
                           00002A   991 LLab2.Mode_One$ADC_Value$1$102==.
      00002A                        992 _Mode_One_ADC_Value_1_102:
      00002A                        993 	.ds 2
                           00002C   994 LLab2.Mode_One$Error$1$102==.
      00002C                        995 _Mode_One_Error_1_102:
      00002C                        996 	.ds 1
                           00002D   997 LLab2.SetAllLEDs$sloc0$1$0==.
      00002D                        998 _SetAllLEDs_sloc0_1_0:
      00002D                        999 	.ds 1
                           00002E  1000 LLab2.CompareVals$expected$1$180==.
      00002E                       1001 _CompareVals_PARM_2:
      00002E                       1002 	.ds 1
                                   1003 ;--------------------------------------------------------
                                   1004 ; overlayable items in internal ram 
                                   1005 ;--------------------------------------------------------
                                   1006 	.area	OSEG    (OVR,DATA)
                                   1007 	.area	OSEG    (OVR,DATA)
                                   1008 	.area	OSEG    (OVR,DATA)
                           000000  1009 LLab2.Pot_Scaling$mode$1$86==.
      000000                       1010 _Pot_Scaling_PARM_2:
      000000                       1011 	.ds 1
                                   1012 	.area	OSEG    (OVR,DATA)
                                   1013 	.area	OSEG    (OVR,DATA)
                           000000  1014 LLab2.MapADC$low$1$164==.
      000000                       1015 _MapADC_PARM_2:
      000000                       1016 	.ds 1
                           000001  1017 LLab2.MapADC$high$1$164==.
      000001                       1018 _MapADC_PARM_3:
      000001                       1019 	.ds 1
                                   1020 	.area	OSEG    (OVR,DATA)
                                   1021 	.area	OSEG    (OVR,DATA)
                                   1022 ;--------------------------------------------------------
                                   1023 ; Stack segment in internal ram 
                                   1024 ;--------------------------------------------------------
                                   1025 	.area	SSEG
      000000                       1026 __start__stack:
      000000                       1027 	.ds	1
                                   1028 
                                   1029 ;--------------------------------------------------------
                                   1030 ; indirectly addressable internal ram data
                                   1031 ;--------------------------------------------------------
                                   1032 	.area ISEG    (DATA)
                                   1033 ;--------------------------------------------------------
                                   1034 ; absolute internal ram data
                                   1035 ;--------------------------------------------------------
                                   1036 	.area IABS    (ABS,DATA)
                                   1037 	.area IABS    (ABS,DATA)
                                   1038 ;--------------------------------------------------------
                                   1039 ; bit data
                                   1040 ;--------------------------------------------------------
                                   1041 	.area BSEG    (BIT)
                                   1042 ;--------------------------------------------------------
                                   1043 ; paged external ram data
                                   1044 ;--------------------------------------------------------
                                   1045 	.area PSEG    (PAG,XDATA)
                                   1046 ;--------------------------------------------------------
                                   1047 ; external ram data
                                   1048 ;--------------------------------------------------------
                                   1049 	.area XSEG    (XDATA)
                                   1050 ;--------------------------------------------------------
                                   1051 ; absolute external ram data
                                   1052 ;--------------------------------------------------------
                                   1053 	.area XABS    (ABS,XDATA)
                                   1054 ;--------------------------------------------------------
                                   1055 ; external initialized ram data
                                   1056 ;--------------------------------------------------------
                                   1057 	.area XISEG   (XDATA)
                                   1058 	.area HOME    (CODE)
                                   1059 	.area GSINIT0 (CODE)
                                   1060 	.area GSINIT1 (CODE)
                                   1061 	.area GSINIT2 (CODE)
                                   1062 	.area GSINIT3 (CODE)
                                   1063 	.area GSINIT4 (CODE)
                                   1064 	.area GSINIT5 (CODE)
                                   1065 	.area GSINIT  (CODE)
                                   1066 	.area GSFINAL (CODE)
                                   1067 	.area CSEG    (CODE)
                                   1068 ;--------------------------------------------------------
                                   1069 ; interrupt vector 
                                   1070 ;--------------------------------------------------------
                                   1071 	.area HOME    (CODE)
      000000                       1072 __interrupt_vect:
      000000 02r00r00         [24] 1073 	ljmp	__sdcc_gsinit_startup
      000003 32               [24] 1074 	reti
      000004                       1075 	.ds	7
      00000B 02r0Ar91         [24] 1076 	ljmp	_Timer0_ISR
                                   1077 ;--------------------------------------------------------
                                   1078 ; global & static initialisations
                                   1079 ;--------------------------------------------------------
                                   1080 	.area HOME    (CODE)
                                   1081 	.area GSINIT  (CODE)
                                   1082 	.area GSFINAL (CODE)
                                   1083 	.area GSINIT  (CODE)
                                   1084 	.globl __sdcc_gsinit_startup
                                   1085 	.globl __sdcc_program_startup
                                   1086 	.globl __start__stack
                                   1087 	.globl __mcs51_genXINIT
                                   1088 	.globl __mcs51_genXRAMCLEAR
                                   1089 	.globl __mcs51_genRAMCLEAR
                           000000  1090 	C$Lab2.c$50$1$181 ==.
                                   1091 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:50: unsigned int counts = 0;
      000000 E4               [12] 1092 	clr	a
      000001 F5*00            [12] 1093 	mov	_counts,a
      000003 F5*01            [12] 1094 	mov	(_counts + 1),a
                           000005  1095 	C$Lab2.c$63$1$181 ==.
                                   1096 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:63: int overflows[5] = {508,457,413,372,339}; // create an array that hold overflows values for 1.5, 1.35, 1.22, 1.1, and 1 second respectively;
      000005 75*19 FC         [24] 1097 	mov	(_overflows + 0),#0xfc
      000008 75*1A 01         [24] 1098 	mov	(_overflows + 1),#0x01
      00000B 75*1B C9         [24] 1099 	mov	((_overflows + 0x0002) + 0),#0xc9
      00000E 75*1C 01         [24] 1100 	mov	((_overflows + 0x0002) + 1),#0x01
      000011 75*1D 9D         [24] 1101 	mov	((_overflows + 0x0004) + 0),#0x9d
      000014 75*1E 01         [24] 1102 	mov	((_overflows + 0x0004) + 1),#0x01
      000017 75*1F 74         [24] 1103 	mov	((_overflows + 0x0006) + 0),#0x74
      00001A 75*20 01         [24] 1104 	mov	((_overflows + 0x0006) + 1),#0x01
      00001D 75*21 53         [24] 1105 	mov	((_overflows + 0x0008) + 0),#0x53
      000020 75*22 01         [24] 1106 	mov	((_overflows + 0x0008) + 1),#0x01
                                   1107 	.area GSFINAL (CODE)
      000000 02r00r0E         [24] 1108 	ljmp	__sdcc_program_startup
                                   1109 ;--------------------------------------------------------
                                   1110 ; Home
                                   1111 ;--------------------------------------------------------
                                   1112 	.area HOME    (CODE)
                                   1113 	.area HOME    (CODE)
      00000E                       1114 __sdcc_program_startup:
      00000E 02r00r7B         [24] 1115 	ljmp	_main
                                   1116 ;	return from main will return to caller
                                   1117 ;--------------------------------------------------------
                                   1118 ; code
                                   1119 ;--------------------------------------------------------
                                   1120 	.area CSEG    (CODE)
                                   1121 ;------------------------------------------------------------
                                   1122 ;Allocation info for local variables in function 'SYSCLK_Init'
                                   1123 ;------------------------------------------------------------
                                   1124 ;i                         Allocated to registers r6 r7 
                                   1125 ;------------------------------------------------------------
                           000000  1126 	G$SYSCLK_Init$0$0 ==.
                           000000  1127 	C$c8051_SDCC.h$62$0$0 ==.
                                   1128 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:62: void SYSCLK_Init(void)
                                   1129 ;	-----------------------------------------
                                   1130 ;	 function SYSCLK_Init
                                   1131 ;	-----------------------------------------
      000000                       1132 _SYSCLK_Init:
                           000007  1133 	ar7 = 0x07
                           000006  1134 	ar6 = 0x06
                           000005  1135 	ar5 = 0x05
                           000004  1136 	ar4 = 0x04
                           000003  1137 	ar3 = 0x03
                           000002  1138 	ar2 = 0x02
                           000001  1139 	ar1 = 0x01
                           000000  1140 	ar0 = 0x00
                           000000  1141 	C$c8051_SDCC.h$66$1$2 ==.
                                   1142 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:66: OSCXCN = 0x67;                      // start external oscillator with
      000000 75 B1 67         [24] 1143 	mov	_OSCXCN,#0x67
                           000003  1144 	C$c8051_SDCC.h$69$1$2 ==.
                                   1145 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:69: for (i=0; i < 256; i++);            // wait for oscillator to start
      000003 7E 00            [12] 1146 	mov	r6,#0x00
      000005 7F 01            [12] 1147 	mov	r7,#0x01
      000007                       1148 00107$:
      000007 EE               [12] 1149 	mov	a,r6
      000008 24 FF            [12] 1150 	add	a,#0xff
      00000A FC               [12] 1151 	mov	r4,a
      00000B EF               [12] 1152 	mov	a,r7
      00000C 34 FF            [12] 1153 	addc	a,#0xff
      00000E FD               [12] 1154 	mov	r5,a
      00000F 8C 06            [24] 1155 	mov	ar6,r4
      000011 8D 07            [24] 1156 	mov	ar7,r5
      000013 EC               [12] 1157 	mov	a,r4
      000014 4D               [12] 1158 	orl	a,r5
      000015 70 F0            [24] 1159 	jnz	00107$
                           000017  1160 	C$c8051_SDCC.h$71$1$2 ==.
                                   1161 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:71: while (!(OSCXCN & 0x80));           // Wait for crystal osc. to settle
      000017                       1162 00102$:
      000017 E5 B1            [12] 1163 	mov	a,_OSCXCN
      000019 30 E7 FB         [24] 1164 	jnb	acc.7,00102$
                           00001C  1165 	C$c8051_SDCC.h$73$1$2 ==.
                                   1166 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:73: OSCICN = 0x88;                      // select external oscillator as SYSCLK
      00001C 75 B2 88         [24] 1167 	mov	_OSCICN,#0x88
                           00001F  1168 	C$c8051_SDCC.h$76$1$2 ==.
                           00001F  1169 	XG$SYSCLK_Init$0$0 ==.
      00001F 22               [24] 1170 	ret
                                   1171 ;------------------------------------------------------------
                                   1172 ;Allocation info for local variables in function 'UART0_Init'
                                   1173 ;------------------------------------------------------------
                           000020  1174 	G$UART0_Init$0$0 ==.
                           000020  1175 	C$c8051_SDCC.h$84$1$2 ==.
                                   1176 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:84: void UART0_Init(void)
                                   1177 ;	-----------------------------------------
                                   1178 ;	 function UART0_Init
                                   1179 ;	-----------------------------------------
      000020                       1180 _UART0_Init:
                           000020  1181 	C$c8051_SDCC.h$86$1$4 ==.
                                   1182 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:86: SCON0  = 0x50;                      // SCON0: mode 1, 8-bit UART, enable RX
      000020 75 98 50         [24] 1183 	mov	_SCON0,#0x50
                           000023  1184 	C$c8051_SDCC.h$87$1$4 ==.
                                   1185 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:87: TMOD   = 0x20;                      // TMOD: timer 1, mode 2, 8-bit reload
      000023 75 89 20         [24] 1186 	mov	_TMOD,#0x20
                           000026  1187 	C$c8051_SDCC.h$88$1$4 ==.
                                   1188 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:88: TH1    = 0xFF&-(SYSCLK/BAUDRATE/16);     // set Timer1 reload value for baudrate
      000026 75 8D DC         [24] 1189 	mov	_TH1,#0xdc
                           000029  1190 	C$c8051_SDCC.h$89$1$4 ==.
                                   1191 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:89: TR1    = 1;                         // start Timer1
      000029 D2 8E            [12] 1192 	setb	_TR1
                           00002B  1193 	C$c8051_SDCC.h$90$1$4 ==.
                                   1194 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:90: CKCON |= 0x10;                      // Timer1 uses SYSCLK as time base
      00002B 43 8E 10         [24] 1195 	orl	_CKCON,#0x10
                           00002E  1196 	C$c8051_SDCC.h$91$1$4 ==.
                                   1197 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:91: PCON  |= 0x80;                      // SMOD00 = 1 (disable baud rate 
      00002E 43 87 80         [24] 1198 	orl	_PCON,#0x80
                           000031  1199 	C$c8051_SDCC.h$93$1$4 ==.
                                   1200 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:93: TI0    = 1;                         // Indicate TX0 ready
      000031 D2 99            [12] 1201 	setb	_TI0
                           000033  1202 	C$c8051_SDCC.h$94$1$4 ==.
                                   1203 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:94: P0MDOUT |= 0x01;                    // Set TX0 to push/pull
      000033 43 A4 01         [24] 1204 	orl	_P0MDOUT,#0x01
                           000036  1205 	C$c8051_SDCC.h$95$1$4 ==.
                           000036  1206 	XG$UART0_Init$0$0 ==.
      000036 22               [24] 1207 	ret
                                   1208 ;------------------------------------------------------------
                                   1209 ;Allocation info for local variables in function 'Sys_Init'
                                   1210 ;------------------------------------------------------------
                           000037  1211 	G$Sys_Init$0$0 ==.
                           000037  1212 	C$c8051_SDCC.h$103$1$4 ==.
                                   1213 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:103: void Sys_Init(void)
                                   1214 ;	-----------------------------------------
                                   1215 ;	 function Sys_Init
                                   1216 ;	-----------------------------------------
      000037                       1217 _Sys_Init:
                           000037  1218 	C$c8051_SDCC.h$105$1$6 ==.
                                   1219 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:105: WDTCN = 0xde;			// disable watchdog timer
      000037 75 FF DE         [24] 1220 	mov	_WDTCN,#0xde
                           00003A  1221 	C$c8051_SDCC.h$106$1$6 ==.
                                   1222 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:106: WDTCN = 0xad;
      00003A 75 FF AD         [24] 1223 	mov	_WDTCN,#0xad
                           00003D  1224 	C$c8051_SDCC.h$108$1$6 ==.
                                   1225 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:108: SYSCLK_Init();			// initialize oscillator
      00003D 12r00r00         [24] 1226 	lcall	_SYSCLK_Init
                           000040  1227 	C$c8051_SDCC.h$109$1$6 ==.
                                   1228 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:109: UART0_Init();			// initialize UART0
      000040 12r00r20         [24] 1229 	lcall	_UART0_Init
                           000043  1230 	C$c8051_SDCC.h$111$1$6 ==.
                                   1231 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:111: XBR0 |= 0x04;
      000043 43 E1 04         [24] 1232 	orl	_XBR0,#0x04
                           000046  1233 	C$c8051_SDCC.h$112$1$6 ==.
                                   1234 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:112: XBR2 |= 0x40;                    	// Enable crossbar and weak pull-ups
      000046 43 E3 40         [24] 1235 	orl	_XBR2,#0x40
                           000049  1236 	C$c8051_SDCC.h$113$1$6 ==.
                           000049  1237 	XG$Sys_Init$0$0 ==.
      000049 22               [24] 1238 	ret
                                   1239 ;------------------------------------------------------------
                                   1240 ;Allocation info for local variables in function 'putchar'
                                   1241 ;------------------------------------------------------------
                                   1242 ;c                         Allocated to registers r7 
                                   1243 ;------------------------------------------------------------
                           00004A  1244 	G$putchar$0$0 ==.
                           00004A  1245 	C$c8051_SDCC.h$129$1$6 ==.
                                   1246 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:129: void putchar(char c)
                                   1247 ;	-----------------------------------------
                                   1248 ;	 function putchar
                                   1249 ;	-----------------------------------------
      00004A                       1250 _putchar:
      00004A AF 82            [24] 1251 	mov	r7,dpl
                           00004C  1252 	C$c8051_SDCC.h$132$1$8 ==.
                                   1253 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:132: while (!TI0); 
      00004C                       1254 00101$:
                           00004C  1255 	C$c8051_SDCC.h$133$1$8 ==.
                                   1256 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:133: TI0 = 0;
      00004C 10 99 02         [24] 1257 	jbc	_TI0,00112$
      00004F 80 FB            [24] 1258 	sjmp	00101$
      000051                       1259 00112$:
                           000051  1260 	C$c8051_SDCC.h$134$1$8 ==.
                                   1261 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:134: SBUF0 = c;
      000051 8F 99            [24] 1262 	mov	_SBUF0,r7
                           000053  1263 	C$c8051_SDCC.h$135$1$8 ==.
                           000053  1264 	XG$putchar$0$0 ==.
      000053 22               [24] 1265 	ret
                                   1266 ;------------------------------------------------------------
                                   1267 ;Allocation info for local variables in function 'getchar'
                                   1268 ;------------------------------------------------------------
                                   1269 ;c                         Allocated to registers r7 
                                   1270 ;------------------------------------------------------------
                           000054  1271 	G$getchar$0$0 ==.
                           000054  1272 	C$c8051_SDCC.h$154$1$8 ==.
                                   1273 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:154: char getchar(void)
                                   1274 ;	-----------------------------------------
                                   1275 ;	 function getchar
                                   1276 ;	-----------------------------------------
      000054                       1277 _getchar:
                           000054  1278 	C$c8051_SDCC.h$157$1$10 ==.
                                   1279 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:157: while (!RI0);
      000054                       1280 00101$:
                           000054  1281 	C$c8051_SDCC.h$158$1$10 ==.
                                   1282 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:158: RI0 = 0;
      000054 10 98 02         [24] 1283 	jbc	_RI0,00112$
      000057 80 FB            [24] 1284 	sjmp	00101$
      000059                       1285 00112$:
                           000059  1286 	C$c8051_SDCC.h$159$1$10 ==.
                                   1287 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:159: c = SBUF0;
      000059 AF 99            [24] 1288 	mov	r7,_SBUF0
                           00005B  1289 	C$c8051_SDCC.h$160$1$10 ==.
                                   1290 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:160: putchar(c);                          // echo to terminal
      00005B 8F 82            [24] 1291 	mov	dpl,r7
      00005D C0 07            [24] 1292 	push	ar7
      00005F 12r00r4A         [24] 1293 	lcall	_putchar
      000062 D0 07            [24] 1294 	pop	ar7
                           000064  1295 	C$c8051_SDCC.h$161$1$10 ==.
                                   1296 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:161: return c;
      000064 8F 82            [24] 1297 	mov	dpl,r7
                           000066  1298 	C$c8051_SDCC.h$162$1$10 ==.
                           000066  1299 	XG$getchar$0$0 ==.
      000066 22               [24] 1300 	ret
                                   1301 ;------------------------------------------------------------
                                   1302 ;Allocation info for local variables in function 'getchar_nw'
                                   1303 ;------------------------------------------------------------
                                   1304 ;c                         Allocated to registers 
                                   1305 ;------------------------------------------------------------
                           000067  1306 	G$getchar_nw$0$0 ==.
                           000067  1307 	C$c8051_SDCC.h$168$1$10 ==.
                                   1308 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:168: char getchar_nw(void)
                                   1309 ;	-----------------------------------------
                                   1310 ;	 function getchar_nw
                                   1311 ;	-----------------------------------------
      000067                       1312 _getchar_nw:
                           000067  1313 	C$c8051_SDCC.h$171$1$12 ==.
                                   1314 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:171: if (!RI0) return 0xFF;
      000067 20 98 05         [24] 1315 	jb	_RI0,00102$
      00006A 75 82 FF         [24] 1316 	mov	dpl,#0xff
      00006D 80 0B            [24] 1317 	sjmp	00104$
      00006F                       1318 00102$:
                           00006F  1319 	C$c8051_SDCC.h$174$2$13 ==.
                                   1320 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:174: RI0 = 0;
      00006F C2 98            [12] 1321 	clr	_RI0
                           000071  1322 	C$c8051_SDCC.h$175$2$13 ==.
                                   1323 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:175: c = SBUF0;
      000071 85 99 82         [24] 1324 	mov	dpl,_SBUF0
                           000074  1325 	C$c8051_SDCC.h$176$2$13 ==.
                                   1326 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:176: putchar(c);                          // echo to terminal
      000074 12r00r4A         [24] 1327 	lcall	_putchar
                           000077  1328 	C$c8051_SDCC.h$177$2$13 ==.
                                   1329 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:177: return SBUF0;
      000077 85 99 82         [24] 1330 	mov	dpl,_SBUF0
      00007A                       1331 00104$:
                           00007A  1332 	C$c8051_SDCC.h$179$1$12 ==.
                           00007A  1333 	XG$getchar_nw$0$0 ==.
      00007A 22               [24] 1334 	ret
                                   1335 ;------------------------------------------------------------
                                   1336 ;Allocation info for local variables in function 'main'
                                   1337 ;------------------------------------------------------------
                           00007B  1338 	G$main$0$0 ==.
                           00007B  1339 	C$Lab2.c$68$1$12 ==.
                                   1340 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:68: void main(void)
                                   1341 ;	-----------------------------------------
                                   1342 ;	 function main
                                   1343 ;	-----------------------------------------
      00007B                       1344 _main:
                           00007B  1345 	C$Lab2.c$70$1$69 ==.
                                   1346 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:70: Sys_Init();      // System Initialization
      00007B 12r00r37         [24] 1347 	lcall	_Sys_Init
                           00007E  1348 	C$Lab2.c$71$1$69 ==.
                                   1349 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:71: Port_Init();     // Initialize ports 2 and 3 
      00007E 12r01r46         [24] 1350 	lcall	_Port_Init
                           000081  1351 	C$Lab2.c$72$1$69 ==.
                                   1352 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:72: Interrupt_Init(); // Initialize interrupts
      000081 12r01r67         [24] 1353 	lcall	_Interrupt_Init
                           000084  1354 	C$Lab2.c$73$1$69 ==.
                                   1355 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:73: Timer_Init();    // Initialize Timer 0 
      000084 12r01r56         [24] 1356 	lcall	_Timer_Init
                           000087  1357 	C$Lab2.c$74$1$69 ==.
                                   1358 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:74: ADC1_Init();	// Initialize ADC1
      000087 12r01r6D         [24] 1359 	lcall	_ADC1_Init
                           00008A  1360 	C$Lab2.c$76$1$69 ==.
                                   1361 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:76: while(1) {
      00008A                       1362 00131$:
                           00008A  1363 	C$Lab2.c$77$2$70 ==.
                                   1364 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:77: printf("\r\n\nSelect a mode using the slide switches.\r\nPress the pushbutton to select a mode, push it again to confirm.");
      00008A 74r00            [12] 1365 	mov	a,#___str_0
      00008C C0 E0            [24] 1366 	push	acc
      00008E 74s00            [12] 1367 	mov	a,#(___str_0 >> 8)
      000090 C0 E0            [24] 1368 	push	acc
      000092 74 80            [12] 1369 	mov	a,#0x80
      000094 C0 E0            [24] 1370 	push	acc
      000096 12r00r00         [24] 1371 	lcall	_printf
      000099 15 81            [12] 1372 	dec	sp
      00009B 15 81            [12] 1373 	dec	sp
      00009D 15 81            [12] 1374 	dec	sp
                           00009F  1375 	C$Lab2.c$79$2$70 ==.
                                   1376 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:79: TR0 = 1;
      00009F D2 8C            [12] 1377 	setb	_TR0
                           0000A1  1378 	C$Lab2.c$81$2$70 ==.
                                   1379 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:81: while(DebounceButton()==0);
      0000A1                       1380 00101$:
      0000A1 12r0Br3F         [24] 1381 	lcall	_DebounceButton
      0000A4 E5 82            [12] 1382 	mov	a,dpl
      0000A6 60 F9            [24] 1383 	jz	00101$
                           0000A8  1384 	C$Lab2.c$83$4$75 ==.
                                   1385 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:83: do{
      0000A8                       1386 00116$:
                           0000A8  1387 	C$Lab2.c$84$3$71 ==.
                                   1388 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:84: if (!SS0 && SS1) {
      0000A8 20 A0 1A         [24] 1389 	jb	_SS0,00113$
      0000AB 30 A1 17         [24] 1390 	jnb	_SS1,00113$
                           0000AE  1391 	C$Lab2.c$85$4$72 ==.
                                   1392 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:85: printf("\r\nMode 1: Slide switch 1 is ON, slide switch 2 is OFF");
      0000AE 74r6D            [12] 1393 	mov	a,#___str_1
      0000B0 C0 E0            [24] 1394 	push	acc
      0000B2 74s00            [12] 1395 	mov	a,#(___str_1 >> 8)
      0000B4 C0 E0            [24] 1396 	push	acc
      0000B6 74 80            [12] 1397 	mov	a,#0x80
      0000B8 C0 E0            [24] 1398 	push	acc
      0000BA 12r00r00         [24] 1399 	lcall	_printf
      0000BD 15 81            [12] 1400 	dec	sp
      0000BF 15 81            [12] 1401 	dec	sp
      0000C1 15 81            [12] 1402 	dec	sp
      0000C3 80 4F            [24] 1403 	sjmp	00117$
      0000C5                       1404 00113$:
                           0000C5  1405 	C$Lab2.c$88$3$71 ==.
                                   1406 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:88: else if (SS0 && !SS1) {
      0000C5 30 A0 1A         [24] 1407 	jnb	_SS0,00109$
      0000C8 20 A1 17         [24] 1408 	jb	_SS1,00109$
                           0000CB  1409 	C$Lab2.c$89$4$73 ==.
                                   1410 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:89: printf("\r\nMode 2: Slide switch 1 is OFF, slide switch 2 is ON");
      0000CB 74rA3            [12] 1411 	mov	a,#___str_2
      0000CD C0 E0            [24] 1412 	push	acc
      0000CF 74s00            [12] 1413 	mov	a,#(___str_2 >> 8)
      0000D1 C0 E0            [24] 1414 	push	acc
      0000D3 74 80            [12] 1415 	mov	a,#0x80
      0000D5 C0 E0            [24] 1416 	push	acc
      0000D7 12r00r00         [24] 1417 	lcall	_printf
      0000DA 15 81            [12] 1418 	dec	sp
      0000DC 15 81            [12] 1419 	dec	sp
      0000DE 15 81            [12] 1420 	dec	sp
      0000E0 80 32            [24] 1421 	sjmp	00117$
      0000E2                       1422 00109$:
                           0000E2  1423 	C$Lab2.c$92$3$71 ==.
                                   1424 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:92: else if (!SS0 && !SS1) {
      0000E2 20 A0 1A         [24] 1425 	jb	_SS0,00105$
      0000E5 20 A1 17         [24] 1426 	jb	_SS1,00105$
                           0000E8  1427 	C$Lab2.c$93$4$74 ==.
                                   1428 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:93: printf("\r\nMode 3: Slide switch 1 is ON, slide switch 2 is ON");
      0000E8 74rD9            [12] 1429 	mov	a,#___str_3
      0000EA C0 E0            [24] 1430 	push	acc
      0000EC 74s00            [12] 1431 	mov	a,#(___str_3 >> 8)
      0000EE C0 E0            [24] 1432 	push	acc
      0000F0 74 80            [12] 1433 	mov	a,#0x80
      0000F2 C0 E0            [24] 1434 	push	acc
      0000F4 12r00r00         [24] 1435 	lcall	_printf
      0000F7 15 81            [12] 1436 	dec	sp
      0000F9 15 81            [12] 1437 	dec	sp
      0000FB 15 81            [12] 1438 	dec	sp
      0000FD 80 15            [24] 1439 	sjmp	00117$
      0000FF                       1440 00105$:
                           0000FF  1441 	C$Lab2.c$97$4$75 ==.
                                   1442 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:97: printf("\r\nOFF: Slide switch 1 is OFF, slide switch 2 is OFF");
      0000FF 74r0E            [12] 1443 	mov	a,#___str_4
      000101 C0 E0            [24] 1444 	push	acc
      000103 74s01            [12] 1445 	mov	a,#(___str_4 >> 8)
      000105 C0 E0            [24] 1446 	push	acc
      000107 74 80            [12] 1447 	mov	a,#0x80
      000109 C0 E0            [24] 1448 	push	acc
      00010B 12r00r00         [24] 1449 	lcall	_printf
      00010E 15 81            [12] 1450 	dec	sp
      000110 15 81            [12] 1451 	dec	sp
      000112 15 81            [12] 1452 	dec	sp
      000114                       1453 00117$:
                           000114  1454 	C$Lab2.c$99$2$70 ==.
                                   1455 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:99: } while(DebounceButton()==0);
      000114 12r0Br3F         [24] 1456 	lcall	_DebounceButton
      000117 E5 82            [12] 1457 	mov	a,dpl
      000119 60 8D            [24] 1458 	jz	00116$
                           00011B  1459 	C$Lab2.c$103$2$70 ==.
                                   1460 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:103: if (!SS0 && SS1)
      00011B 20 A0 09         [24] 1461 	jb	_SS0,00127$
      00011E 30 A1 06         [24] 1462 	jnb	_SS1,00127$
                           000121  1463 	C$Lab2.c$104$2$70 ==.
                                   1464 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:104: Mode_One();
      000121 12r02r44         [24] 1465 	lcall	_Mode_One
      000124 02r00r8A         [24] 1466 	ljmp	00131$
      000127                       1467 00127$:
                           000127  1468 	C$Lab2.c$105$2$70 ==.
                                   1469 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:105: else if (SS0 && !SS1)
      000127 30 A0 09         [24] 1470 	jnb	_SS0,00123$
      00012A 20 A1 06         [24] 1471 	jb	_SS1,00123$
                           00012D  1472 	C$Lab2.c$106$2$70 ==.
                                   1473 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:106: Mode_Two();
      00012D 12r06r82         [24] 1474 	lcall	_Mode_Two
      000130 02r00r8A         [24] 1475 	ljmp	00131$
      000133                       1476 00123$:
                           000133  1477 	C$Lab2.c$107$2$70 ==.
                                   1478 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:107: else if (!SS0 && !SS1)
      000133 30 A0 03         [24] 1479 	jnb	_SS0,00197$
      000136 02r00r8A         [24] 1480 	ljmp	00131$
      000139                       1481 00197$:
      000139 30 A1 03         [24] 1482 	jnb	_SS1,00198$
      00013C 02r00r8A         [24] 1483 	ljmp	00131$
      00013F                       1484 00198$:
                           00013F  1485 	C$Lab2.c$108$2$70 ==.
                                   1486 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:108: Mode_Three();
      00013F 12r08r80         [24] 1487 	lcall	_Mode_Three
      000142 02r00r8A         [24] 1488 	ljmp	00131$
                           000145  1489 	C$Lab2.c$110$1$69 ==.
                           000145  1490 	XG$main$0$0 ==.
      000145 22               [24] 1491 	ret
                                   1492 ;------------------------------------------------------------
                                   1493 ;Allocation info for local variables in function 'Port_Init'
                                   1494 ;------------------------------------------------------------
                           000146  1495 	G$Port_Init$0$0 ==.
                           000146  1496 	C$Lab2.c$114$1$69 ==.
                                   1497 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:114: void Port_Init(void)
                                   1498 ;	-----------------------------------------
                                   1499 ;	 function Port_Init
                                   1500 ;	-----------------------------------------
      000146                       1501 _Port_Init:
                           000146  1502 	C$Lab2.c$118$1$77 ==.
                                   1503 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:118: P3MDOUT |= 0xFC; // set Port 3 output pins to push-pull mode 
      000146 43 A7 FC         [24] 1504 	orl	_P3MDOUT,#0xfc
                           000149  1505 	C$Lab2.c$119$1$77 ==.
                                   1506 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:119: P3MDOUT &= 0xFE; // set Port 3 input pins to open drain mode
      000149 53 A7 FE         [24] 1507 	anl	_P3MDOUT,#0xfe
                           00014C  1508 	C$Lab2.c$120$1$77 ==.
                                   1509 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:120: P3 |= 0x01; // set Port 3 input pins to high impedance state
      00014C 43 B0 01         [24] 1510 	orl	_P3,#0x01
                           00014F  1511 	C$Lab2.c$123$1$77 ==.
                                   1512 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:123: P2MDOUT &= 0xFC; // set Port 2 input pins to open drain mode
      00014F 53 A6 FC         [24] 1513 	anl	_P2MDOUT,#0xfc
                           000152  1514 	C$Lab2.c$124$1$77 ==.
                                   1515 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:124: P2 |= 0x03; // set Port 2 input pins to high impedance state
      000152 43 A0 03         [24] 1516 	orl	_P2,#0x03
                           000155  1517 	C$Lab2.c$126$1$77 ==.
                           000155  1518 	XG$Port_Init$0$0 ==.
      000155 22               [24] 1519 	ret
                                   1520 ;------------------------------------------------------------
                                   1521 ;Allocation info for local variables in function 'Timer_Init'
                                   1522 ;------------------------------------------------------------
                           000156  1523 	G$Timer_Init$0$0 ==.
                           000156  1524 	C$Lab2.c$129$1$77 ==.
                                   1525 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:129: void Timer_Init(void)
                                   1526 ;	-----------------------------------------
                                   1527 ;	 function Timer_Init
                                   1528 ;	-----------------------------------------
      000156                       1529 _Timer_Init:
                           000156  1530 	C$Lab2.c$132$1$79 ==.
                                   1531 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:132: CKCON |= 0x08;  // Timer0 uses SYSCLK as source
      000156 43 8E 08         [24] 1532 	orl	_CKCON,#0x08
                           000159  1533 	C$Lab2.c$133$1$79 ==.
                                   1534 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:133: TMOD &= 0xF0;   // clear the 4 least significant bits
      000159 53 89 F0         [24] 1535 	anl	_TMOD,#0xf0
                           00015C  1536 	C$Lab2.c$134$1$79 ==.
                                   1537 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:134: TMOD |= 0x01;   // Timer0 in mode 1 (16-bit)
      00015C 43 89 01         [24] 1538 	orl	_TMOD,#0x01
                           00015F  1539 	C$Lab2.c$135$1$79 ==.
                                   1540 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:135: TR0 = 0;        // Stop Timer0
      00015F C2 8C            [12] 1541 	clr	_TR0
                           000161  1542 	C$Lab2.c$136$1$79 ==.
                                   1543 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:136: TMR0 = 0;       // Clear high & low byte of T0
      000161 E4               [12] 1544 	clr	a
      000162 F5 8A            [12] 1545 	mov	((_TMR0 >> 0) & 0xFF),a
      000164 F5 8C            [12] 1546 	mov	((_TMR0 >> 8) & 0xFF),a
                           000166  1547 	C$Lab2.c$138$1$79 ==.
                           000166  1548 	XG$Timer_Init$0$0 ==.
      000166 22               [24] 1549 	ret
                                   1550 ;------------------------------------------------------------
                                   1551 ;Allocation info for local variables in function 'Interrupt_Init'
                                   1552 ;------------------------------------------------------------
                           000167  1553 	G$Interrupt_Init$0$0 ==.
                           000167  1554 	C$Lab2.c$142$1$79 ==.
                                   1555 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:142: void Interrupt_Init(void)
                                   1556 ;	-----------------------------------------
                                   1557 ;	 function Interrupt_Init
                                   1558 ;	-----------------------------------------
      000167                       1559 _Interrupt_Init:
                           000167  1560 	C$Lab2.c$144$1$81 ==.
                                   1561 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:144: IE |= 0x82;      // enable Timer0 Interrupt request (by masking)
      000167 43 A8 82         [24] 1562 	orl	_IE,#0x82
                           00016A  1563 	C$Lab2.c$145$1$81 ==.
                                   1564 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:145: EA = 1;       // enable global interrupts (by sbit)
      00016A D2 AF            [12] 1565 	setb	_EA
                           00016C  1566 	C$Lab2.c$146$1$81 ==.
                           00016C  1567 	XG$Interrupt_Init$0$0 ==.
      00016C 22               [24] 1568 	ret
                                   1569 ;------------------------------------------------------------
                                   1570 ;Allocation info for local variables in function 'ADC1_Init'
                                   1571 ;------------------------------------------------------------
                           00016D  1572 	G$ADC1_Init$0$0 ==.
                           00016D  1573 	C$Lab2.c$149$1$81 ==.
                                   1574 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:149: void ADC1_Init(void)
                                   1575 ;	-----------------------------------------
                                   1576 ;	 function ADC1_Init
                                   1577 ;	-----------------------------------------
      00016D                       1578 _ADC1_Init:
                           00016D  1579 	C$Lab2.c$151$1$83 ==.
                                   1580 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:151: P1MDIN &= ~0x01;
      00016D 53 BD FE         [24] 1581 	anl	_P1MDIN,#0xfe
                           000170  1582 	C$Lab2.c$152$1$83 ==.
                                   1583 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:152: P1MDOUT &= ~0x01;
      000170 53 A5 FE         [24] 1584 	anl	_P1MDOUT,#0xfe
                           000173  1585 	C$Lab2.c$153$1$83 ==.
                                   1586 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:153: P1 |= 0x01;
      000173 43 90 01         [24] 1587 	orl	_P1,#0x01
                           000176  1588 	C$Lab2.c$155$1$83 ==.
                                   1589 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:155: REF0CN = 0x03;
      000176 75 D1 03         [24] 1590 	mov	_REF0CN,#0x03
                           000179  1591 	C$Lab2.c$156$1$83 ==.
                                   1592 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:156: ADC1CF |= 0x01;
      000179 43 AB 01         [24] 1593 	orl	_ADC1CF,#0x01
                           00017C  1594 	C$Lab2.c$157$1$83 ==.
                                   1595 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:157: ADC1CF &= 0xFD;
      00017C 53 AB FD         [24] 1596 	anl	_ADC1CF,#0xfd
                           00017F  1597 	C$Lab2.c$158$1$83 ==.
                                   1598 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:158: ADC1CN = 0x80;
      00017F 75 AA 80         [24] 1599 	mov	_ADC1CN,#0x80
                           000182  1600 	C$Lab2.c$159$1$83 ==.
                           000182  1601 	XG$ADC1_Init$0$0 ==.
      000182 22               [24] 1602 	ret
                                   1603 ;------------------------------------------------------------
                                   1604 ;Allocation info for local variables in function 'read_AD_input'
                                   1605 ;------------------------------------------------------------
                           000183  1606 	G$read_AD_input$0$0 ==.
                           000183  1607 	C$Lab2.c$162$1$83 ==.
                                   1608 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:162: unsigned char read_AD_input(void)
                                   1609 ;	-----------------------------------------
                                   1610 ;	 function read_AD_input
                                   1611 ;	-----------------------------------------
      000183                       1612 _read_AD_input:
                           000183  1613 	C$Lab2.c$164$1$85 ==.
                                   1614 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:164: AMX1SL = 0;
      000183 75 AC 00         [24] 1615 	mov	_AMX1SL,#0x00
                           000186  1616 	C$Lab2.c$165$1$85 ==.
                                   1617 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:165: ADC1CN = ADC1CN & ~0x20;
      000186 53 AA DF         [24] 1618 	anl	_ADC1CN,#0xdf
                           000189  1619 	C$Lab2.c$166$1$85 ==.
                                   1620 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:166: ADC1CN = ADC1CN | 0x10;
      000189 43 AA 10         [24] 1621 	orl	_ADC1CN,#0x10
                           00018C  1622 	C$Lab2.c$167$1$85 ==.
                                   1623 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:167: while ((ADC1CN & 0x20) == 0x00);
      00018C                       1624 00101$:
      00018C E5 AA            [12] 1625 	mov	a,_ADC1CN
      00018E 30 E5 FB         [24] 1626 	jnb	acc.5,00101$
                           000191  1627 	C$Lab2.c$168$1$85 ==.
                                   1628 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:168: return ADC1;
      000191 85 9C 82         [24] 1629 	mov	dpl,_ADC1
                           000194  1630 	C$Lab2.c$169$1$85 ==.
                           000194  1631 	XG$read_AD_input$0$0 ==.
      000194 22               [24] 1632 	ret
                                   1633 ;------------------------------------------------------------
                                   1634 ;Allocation info for local variables in function 'Pot_Scaling'
                                   1635 ;------------------------------------------------------------
                                   1636 ;mode                      Allocated with name '_Pot_Scaling_PARM_2'
                                   1637 ;Pot_Value                 Allocated to registers r6 r7 
                                   1638 ;------------------------------------------------------------
                           000195  1639 	G$Pot_Scaling$0$0 ==.
                           000195  1640 	C$Lab2.c$172$1$85 ==.
                                   1641 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:172: unsigned int Pot_Scaling(unsigned int Pot_Value, unsigned char mode)
                                   1642 ;	-----------------------------------------
                                   1643 ;	 function Pot_Scaling
                                   1644 ;	-----------------------------------------
      000195                       1645 _Pot_Scaling:
      000195 AE 82            [24] 1646 	mov	r6,dpl
      000197 AF 83            [24] 1647 	mov	r7,dph
                           000199  1648 	C$Lab2.c$174$1$87 ==.
                                   1649 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:174: if (mode == 1) {
      000199 74 01            [12] 1650 	mov	a,#0x01
      00019B B5*00 1B         [24] 1651 	cjne	a,_Pot_Scaling_PARM_2,00104$
                           00019E  1652 	C$Lab2.c$175$2$88 ==.
                                   1653 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:175: scaledValue = Pot_Value/64;
      00019E 8E*11            [24] 1654 	mov	_scaledValue,r6
      0001A0 EF               [12] 1655 	mov	a,r7
      0001A1 A2 E7            [12] 1656 	mov	c,acc.7
      0001A3 C5*11            [12] 1657 	xch	a,_scaledValue
      0001A5 33               [12] 1658 	rlc	a
      0001A6 C5*11            [12] 1659 	xch	a,_scaledValue
      0001A8 33               [12] 1660 	rlc	a
      0001A9 A2 E7            [12] 1661 	mov	c,acc.7
      0001AB C5*11            [12] 1662 	xch	a,_scaledValue
      0001AD 33               [12] 1663 	rlc	a
      0001AE C5*11            [12] 1664 	xch	a,_scaledValue
      0001B0 33               [12] 1665 	rlc	a
      0001B1 C5*11            [12] 1666 	xch	a,_scaledValue
      0001B3 54 03            [12] 1667 	anl	a,#0x03
      0001B5 F5*12            [12] 1668 	mov	(_scaledValue + 1),a
      0001B7 80 18            [24] 1669 	sjmp	00105$
      0001B9                       1670 00104$:
                           0001B9  1671 	C$Lab2.c$178$1$87 ==.
                                   1672 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:178: else if (mode == 3) {
      0001B9 74 03            [12] 1673 	mov	a,#0x03
      0001BB B5*00 13         [24] 1674 	cjne	a,_Pot_Scaling_PARM_2,00105$
                           0001BE  1675 	C$Lab2.c$179$2$89 ==.
                                   1676 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:179: scaledValue = Pot_Value/4;
      0001BE 8E*11            [24] 1677 	mov	_scaledValue,r6
      0001C0 EF               [12] 1678 	mov	a,r7
      0001C1 C3               [12] 1679 	clr	c
      0001C2 13               [12] 1680 	rrc	a
      0001C3 C5*11            [12] 1681 	xch	a,_scaledValue
      0001C5 13               [12] 1682 	rrc	a
      0001C6 C5*11            [12] 1683 	xch	a,_scaledValue
      0001C8 C3               [12] 1684 	clr	c
      0001C9 13               [12] 1685 	rrc	a
      0001CA C5*11            [12] 1686 	xch	a,_scaledValue
      0001CC 13               [12] 1687 	rrc	a
      0001CD C5*11            [12] 1688 	xch	a,_scaledValue
      0001CF F5*12            [12] 1689 	mov	(_scaledValue + 1),a
      0001D1                       1690 00105$:
                           0001D1  1691 	C$Lab2.c$182$1$87 ==.
                                   1692 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:182: return scaledValue;
      0001D1 85*11 82         [24] 1693 	mov	dpl,_scaledValue
      0001D4 85*12 83         [24] 1694 	mov	dph,(_scaledValue + 1)
                           0001D7  1695 	C$Lab2.c$183$1$87 ==.
                           0001D7  1696 	XG$Pot_Scaling$0$0 ==.
      0001D7 22               [24] 1697 	ret
                                   1698 ;------------------------------------------------------------
                                   1699 ;Allocation info for local variables in function 'Compare_Answer'
                                   1700 ;------------------------------------------------------------
                                   1701 ;randomNumber              Allocated with name '_Compare_Answer_PARM_2'
                                   1702 ;yourAnswer                Allocated to registers r6 r7 
                                   1703 ;------------------------------------------------------------
                           0001D8  1704 	G$Compare_Answer$0$0 ==.
                           0001D8  1705 	C$Lab2.c$186$1$87 ==.
                                   1706 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:186: void Compare_Answer(unsigned int yourAnswer, unsigned char randomNumber)
                                   1707 ;	-----------------------------------------
                                   1708 ;	 function Compare_Answer
                                   1709 ;	-----------------------------------------
      0001D8                       1710 _Compare_Answer:
      0001D8 AE 82            [24] 1711 	mov	r6,dpl
      0001DA AF 83            [24] 1712 	mov	r7,dph
                           0001DC  1713 	C$Lab2.c$188$1$91 ==.
                                   1714 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:188: counts = 0;			// resets counts
      0001DC E4               [12] 1715 	clr	a
      0001DD F5*00            [12] 1716 	mov	_counts,a
      0001DF F5*01            [12] 1717 	mov	(_counts + 1),a
                           0001E1  1718 	C$Lab2.c$190$1$91 ==.
                                   1719 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:190: if (yourAnswer<randomNumber) {		// turns BILED red if answer is low
      0001E1 AC*29            [24] 1720 	mov	r4,_Compare_Answer_PARM_2
      0001E3 7D 00            [12] 1721 	mov	r5,#0x00
      0001E5 C3               [12] 1722 	clr	c
      0001E6 EE               [12] 1723 	mov	a,r6
      0001E7 9C               [12] 1724 	subb	a,r4
      0001E8 EF               [12] 1725 	mov	a,r7
      0001E9 9D               [12] 1726 	subb	a,r5
      0001EA 50 13            [24] 1727 	jnc	00110$
                           0001EC  1728 	C$Lab2.c$191$2$92 ==.
                                   1729 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:191: while (counts<337) {
      0001EC                       1730 00101$:
      0001EC C3               [12] 1731 	clr	c
      0001ED E5*00            [12] 1732 	mov	a,_counts
      0001EF 94 51            [12] 1733 	subb	a,#0x51
      0001F1 E5*01            [12] 1734 	mov	a,(_counts + 1)
      0001F3 94 01            [12] 1735 	subb	a,#0x01
      0001F5 50 26            [24] 1736 	jnc	00112$
                           0001F7  1737 	C$Lab2.c$192$3$93 ==.
                                   1738 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:192: SetBILED('r');
      0001F7 75 82 72         [24] 1739 	mov	dpl,#0x72
      0001FA 12r0Br1A         [24] 1740 	lcall	_SetBILED
      0001FD 80 ED            [24] 1741 	sjmp	00101$
      0001FF                       1742 00110$:
                           0001FF  1743 	C$Lab2.c$196$1$91 ==.
                                   1744 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:196: else if (yourAnswer>randomNumber) {	// turns BILED green if answer is high
      0001FF AC*29            [24] 1745 	mov	r4,_Compare_Answer_PARM_2
      000201 7D 00            [12] 1746 	mov	r5,#0x00
      000203 C3               [12] 1747 	clr	c
      000204 EC               [12] 1748 	mov	a,r4
      000205 9E               [12] 1749 	subb	a,r6
      000206 ED               [12] 1750 	mov	a,r5
      000207 9F               [12] 1751 	subb	a,r7
      000208 50 13            [24] 1752 	jnc	00112$
                           00020A  1753 	C$Lab2.c$197$2$94 ==.
                                   1754 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:197: while (counts<337) {
      00020A                       1755 00104$:
      00020A C3               [12] 1756 	clr	c
      00020B E5*00            [12] 1757 	mov	a,_counts
      00020D 94 51            [12] 1758 	subb	a,#0x51
      00020F E5*01            [12] 1759 	mov	a,(_counts + 1)
      000211 94 01            [12] 1760 	subb	a,#0x01
      000213 50 08            [24] 1761 	jnc	00112$
                           000215  1762 	C$Lab2.c$198$3$95 ==.
                                   1763 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:198: SetBILED('g');
      000215 75 82 67         [24] 1764 	mov	dpl,#0x67
      000218 12r0Br1A         [24] 1765 	lcall	_SetBILED
      00021B 80 ED            [24] 1766 	sjmp	00104$
      00021D                       1767 00112$:
                           00021D  1768 	C$Lab2.c$201$1$91 ==.
                           00021D  1769 	XG$Compare_Answer$0$0 ==.
      00021D 22               [24] 1770 	ret
                                   1771 ;------------------------------------------------------------
                                   1772 ;Allocation info for local variables in function 'Flash_Biled'
                                   1773 ;------------------------------------------------------------
                           00021E  1774 	G$Flash_Biled$0$0 ==.
                           00021E  1775 	C$Lab2.c$204$1$91 ==.
                                   1776 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:204: void Flash_Biled(void)
                                   1777 ;	-----------------------------------------
                                   1778 ;	 function Flash_Biled
                                   1779 ;	-----------------------------------------
      00021E                       1780 _Flash_Biled:
                           00021E  1781 	C$Lab2.c$206$1$97 ==.
                                   1782 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:206: counts = 0;
      00021E E4               [12] 1783 	clr	a
      00021F F5*00            [12] 1784 	mov	_counts,a
      000221 F5*01            [12] 1785 	mov	(_counts + 1),a
                           000223  1786 	C$Lab2.c$208$1$97 ==.
                                   1787 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:208: while (counts <= 337) {
      000223                       1788 00104$:
      000223 C3               [12] 1789 	clr	c
      000224 74 51            [12] 1790 	mov	a,#0x51
      000226 95*00            [12] 1791 	subb	a,_counts
      000228 74 01            [12] 1792 	mov	a,#0x01
      00022A 95*01            [12] 1793 	subb	a,(_counts + 1)
      00022C 40 15            [24] 1794 	jc	00107$
                           00022E  1795 	C$Lab2.c$209$2$98 ==.
                                   1796 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:209: if (counts%2 == 0) {
      00022E E5*00            [12] 1797 	mov	a,_counts
      000230 20 E0 08         [24] 1798 	jb	acc.0,00102$
                           000233  1799 	C$Lab2.c$210$3$99 ==.
                                   1800 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:210: SetBILED('r');
      000233 75 82 72         [24] 1801 	mov	dpl,#0x72
      000236 12r0Br1A         [24] 1802 	lcall	_SetBILED
      000239 80 E8            [24] 1803 	sjmp	00104$
      00023B                       1804 00102$:
                           00023B  1805 	C$Lab2.c$214$3$100 ==.
                                   1806 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:214: SetBILED('g');
      00023B 75 82 67         [24] 1807 	mov	dpl,#0x67
      00023E 12r0Br1A         [24] 1808 	lcall	_SetBILED
      000241 80 E0            [24] 1809 	sjmp	00104$
      000243                       1810 00107$:
                           000243  1811 	C$Lab2.c$217$1$97 ==.
                           000243  1812 	XG$Flash_Biled$0$0 ==.
      000243 22               [24] 1813 	ret
                                   1814 ;------------------------------------------------------------
                                   1815 ;Allocation info for local variables in function 'Mode_One'
                                   1816 ;------------------------------------------------------------
                                   1817 ;random_Result             Allocated to registers r4 
                                   1818 ;ADC_Value                 Allocated with name '_Mode_One_ADC_Value_1_102'
                                   1819 ;game_Time                 Allocated to registers r2 r3 
                                   1820 ;total_Score               Allocated to registers r6 r7 
                                   1821 ;round_Score               Allocated to registers r3 r4 
                                   1822 ;Error                     Allocated with name '_Mode_One_Error_1_102'
                                   1823 ;rounds                    Allocated to registers 
                                   1824 ;------------------------------------------------------------
                           000244  1825 	G$Mode_One$0$0 ==.
                           000244  1826 	C$Lab2.c$221$1$97 ==.
                                   1827 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:221: void Mode_One(void)
                                   1828 ;	-----------------------------------------
                                   1829 ;	 function Mode_One
                                   1830 ;	-----------------------------------------
      000244                       1831 _Mode_One:
                           000244  1832 	C$Lab2.c$236$1$102 ==.
                                   1833 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:236: \n\rdisplayed on the terminal. The lower the score the better you did.");
      000244 74r42            [12] 1834 	mov	a,#___str_5
      000246 C0 E0            [24] 1835 	push	acc
      000248 74s01            [12] 1836 	mov	a,#(___str_5 >> 8)
      00024A C0 E0            [24] 1837 	push	acc
      00024C 74 80            [12] 1838 	mov	a,#0x80
      00024E C0 E0            [24] 1839 	push	acc
      000250 12r00r00         [24] 1840 	lcall	_printf
      000253 15 81            [12] 1841 	dec	sp
      000255 15 81            [12] 1842 	dec	sp
      000257 15 81            [12] 1843 	dec	sp
                           000259  1844 	C$Lab2.c$238$1$102 ==.
                                   1845 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:238: total_Score = 0; //reset score
      000259 7E 00            [12] 1846 	mov	r6,#0x00
      00025B 7F 00            [12] 1847 	mov	r7,#0x00
                           00025D  1848 	C$Lab2.c$239$1$102 ==.
                                   1849 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:239: SetAllLEDs(1);	//turn off all LEDs
      00025D 75 82 01         [24] 1850 	mov	dpl,#0x01
      000260 C0 07            [24] 1851 	push	ar7
      000262 C0 06            [24] 1852 	push	ar6
      000264 12r0ArB1         [24] 1853 	lcall	_SetAllLEDs
                           000267  1854 	C$Lab2.c$240$1$102 ==.
                                   1855 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:240: SetBILED('r'); // turn BILED red
      000267 75 82 72         [24] 1856 	mov	dpl,#0x72
      00026A 12r0Br1A         [24] 1857 	lcall	_SetBILED
      00026D D0 06            [24] 1858 	pop	ar6
      00026F D0 07            [24] 1859 	pop	ar7
                           000271  1860 	C$Lab2.c$241$1$102 ==.
                                   1861 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:241: while (PB0 = 1); //wait for pushbutton to be pressed
      000271                       1862 00101$:
      000271 D2 B0            [12] 1863 	setb	_PB0
      000273 20 B0 FB         [24] 1864 	jb	_PB0,00101$
                           000276  1865 	C$Lab2.c$242$1$102 ==.
                                   1866 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:242: for (rounds=0; rounds++; rounds<5)
      000276 7D 00            [12] 1867 	mov	r5,#0x00
      000278                       1868 00181$:
      000278 8D 04            [24] 1869 	mov	ar4,r5
      00027A 0D               [12] 1870 	inc	r5
      00027B EC               [12] 1871 	mov	a,r4
      00027C 70 03            [24] 1872 	jnz	00304$
      00027E 02r06r65         [24] 1873 	ljmp	00179$
      000281                       1874 00304$:
                           000281  1875 	C$Lab2.c$244$2$103 ==.
                                   1876 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:244: printf("Start");
      000281 C0 07            [24] 1877 	push	ar7
      000283 C0 06            [24] 1878 	push	ar6
      000285 C0 05            [24] 1879 	push	ar5
      000287 74rD5            [12] 1880 	mov	a,#___str_6
      000289 C0 E0            [24] 1881 	push	acc
      00028B 74s03            [12] 1882 	mov	a,#(___str_6 >> 8)
      00028D C0 E0            [24] 1883 	push	acc
      00028F 74 80            [12] 1884 	mov	a,#0x80
      000291 C0 E0            [24] 1885 	push	acc
      000293 12r00r00         [24] 1886 	lcall	_printf
      000296 15 81            [12] 1887 	dec	sp
      000298 15 81            [12] 1888 	dec	sp
      00029A 15 81            [12] 1889 	dec	sp
                           00029C  1890 	C$Lab2.c$245$2$103 ==.
                                   1891 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:245: SetBILED('o'); //turn off BILED
      00029C 75 82 6F         [24] 1892 	mov	dpl,#0x6f
      00029F 12r0Br1A         [24] 1893 	lcall	_SetBILED
                           0002A2  1894 	C$Lab2.c$246$2$103 ==.
                                   1895 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:246: random_Result = random();
      0002A2 12r0ArA4         [24] 1896 	lcall	_random
      0002A5 AC 82            [24] 1897 	mov	r4,dpl
      0002A7 D0 05            [24] 1898 	pop	ar5
      0002A9 D0 06            [24] 1899 	pop	ar6
      0002AB D0 07            [24] 1900 	pop	ar7
                           0002AD  1901 	C$Lab2.c$247$2$103 ==.
                                   1902 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:247: TR0 = 1; //start timer
      0002AD D2 8C            [12] 1903 	setb	_TR0
                           0002AF  1904 	C$Lab2.c$248$3$104 ==.
                                   1905 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:248: while (counts <= 169)
      0002AF BC 01 03         [24] 1906 	cjne	r4,#0x01,00305$
      0002B2 EC               [12] 1907 	mov	a,r4
      0002B3 80 01            [24] 1908 	sjmp	00306$
      0002B5                       1909 00305$:
      0002B5 E4               [12] 1910 	clr	a
      0002B6                       1911 00306$:
      0002B6 FB               [12] 1912 	mov	r3,a
      0002B7 E4               [12] 1913 	clr	a
      0002B8 BC 02 01         [24] 1914 	cjne	r4,#0x02,00307$
      0002BB 04               [12] 1915 	inc	a
      0002BC                       1916 00307$:
      0002BC FA               [12] 1917 	mov	r2,a
      0002BD E4               [12] 1918 	clr	a
      0002BE BC 03 01         [24] 1919 	cjne	r4,#0x03,00309$
      0002C1 04               [12] 1920 	inc	a
      0002C2                       1921 00309$:
      0002C2 F9               [12] 1922 	mov	r1,a
      0002C3 E4               [12] 1923 	clr	a
      0002C4 BC 04 01         [24] 1924 	cjne	r4,#0x04,00311$
      0002C7 04               [12] 1925 	inc	a
      0002C8                       1926 00311$:
      0002C8 F8               [12] 1927 	mov	r0,a
      0002C9                       1928 00118$:
      0002C9 C3               [12] 1929 	clr	c
      0002CA 74 A9            [12] 1930 	mov	a,#0xa9
      0002CC 95*00            [12] 1931 	subb	a,_counts
      0002CE E4               [12] 1932 	clr	a
      0002CF 95*01            [12] 1933 	subb	a,(_counts + 1)
      0002D1 40 5F            [24] 1934 	jc	00120$
                           0002D3  1935 	C$Lab2.c$250$3$104 ==.
                                   1936 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:250: if (random_Result == 0) 
      0002D3 EC               [12] 1937 	mov	a,r4
      0002D4 70 28            [24] 1938 	jnz	00116$
                           0002D6  1939 	C$Lab2.c$252$4$105 ==.
                                   1940 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:252: SetAllLEDs(1); //turn off all LEDs
      0002D6 75 82 01         [24] 1941 	mov	dpl,#0x01
      0002D9 C0 07            [24] 1942 	push	ar7
      0002DB C0 06            [24] 1943 	push	ar6
      0002DD C0 05            [24] 1944 	push	ar5
      0002DF C0 04            [24] 1945 	push	ar4
      0002E1 C0 03            [24] 1946 	push	ar3
      0002E3 C0 02            [24] 1947 	push	ar2
      0002E5 C0 01            [24] 1948 	push	ar1
      0002E7 C0 00            [24] 1949 	push	ar0
      0002E9 12r0ArB1         [24] 1950 	lcall	_SetAllLEDs
      0002EC D0 00            [24] 1951 	pop	ar0
      0002EE D0 01            [24] 1952 	pop	ar1
      0002F0 D0 02            [24] 1953 	pop	ar2
      0002F2 D0 03            [24] 1954 	pop	ar3
      0002F4 D0 04            [24] 1955 	pop	ar4
      0002F6 D0 05            [24] 1956 	pop	ar5
      0002F8 D0 06            [24] 1957 	pop	ar6
      0002FA D0 07            [24] 1958 	pop	ar7
      0002FC 80 CB            [24] 1959 	sjmp	00118$
      0002FE                       1960 00116$:
                           0002FE  1961 	C$Lab2.c$254$3$104 ==.
                                   1962 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:254: else if (random_Result == 1) 
      0002FE EB               [12] 1963 	mov	a,r3
      0002FF 60 0A            [24] 1964 	jz	00113$
                           000301  1965 	C$Lab2.c$256$4$106 ==.
                                   1966 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:256: LED0 = 0; //turn on LED0
      000301 C2 B6            [12] 1967 	clr	_LED0
                           000303  1968 	C$Lab2.c$257$4$106 ==.
                                   1969 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:257: LED1 = 1;
      000303 D2 B5            [12] 1970 	setb	_LED1
                           000305  1971 	C$Lab2.c$258$4$106 ==.
                                   1972 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:258: LED2 = 1;
      000305 D2 B7            [12] 1973 	setb	_LED2
                           000307  1974 	C$Lab2.c$259$4$106 ==.
                                   1975 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:259: LED3 = 1;
      000307 D2 B2            [12] 1976 	setb	_LED3
      000309 80 BE            [24] 1977 	sjmp	00118$
      00030B                       1978 00113$:
                           00030B  1979 	C$Lab2.c$261$3$104 ==.
                                   1980 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:261: else if (random_Result == 2) 
      00030B EA               [12] 1981 	mov	a,r2
      00030C 60 0A            [24] 1982 	jz	00110$
                           00030E  1983 	C$Lab2.c$263$4$107 ==.
                                   1984 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:263: LED0 = 0; //turn on LED0 and LED1
      00030E C2 B6            [12] 1985 	clr	_LED0
                           000310  1986 	C$Lab2.c$264$4$107 ==.
                                   1987 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:264: LED1 = 0;
      000310 C2 B5            [12] 1988 	clr	_LED1
                           000312  1989 	C$Lab2.c$265$4$107 ==.
                                   1990 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:265: LED2 = 1;
      000312 D2 B7            [12] 1991 	setb	_LED2
                           000314  1992 	C$Lab2.c$266$4$107 ==.
                                   1993 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:266: LED3 = 1;
      000314 D2 B2            [12] 1994 	setb	_LED3
      000316 80 B1            [24] 1995 	sjmp	00118$
      000318                       1996 00110$:
                           000318  1997 	C$Lab2.c$268$3$104 ==.
                                   1998 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:268: else if (random_Result == 3) 
      000318 E9               [12] 1999 	mov	a,r1
      000319 60 0A            [24] 2000 	jz	00107$
                           00031B  2001 	C$Lab2.c$270$4$108 ==.
                                   2002 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:270: LED0 = 0; //turn on LED0,LED1, and LED2
      00031B C2 B6            [12] 2003 	clr	_LED0
                           00031D  2004 	C$Lab2.c$271$4$108 ==.
                                   2005 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:271: LED1 = 0;
      00031D C2 B5            [12] 2006 	clr	_LED1
                           00031F  2007 	C$Lab2.c$272$4$108 ==.
                                   2008 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:272: LED2 = 0;
      00031F C2 B7            [12] 2009 	clr	_LED2
                           000321  2010 	C$Lab2.c$273$4$108 ==.
                                   2011 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:273: LED3 = 1;
      000321 D2 B2            [12] 2012 	setb	_LED3
      000323 80 A4            [24] 2013 	sjmp	00118$
      000325                       2014 00107$:
                           000325  2015 	C$Lab2.c$275$3$104 ==.
                                   2016 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:275: else if (random_Result == 4) 
      000325 E8               [12] 2017 	mov	a,r0
      000326 60 A1            [24] 2018 	jz	00118$
                           000328  2019 	C$Lab2.c$277$4$109 ==.
                                   2020 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:277: LED0 = 0; //turn on all LEDS
      000328 C2 B6            [12] 2021 	clr	_LED0
                           00032A  2022 	C$Lab2.c$278$4$109 ==.
                                   2023 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:278: LED1 = 0;
      00032A C2 B5            [12] 2024 	clr	_LED1
                           00032C  2025 	C$Lab2.c$279$4$109 ==.
                                   2026 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:279: LED2 = 0;
      00032C C2 B7            [12] 2027 	clr	_LED2
                           00032E  2028 	C$Lab2.c$280$4$109 ==.
                                   2029 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:280: LED3 = 0;
      00032E C2 B2            [12] 2030 	clr	_LED3
      000330 80 97            [24] 2031 	sjmp	00118$
      000332                       2032 00120$:
                           000332  2033 	C$Lab2.c$283$2$103 ==.
                                   2034 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:283: ClearTimer0();
      000332 C0 07            [24] 2035 	push	ar7
      000334 C0 06            [24] 2036 	push	ar6
      000336 C0 05            [24] 2037 	push	ar5
      000338 C0 04            [24] 2038 	push	ar4
      00033A 12r0Br0E         [24] 2039 	lcall	_ClearTimer0
      00033D D0 04            [24] 2040 	pop	ar4
      00033F D0 05            [24] 2041 	pop	ar5
      000341 D0 06            [24] 2042 	pop	ar6
      000343 D0 07            [24] 2043 	pop	ar7
                           000345  2044 	C$Lab2.c$284$2$103 ==.
                                   2045 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:284: TR0=1;
      000345 D2 8C            [12] 2046 	setb	_TR0
                           000347  2047 	C$Lab2.c$285$2$103 ==.
                                   2048 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:285: while (PB0 == 1)
      000347                       2049 00133$:
      000347 30 B0 74         [24] 2050 	jnb	_PB0,00135$
                           00034A  2051 	C$Lab2.c$287$3$110 ==.
                                   2052 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:287: ADC_Value = read_AD_input();
      00034A C0 07            [24] 2053 	push	ar7
      00034C C0 06            [24] 2054 	push	ar6
      00034E C0 05            [24] 2055 	push	ar5
      000350 C0 04            [24] 2056 	push	ar4
      000352 12r01r83         [24] 2057 	lcall	_read_AD_input
      000355 AB 82            [24] 2058 	mov	r3,dpl
      000357 D0 04            [24] 2059 	pop	ar4
      000359 D0 05            [24] 2060 	pop	ar5
      00035B D0 06            [24] 2061 	pop	ar6
      00035D D0 07            [24] 2062 	pop	ar7
      00035F 8B*2A            [24] 2063 	mov	_Mode_One_ADC_Value_1_102,r3
      000361 75*2B 00         [24] 2064 	mov	(_Mode_One_ADC_Value_1_102 + 1),#0x00
                           000364  2065 	C$Lab2.c$288$3$110 ==.
                                   2066 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:288: if (ADC_Value <= 51)
      000364 C3               [12] 2067 	clr	c
      000365 74 33            [12] 2068 	mov	a,#0x33
      000367 95*2A            [12] 2069 	subb	a,_Mode_One_ADC_Value_1_102
      000369 E4               [12] 2070 	clr	a
      00036A 95*2B            [12] 2071 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      00036C 40 0A            [24] 2072 	jc	00131$
                           00036E  2073 	C$Lab2.c$290$4$111 ==.
                                   2074 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:290: LED0 = 1; //turn off all LEDs
      00036E D2 B6            [12] 2075 	setb	_LED0
                           000370  2076 	C$Lab2.c$291$4$111 ==.
                                   2077 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:291: LED1 = 1;
      000370 D2 B5            [12] 2078 	setb	_LED1
                           000372  2079 	C$Lab2.c$292$4$111 ==.
                                   2080 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:292: LED2 = 1;
      000372 D2 B7            [12] 2081 	setb	_LED2
                           000374  2082 	C$Lab2.c$293$4$111 ==.
                                   2083 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:293: LED3 = 1;
      000374 D2 B2            [12] 2084 	setb	_LED3
      000376 80 CF            [24] 2085 	sjmp	00133$
      000378                       2086 00131$:
                           000378  2087 	C$Lab2.c$295$3$110 ==.
                                   2088 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:295: else if (ADC_Value <= 102) 
      000378 C3               [12] 2089 	clr	c
      000379 74 66            [12] 2090 	mov	a,#0x66
      00037B 95*2A            [12] 2091 	subb	a,_Mode_One_ADC_Value_1_102
      00037D E4               [12] 2092 	clr	a
      00037E 95*2B            [12] 2093 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      000380 40 0A            [24] 2094 	jc	00128$
                           000382  2095 	C$Lab2.c$297$4$112 ==.
                                   2096 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:297: LED0 = 0; //turn on LED0
      000382 C2 B6            [12] 2097 	clr	_LED0
                           000384  2098 	C$Lab2.c$298$4$112 ==.
                                   2099 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:298: LED1 = 1;
      000384 D2 B5            [12] 2100 	setb	_LED1
                           000386  2101 	C$Lab2.c$299$4$112 ==.
                                   2102 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:299: LED2 = 1;
      000386 D2 B7            [12] 2103 	setb	_LED2
                           000388  2104 	C$Lab2.c$300$4$112 ==.
                                   2105 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:300: LED3 = 1;
      000388 D2 B2            [12] 2106 	setb	_LED3
      00038A 80 BB            [24] 2107 	sjmp	00133$
      00038C                       2108 00128$:
                           00038C  2109 	C$Lab2.c$302$3$110 ==.
                                   2110 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:302: else if (ADC_Value <= 153) 
      00038C C3               [12] 2111 	clr	c
      00038D 74 99            [12] 2112 	mov	a,#0x99
      00038F 95*2A            [12] 2113 	subb	a,_Mode_One_ADC_Value_1_102
      000391 E4               [12] 2114 	clr	a
      000392 95*2B            [12] 2115 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      000394 40 0A            [24] 2116 	jc	00125$
                           000396  2117 	C$Lab2.c$304$4$113 ==.
                                   2118 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:304: LED0 = 0; //turn on LED0 and LED1
      000396 C2 B6            [12] 2119 	clr	_LED0
                           000398  2120 	C$Lab2.c$305$4$113 ==.
                                   2121 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:305: LED1 = 0;
      000398 C2 B5            [12] 2122 	clr	_LED1
                           00039A  2123 	C$Lab2.c$306$4$113 ==.
                                   2124 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:306: LED2 = 1;
      00039A D2 B7            [12] 2125 	setb	_LED2
                           00039C  2126 	C$Lab2.c$307$4$113 ==.
                                   2127 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:307: LED3 = 1;
      00039C D2 B2            [12] 2128 	setb	_LED3
      00039E 80 A7            [24] 2129 	sjmp	00133$
      0003A0                       2130 00125$:
                           0003A0  2131 	C$Lab2.c$309$3$110 ==.
                                   2132 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:309: else if (ADC_Value <= 204) 
      0003A0 C3               [12] 2133 	clr	c
      0003A1 74 CC            [12] 2134 	mov	a,#0xcc
      0003A3 95*2A            [12] 2135 	subb	a,_Mode_One_ADC_Value_1_102
      0003A5 E4               [12] 2136 	clr	a
      0003A6 95*2B            [12] 2137 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      0003A8 40 0A            [24] 2138 	jc	00122$
                           0003AA  2139 	C$Lab2.c$311$4$114 ==.
                                   2140 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:311: LED0 = 0; //turn on LED0,LED1, and LED2
      0003AA C2 B6            [12] 2141 	clr	_LED0
                           0003AC  2142 	C$Lab2.c$312$4$114 ==.
                                   2143 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:312: LED1 = 0;
      0003AC C2 B5            [12] 2144 	clr	_LED1
                           0003AE  2145 	C$Lab2.c$313$4$114 ==.
                                   2146 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:313: LED2 = 0;
      0003AE C2 B7            [12] 2147 	clr	_LED2
                           0003B0  2148 	C$Lab2.c$314$4$114 ==.
                                   2149 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:314: LED3 = 1;
      0003B0 D2 B2            [12] 2150 	setb	_LED3
      0003B2 80 93            [24] 2151 	sjmp	00133$
      0003B4                       2152 00122$:
                           0003B4  2153 	C$Lab2.c$318$4$115 ==.
                                   2154 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:318: LED0 = 0; //turn on all LEDS
      0003B4 C2 B6            [12] 2155 	clr	_LED0
                           0003B6  2156 	C$Lab2.c$319$4$115 ==.
                                   2157 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:319: LED1 = 0;
      0003B6 C2 B5            [12] 2158 	clr	_LED1
                           0003B8  2159 	C$Lab2.c$320$4$115 ==.
                                   2160 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:320: LED2 = 0;
      0003B8 C2 B7            [12] 2161 	clr	_LED2
                           0003BA  2162 	C$Lab2.c$321$4$115 ==.
                                   2163 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:321: LED3 = 0;
      0003BA C2 B2            [12] 2164 	clr	_LED3
      0003BC 80 89            [24] 2165 	sjmp	00133$
      0003BE                       2166 00135$:
                           0003BE  2167 	C$Lab2.c$324$2$103 ==.
                                   2168 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:324: game_Time = counts; // Was Counts
      0003BE AA*00            [24] 2169 	mov	r2,_counts
      0003C0 AB*01            [24] 2170 	mov	r3,(_counts + 1)
                           0003C2  2171 	C$Lab2.c$325$2$103 ==.
                                   2172 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:325: ClearTimer0();
      0003C2 C0 07            [24] 2173 	push	ar7
      0003C4 C0 06            [24] 2174 	push	ar6
      0003C6 C0 05            [24] 2175 	push	ar5
      0003C8 C0 04            [24] 2176 	push	ar4
      0003CA C0 03            [24] 2177 	push	ar3
      0003CC C0 02            [24] 2178 	push	ar2
      0003CE 12r0Br0E         [24] 2179 	lcall	_ClearTimer0
      0003D1 D0 02            [24] 2180 	pop	ar2
      0003D3 D0 03            [24] 2181 	pop	ar3
      0003D5 D0 04            [24] 2182 	pop	ar4
      0003D7 D0 05            [24] 2183 	pop	ar5
      0003D9 D0 06            [24] 2184 	pop	ar6
      0003DB D0 07            [24] 2185 	pop	ar7
                           0003DD  2186 	C$Lab2.c$326$2$103 ==.
                                   2187 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:326: TR0 = 1; //start timer
      0003DD D2 8C            [12] 2188 	setb	_TR0
                           0003DF  2189 	C$Lab2.c$327$2$103 ==.
                                   2190 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:327: while (counts <=7)
      0003DF                       2191 00136$:
      0003DF C3               [12] 2192 	clr	c
      0003E0 74 07            [12] 2193 	mov	a,#0x07
      0003E2 95*00            [12] 2194 	subb	a,_counts
      0003E4 E4               [12] 2195 	clr	a
      0003E5 95*01            [12] 2196 	subb	a,(_counts + 1)
      0003E7 40 0A            [24] 2197 	jc	00138$
                           0003E9  2198 	C$Lab2.c$329$3$116 ==.
                                   2199 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:329: LED0 = 1; //turn off all LEDs
      0003E9 D2 B6            [12] 2200 	setb	_LED0
                           0003EB  2201 	C$Lab2.c$330$3$116 ==.
                                   2202 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:330: LED1 = 1;
      0003EB D2 B5            [12] 2203 	setb	_LED1
                           0003ED  2204 	C$Lab2.c$331$3$116 ==.
                                   2205 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:331: LED2 = 1;
      0003ED D2 B7            [12] 2206 	setb	_LED2
                           0003EF  2207 	C$Lab2.c$332$3$116 ==.
                                   2208 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:332: LED3 = 1;
      0003EF D2 B2            [12] 2209 	setb	_LED3
      0003F1 80 EC            [24] 2210 	sjmp	00136$
      0003F3                       2211 00138$:
                           0003F3  2212 	C$Lab2.c$334$2$103 ==.
                                   2213 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:334: ClearTimer0();
      0003F3 C0 07            [24] 2214 	push	ar7
      0003F5 C0 06            [24] 2215 	push	ar6
      0003F7 C0 05            [24] 2216 	push	ar5
      0003F9 C0 04            [24] 2217 	push	ar4
      0003FB C0 03            [24] 2218 	push	ar3
      0003FD C0 02            [24] 2219 	push	ar2
      0003FF 12r0Br0E         [24] 2220 	lcall	_ClearTimer0
      000402 D0 02            [24] 2221 	pop	ar2
      000404 D0 03            [24] 2222 	pop	ar3
      000406 D0 04            [24] 2223 	pop	ar4
      000408 D0 05            [24] 2224 	pop	ar5
      00040A D0 06            [24] 2225 	pop	ar6
      00040C D0 07            [24] 2226 	pop	ar7
                           00040E  2227 	C$Lab2.c$335$2$103 ==.
                                   2228 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:335: TR0 = 1; //start timer
      00040E D2 8C            [12] 2229 	setb	_TR0
                           000410  2230 	C$Lab2.c$336$2$103 ==.
                                   2231 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:336: while (counts <=7)
      000410                       2232 00139$:
      000410 C3               [12] 2233 	clr	c
      000411 74 07            [12] 2234 	mov	a,#0x07
      000413 95*00            [12] 2235 	subb	a,_counts
      000415 E4               [12] 2236 	clr	a
      000416 95*01            [12] 2237 	subb	a,(_counts + 1)
      000418 40 0A            [24] 2238 	jc	00141$
                           00041A  2239 	C$Lab2.c$338$3$117 ==.
                                   2240 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:338: LED0 = 0; //turn on all LEDs
      00041A C2 B6            [12] 2241 	clr	_LED0
                           00041C  2242 	C$Lab2.c$339$3$117 ==.
                                   2243 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:339: LED1 = 0;
      00041C C2 B5            [12] 2244 	clr	_LED1
                           00041E  2245 	C$Lab2.c$340$3$117 ==.
                                   2246 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:340: LED2 = 0;
      00041E C2 B7            [12] 2247 	clr	_LED2
                           000420  2248 	C$Lab2.c$341$3$117 ==.
                                   2249 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:341: LED3 = 0;
      000420 C2 B2            [12] 2250 	clr	_LED3
      000422 80 EC            [24] 2251 	sjmp	00139$
      000424                       2252 00141$:
                           000424  2253 	C$Lab2.c$343$2$103 ==.
                                   2254 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:343: ClearTimer0();
      000424 C0 07            [24] 2255 	push	ar7
      000426 C0 06            [24] 2256 	push	ar6
      000428 C0 05            [24] 2257 	push	ar5
      00042A C0 04            [24] 2258 	push	ar4
      00042C C0 03            [24] 2259 	push	ar3
      00042E C0 02            [24] 2260 	push	ar2
      000430 12r0Br0E         [24] 2261 	lcall	_ClearTimer0
      000433 D0 02            [24] 2262 	pop	ar2
      000435 D0 03            [24] 2263 	pop	ar3
      000437 D0 04            [24] 2264 	pop	ar4
      000439 D0 05            [24] 2265 	pop	ar5
      00043B D0 06            [24] 2266 	pop	ar6
      00043D D0 07            [24] 2267 	pop	ar7
                           00043F  2268 	C$Lab2.c$344$2$103 ==.
                                   2269 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:344: TR0 = 1; //start timer
      00043F D2 8C            [12] 2270 	setb	_TR0
                           000441  2271 	C$Lab2.c$345$2$103 ==.
                                   2272 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:345: while (counts <=7)
      000441                       2273 00142$:
      000441 C3               [12] 2274 	clr	c
      000442 74 07            [12] 2275 	mov	a,#0x07
      000444 95*00            [12] 2276 	subb	a,_counts
      000446 E4               [12] 2277 	clr	a
      000447 95*01            [12] 2278 	subb	a,(_counts + 1)
      000449 40 0A            [24] 2279 	jc	00144$
                           00044B  2280 	C$Lab2.c$347$3$118 ==.
                                   2281 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:347: LED0 = 1; //turn off all LEDs
      00044B D2 B6            [12] 2282 	setb	_LED0
                           00044D  2283 	C$Lab2.c$348$3$118 ==.
                                   2284 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:348: LED1 = 1;
      00044D D2 B5            [12] 2285 	setb	_LED1
                           00044F  2286 	C$Lab2.c$349$3$118 ==.
                                   2287 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:349: LED2 = 1;
      00044F D2 B7            [12] 2288 	setb	_LED2
                           000451  2289 	C$Lab2.c$350$3$118 ==.
                                   2290 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:350: LED3 = 1;
      000451 D2 B2            [12] 2291 	setb	_LED3
      000453 80 EC            [24] 2292 	sjmp	00142$
      000455                       2293 00144$:
                           000455  2294 	C$Lab2.c$352$2$103 ==.
                                   2295 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:352: ClearTimer0();
      000455 C0 07            [24] 2296 	push	ar7
      000457 C0 06            [24] 2297 	push	ar6
      000459 C0 05            [24] 2298 	push	ar5
      00045B C0 04            [24] 2299 	push	ar4
      00045D C0 03            [24] 2300 	push	ar3
      00045F C0 02            [24] 2301 	push	ar2
      000461 12r0Br0E         [24] 2302 	lcall	_ClearTimer0
      000464 D0 02            [24] 2303 	pop	ar2
      000466 D0 03            [24] 2304 	pop	ar3
      000468 D0 04            [24] 2305 	pop	ar4
      00046A D0 05            [24] 2306 	pop	ar5
      00046C D0 06            [24] 2307 	pop	ar6
      00046E D0 07            [24] 2308 	pop	ar7
                           000470  2309 	C$Lab2.c$353$2$103 ==.
                                   2310 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:353: if (random_Result == 0)
      000470 EC               [12] 2311 	mov	a,r4
      000471 70 2C            [24] 2312 	jnz	00148$
                           000473  2313 	C$Lab2.c$355$3$119 ==.
                                   2314 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:355: if (ADC_Value >= 51) //greater than
      000473 C3               [12] 2315 	clr	c
      000474 E5*2A            [12] 2316 	mov	a,_Mode_One_ADC_Value_1_102
      000476 94 33            [12] 2317 	subb	a,#0x33
      000478 E5*2B            [12] 2318 	mov	a,(_Mode_One_ADC_Value_1_102 + 1)
      00047A 94 00            [12] 2319 	subb	a,#0x00
      00047C 40 21            [24] 2320 	jc	00148$
                           00047E  2321 	C$Lab2.c$357$4$120 ==.
                                   2322 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:357: SetBILED('g'); //turn BILED green
      00047E 75 82 67         [24] 2323 	mov	dpl,#0x67
      000481 C0 07            [24] 2324 	push	ar7
      000483 C0 06            [24] 2325 	push	ar6
      000485 C0 05            [24] 2326 	push	ar5
      000487 C0 04            [24] 2327 	push	ar4
      000489 C0 03            [24] 2328 	push	ar3
      00048B C0 02            [24] 2329 	push	ar2
      00048D 12r0Br1A         [24] 2330 	lcall	_SetBILED
      000490 D0 02            [24] 2331 	pop	ar2
      000492 D0 03            [24] 2332 	pop	ar3
      000494 D0 04            [24] 2333 	pop	ar4
      000496 D0 05            [24] 2334 	pop	ar5
      000498 D0 06            [24] 2335 	pop	ar6
      00049A D0 07            [24] 2336 	pop	ar7
                           00049C  2337 	C$Lab2.c$358$4$120 ==.
                                   2338 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:358: Error = 1;
      00049C 75*2C 01         [24] 2339 	mov	_Mode_One_Error_1_102,#0x01
      00049F                       2340 00148$:
                           00049F  2341 	C$Lab2.c$361$2$103 ==.
                                   2342 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:361: if (random_Result == 1)
      00049F BC 01 59         [24] 2343 	cjne	r4,#0x01,00155$
                           0004A2  2344 	C$Lab2.c$363$3$121 ==.
                                   2345 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:363: if (ADC_Value <= 51) //less than
      0004A2 C3               [12] 2346 	clr	c
      0004A3 74 33            [12] 2347 	mov	a,#0x33
      0004A5 95*2A            [12] 2348 	subb	a,_Mode_One_ADC_Value_1_102
      0004A7 E4               [12] 2349 	clr	a
      0004A8 95*2B            [12] 2350 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      0004AA 40 23            [24] 2351 	jc	00152$
                           0004AC  2352 	C$Lab2.c$365$4$122 ==.
                                   2353 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:365: SetBILED('r'); // turn BILED red
      0004AC 75 82 72         [24] 2354 	mov	dpl,#0x72
      0004AF C0 07            [24] 2355 	push	ar7
      0004B1 C0 06            [24] 2356 	push	ar6
      0004B3 C0 05            [24] 2357 	push	ar5
      0004B5 C0 04            [24] 2358 	push	ar4
      0004B7 C0 03            [24] 2359 	push	ar3
      0004B9 C0 02            [24] 2360 	push	ar2
      0004BB 12r0Br1A         [24] 2361 	lcall	_SetBILED
      0004BE D0 02            [24] 2362 	pop	ar2
      0004C0 D0 03            [24] 2363 	pop	ar3
      0004C2 D0 04            [24] 2364 	pop	ar4
      0004C4 D0 05            [24] 2365 	pop	ar5
      0004C6 D0 06            [24] 2366 	pop	ar6
      0004C8 D0 07            [24] 2367 	pop	ar7
                           0004CA  2368 	C$Lab2.c$366$4$122 ==.
                                   2369 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:366: Error = 1;
      0004CA 75*2C 01         [24] 2370 	mov	_Mode_One_Error_1_102,#0x01
      0004CD 80 2C            [24] 2371 	sjmp	00155$
      0004CF                       2372 00152$:
                           0004CF  2373 	C$Lab2.c$368$3$121 ==.
                                   2374 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:368: else if (ADC_Value >= 102) //greater than
      0004CF C3               [12] 2375 	clr	c
      0004D0 E5*2A            [12] 2376 	mov	a,_Mode_One_ADC_Value_1_102
      0004D2 94 66            [12] 2377 	subb	a,#0x66
      0004D4 E5*2B            [12] 2378 	mov	a,(_Mode_One_ADC_Value_1_102 + 1)
      0004D6 94 00            [12] 2379 	subb	a,#0x00
      0004D8 40 21            [24] 2380 	jc	00155$
                           0004DA  2381 	C$Lab2.c$370$4$123 ==.
                                   2382 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:370: SetBILED('g'); //turn BILED green
      0004DA 75 82 67         [24] 2383 	mov	dpl,#0x67
      0004DD C0 07            [24] 2384 	push	ar7
      0004DF C0 06            [24] 2385 	push	ar6
      0004E1 C0 05            [24] 2386 	push	ar5
      0004E3 C0 04            [24] 2387 	push	ar4
      0004E5 C0 03            [24] 2388 	push	ar3
      0004E7 C0 02            [24] 2389 	push	ar2
      0004E9 12r0Br1A         [24] 2390 	lcall	_SetBILED
      0004EC D0 02            [24] 2391 	pop	ar2
      0004EE D0 03            [24] 2392 	pop	ar3
      0004F0 D0 04            [24] 2393 	pop	ar4
      0004F2 D0 05            [24] 2394 	pop	ar5
      0004F4 D0 06            [24] 2395 	pop	ar6
      0004F6 D0 07            [24] 2396 	pop	ar7
                           0004F8  2397 	C$Lab2.c$371$4$123 ==.
                                   2398 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:371: Error = 1;
      0004F8 75*2C 01         [24] 2399 	mov	_Mode_One_Error_1_102,#0x01
      0004FB                       2400 00155$:
                           0004FB  2401 	C$Lab2.c$374$2$103 ==.
                                   2402 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:374: if (random_Result == 2)
      0004FB BC 02 59         [24] 2403 	cjne	r4,#0x02,00162$
                           0004FE  2404 	C$Lab2.c$376$3$124 ==.
                                   2405 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:376: if (ADC_Value <= 102) //less than
      0004FE C3               [12] 2406 	clr	c
      0004FF 74 66            [12] 2407 	mov	a,#0x66
      000501 95*2A            [12] 2408 	subb	a,_Mode_One_ADC_Value_1_102
      000503 E4               [12] 2409 	clr	a
      000504 95*2B            [12] 2410 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      000506 40 23            [24] 2411 	jc	00159$
                           000508  2412 	C$Lab2.c$378$4$125 ==.
                                   2413 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:378: SetBILED('r'); // turn BILED red
      000508 75 82 72         [24] 2414 	mov	dpl,#0x72
      00050B C0 07            [24] 2415 	push	ar7
      00050D C0 06            [24] 2416 	push	ar6
      00050F C0 05            [24] 2417 	push	ar5
      000511 C0 04            [24] 2418 	push	ar4
      000513 C0 03            [24] 2419 	push	ar3
      000515 C0 02            [24] 2420 	push	ar2
      000517 12r0Br1A         [24] 2421 	lcall	_SetBILED
      00051A D0 02            [24] 2422 	pop	ar2
      00051C D0 03            [24] 2423 	pop	ar3
      00051E D0 04            [24] 2424 	pop	ar4
      000520 D0 05            [24] 2425 	pop	ar5
      000522 D0 06            [24] 2426 	pop	ar6
      000524 D0 07            [24] 2427 	pop	ar7
                           000526  2428 	C$Lab2.c$379$4$125 ==.
                                   2429 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:379: Error = 1;
      000526 75*2C 01         [24] 2430 	mov	_Mode_One_Error_1_102,#0x01
      000529 80 2C            [24] 2431 	sjmp	00162$
      00052B                       2432 00159$:
                           00052B  2433 	C$Lab2.c$381$3$124 ==.
                                   2434 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:381: else if (ADC_Value >= 153) //greater than
      00052B C3               [12] 2435 	clr	c
      00052C E5*2A            [12] 2436 	mov	a,_Mode_One_ADC_Value_1_102
      00052E 94 99            [12] 2437 	subb	a,#0x99
      000530 E5*2B            [12] 2438 	mov	a,(_Mode_One_ADC_Value_1_102 + 1)
      000532 94 00            [12] 2439 	subb	a,#0x00
      000534 40 21            [24] 2440 	jc	00162$
                           000536  2441 	C$Lab2.c$383$4$126 ==.
                                   2442 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:383: SetBILED('g'); //turn BILED green
      000536 75 82 67         [24] 2443 	mov	dpl,#0x67
      000539 C0 07            [24] 2444 	push	ar7
      00053B C0 06            [24] 2445 	push	ar6
      00053D C0 05            [24] 2446 	push	ar5
      00053F C0 04            [24] 2447 	push	ar4
      000541 C0 03            [24] 2448 	push	ar3
      000543 C0 02            [24] 2449 	push	ar2
      000545 12r0Br1A         [24] 2450 	lcall	_SetBILED
      000548 D0 02            [24] 2451 	pop	ar2
      00054A D0 03            [24] 2452 	pop	ar3
      00054C D0 04            [24] 2453 	pop	ar4
      00054E D0 05            [24] 2454 	pop	ar5
      000550 D0 06            [24] 2455 	pop	ar6
      000552 D0 07            [24] 2456 	pop	ar7
                           000554  2457 	C$Lab2.c$384$4$126 ==.
                                   2458 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:384: Error = 1;
      000554 75*2C 01         [24] 2459 	mov	_Mode_One_Error_1_102,#0x01
      000557                       2460 00162$:
                           000557  2461 	C$Lab2.c$387$2$103 ==.
                                   2462 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:387: if (random_Result == 3)
      000557 BC 03 59         [24] 2463 	cjne	r4,#0x03,00169$
                           00055A  2464 	C$Lab2.c$389$3$127 ==.
                                   2465 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:389: if (ADC_Value <= 153) //less than
      00055A C3               [12] 2466 	clr	c
      00055B 74 99            [12] 2467 	mov	a,#0x99
      00055D 95*2A            [12] 2468 	subb	a,_Mode_One_ADC_Value_1_102
      00055F E4               [12] 2469 	clr	a
      000560 95*2B            [12] 2470 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      000562 40 23            [24] 2471 	jc	00166$
                           000564  2472 	C$Lab2.c$391$4$128 ==.
                                   2473 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:391: SetBILED('r'); // turn BILED red
      000564 75 82 72         [24] 2474 	mov	dpl,#0x72
      000567 C0 07            [24] 2475 	push	ar7
      000569 C0 06            [24] 2476 	push	ar6
      00056B C0 05            [24] 2477 	push	ar5
      00056D C0 04            [24] 2478 	push	ar4
      00056F C0 03            [24] 2479 	push	ar3
      000571 C0 02            [24] 2480 	push	ar2
      000573 12r0Br1A         [24] 2481 	lcall	_SetBILED
      000576 D0 02            [24] 2482 	pop	ar2
      000578 D0 03            [24] 2483 	pop	ar3
      00057A D0 04            [24] 2484 	pop	ar4
      00057C D0 05            [24] 2485 	pop	ar5
      00057E D0 06            [24] 2486 	pop	ar6
      000580 D0 07            [24] 2487 	pop	ar7
                           000582  2488 	C$Lab2.c$392$4$128 ==.
                                   2489 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:392: Error = 1;
      000582 75*2C 01         [24] 2490 	mov	_Mode_One_Error_1_102,#0x01
      000585 80 2C            [24] 2491 	sjmp	00169$
      000587                       2492 00166$:
                           000587  2493 	C$Lab2.c$394$3$127 ==.
                                   2494 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:394: else if (ADC_Value >= 204) //greater than
      000587 C3               [12] 2495 	clr	c
      000588 E5*2A            [12] 2496 	mov	a,_Mode_One_ADC_Value_1_102
      00058A 94 CC            [12] 2497 	subb	a,#0xcc
      00058C E5*2B            [12] 2498 	mov	a,(_Mode_One_ADC_Value_1_102 + 1)
      00058E 94 00            [12] 2499 	subb	a,#0x00
      000590 40 21            [24] 2500 	jc	00169$
                           000592  2501 	C$Lab2.c$396$4$129 ==.
                                   2502 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:396: SetBILED('g'); //turn BILED green
      000592 75 82 67         [24] 2503 	mov	dpl,#0x67
      000595 C0 07            [24] 2504 	push	ar7
      000597 C0 06            [24] 2505 	push	ar6
      000599 C0 05            [24] 2506 	push	ar5
      00059B C0 04            [24] 2507 	push	ar4
      00059D C0 03            [24] 2508 	push	ar3
      00059F C0 02            [24] 2509 	push	ar2
      0005A1 12r0Br1A         [24] 2510 	lcall	_SetBILED
      0005A4 D0 02            [24] 2511 	pop	ar2
      0005A6 D0 03            [24] 2512 	pop	ar3
      0005A8 D0 04            [24] 2513 	pop	ar4
      0005AA D0 05            [24] 2514 	pop	ar5
      0005AC D0 06            [24] 2515 	pop	ar6
      0005AE D0 07            [24] 2516 	pop	ar7
                           0005B0  2517 	C$Lab2.c$397$4$129 ==.
                                   2518 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:397: Error = 1;
      0005B0 75*2C 01         [24] 2519 	mov	_Mode_One_Error_1_102,#0x01
      0005B3                       2520 00169$:
                           0005B3  2521 	C$Lab2.c$400$2$103 ==.
                                   2522 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:400: if (random_Result == 4)
      0005B3 BC 04 27         [24] 2523 	cjne	r4,#0x04,00173$
                           0005B6  2524 	C$Lab2.c$402$3$130 ==.
                                   2525 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:402: if (ADC_Value <= 204) //less than
      0005B6 C3               [12] 2526 	clr	c
      0005B7 74 CC            [12] 2527 	mov	a,#0xcc
      0005B9 95*2A            [12] 2528 	subb	a,_Mode_One_ADC_Value_1_102
      0005BB E4               [12] 2529 	clr	a
      0005BC 95*2B            [12] 2530 	subb	a,(_Mode_One_ADC_Value_1_102 + 1)
      0005BE 40 1D            [24] 2531 	jc	00173$
                           0005C0  2532 	C$Lab2.c$404$4$131 ==.
                                   2533 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:404: SetBILED('r'); // turn BILED red
      0005C0 75 82 72         [24] 2534 	mov	dpl,#0x72
      0005C3 C0 07            [24] 2535 	push	ar7
      0005C5 C0 06            [24] 2536 	push	ar6
      0005C7 C0 05            [24] 2537 	push	ar5
      0005C9 C0 03            [24] 2538 	push	ar3
      0005CB C0 02            [24] 2539 	push	ar2
      0005CD 12r0Br1A         [24] 2540 	lcall	_SetBILED
      0005D0 D0 02            [24] 2541 	pop	ar2
      0005D2 D0 03            [24] 2542 	pop	ar3
      0005D4 D0 05            [24] 2543 	pop	ar5
      0005D6 D0 06            [24] 2544 	pop	ar6
      0005D8 D0 07            [24] 2545 	pop	ar7
                           0005DA  2546 	C$Lab2.c$405$4$131 ==.
                                   2547 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:405: Error = 1;
      0005DA 75*2C 01         [24] 2548 	mov	_Mode_One_Error_1_102,#0x01
      0005DD                       2549 00173$:
                           0005DD  2550 	C$Lab2.c$408$1$102 ==.
                                   2551 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:408: round_Score = game_Time /169;
      0005DD 75*00 A9         [24] 2552 	mov	__divuint_PARM_2,#0xa9
      0005E0 75*01 00         [24] 2553 	mov	(__divuint_PARM_2 + 1),#0x00
      0005E3 8A 82            [24] 2554 	mov	dpl,r2
      0005E5 8B 83            [24] 2555 	mov	dph,r3
      0005E7 C0 07            [24] 2556 	push	ar7
      0005E9 C0 06            [24] 2557 	push	ar6
      0005EB C0 05            [24] 2558 	push	ar5
      0005ED 12r00r00         [24] 2559 	lcall	__divuint
      0005F0 AB 82            [24] 2560 	mov	r3,dpl
      0005F2 AC 83            [24] 2561 	mov	r4,dph
      0005F4 D0 05            [24] 2562 	pop	ar5
      0005F6 D0 06            [24] 2563 	pop	ar6
      0005F8 D0 07            [24] 2564 	pop	ar7
                           0005FA  2565 	C$Lab2.c$409$2$103 ==.
                                   2566 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:409: if (Error == 1)
      0005FA 74 01            [12] 2567 	mov	a,#0x01
      0005FC B5*2C 07         [24] 2568 	cjne	a,_Mode_One_Error_1_102,00175$
                           0005FF  2569 	C$Lab2.c$411$3$132 ==.
                                   2570 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:411: round_Score = round_Score + 10;
      0005FF 74 0A            [12] 2571 	mov	a,#0x0a
      000601 2B               [12] 2572 	add	a,r3
      000602 FB               [12] 2573 	mov	r3,a
      000603 E4               [12] 2574 	clr	a
      000604 3C               [12] 2575 	addc	a,r4
      000605 FC               [12] 2576 	mov	r4,a
      000606                       2577 00175$:
                           000606  2578 	C$Lab2.c$413$2$103 ==.
                                   2579 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:413: total_Score = total_Score + round_Score;
      000606 EB               [12] 2580 	mov	a,r3
      000607 2E               [12] 2581 	add	a,r6
      000608 FE               [12] 2582 	mov	r6,a
      000609 EC               [12] 2583 	mov	a,r4
      00060A 3F               [12] 2584 	addc	a,r7
      00060B FF               [12] 2585 	mov	r7,a
                           00060C  2586 	C$Lab2.c$414$2$103 ==.
                                   2587 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:414: printf("Round Score: %d",round_Score);
      00060C C0 07            [24] 2588 	push	ar7
      00060E C0 06            [24] 2589 	push	ar6
      000610 C0 05            [24] 2590 	push	ar5
      000612 C0 03            [24] 2591 	push	ar3
      000614 C0 04            [24] 2592 	push	ar4
      000616 74rDB            [12] 2593 	mov	a,#___str_7
      000618 C0 E0            [24] 2594 	push	acc
      00061A 74s03            [12] 2595 	mov	a,#(___str_7 >> 8)
      00061C C0 E0            [24] 2596 	push	acc
      00061E 74 80            [12] 2597 	mov	a,#0x80
      000620 C0 E0            [24] 2598 	push	acc
      000622 12r00r00         [24] 2599 	lcall	_printf
      000625 E5 81            [12] 2600 	mov	a,sp
      000627 24 FB            [12] 2601 	add	a,#0xfb
      000629 F5 81            [12] 2602 	mov	sp,a
      00062B D0 05            [24] 2603 	pop	ar5
      00062D D0 06            [24] 2604 	pop	ar6
      00062F D0 07            [24] 2605 	pop	ar7
                           000631  2606 	C$Lab2.c$415$2$103 ==.
                                   2607 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:415: printf("Total Score: %d",total_Score);
      000631 C0 07            [24] 2608 	push	ar7
      000633 C0 06            [24] 2609 	push	ar6
      000635 C0 05            [24] 2610 	push	ar5
      000637 C0 06            [24] 2611 	push	ar6
      000639 C0 07            [24] 2612 	push	ar7
      00063B 74rEB            [12] 2613 	mov	a,#___str_8
      00063D C0 E0            [24] 2614 	push	acc
      00063F 74s03            [12] 2615 	mov	a,#(___str_8 >> 8)
      000641 C0 E0            [24] 2616 	push	acc
      000643 74 80            [12] 2617 	mov	a,#0x80
      000645 C0 E0            [24] 2618 	push	acc
      000647 12r00r00         [24] 2619 	lcall	_printf
      00064A E5 81            [12] 2620 	mov	a,sp
      00064C 24 FB            [12] 2621 	add	a,#0xfb
      00064E F5 81            [12] 2622 	mov	sp,a
      000650 D0 05            [24] 2623 	pop	ar5
      000652 D0 06            [24] 2624 	pop	ar6
      000654 D0 07            [24] 2625 	pop	ar7
                           000656  2626 	C$Lab2.c$418$2$103 ==.
                                   2627 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:418: TR0 = 1; //start timer
      000656 D2 8C            [12] 2628 	setb	_TR0
                           000658  2629 	C$Lab2.c$419$2$103 ==.
                                   2630 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:419: while (counts <= 169);
      000658                       2631 00176$:
      000658 C3               [12] 2632 	clr	c
      000659 74 A9            [12] 2633 	mov	a,#0xa9
      00065B 95*00            [12] 2634 	subb	a,_counts
      00065D E4               [12] 2635 	clr	a
      00065E 95*01            [12] 2636 	subb	a,(_counts + 1)
      000660 50 F6            [24] 2637 	jnc	00176$
                           000662  2638 	C$Lab2.c$242$1$102 ==.
                                   2639 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:242: for (rounds=0; rounds++; rounds<5)
      000662 02r02r78         [24] 2640 	ljmp	00181$
      000665                       2641 00179$:
                           000665  2642 	C$Lab2.c$421$1$102 ==.
                                   2643 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:421: printf("Final Score: %d",total_Score);
      000665 C0 06            [24] 2644 	push	ar6
      000667 C0 07            [24] 2645 	push	ar7
      000669 74rFB            [12] 2646 	mov	a,#___str_9
      00066B C0 E0            [24] 2647 	push	acc
      00066D 74s03            [12] 2648 	mov	a,#(___str_9 >> 8)
      00066F C0 E0            [24] 2649 	push	acc
      000671 74 80            [12] 2650 	mov	a,#0x80
      000673 C0 E0            [24] 2651 	push	acc
      000675 12r00r00         [24] 2652 	lcall	_printf
      000678 E5 81            [12] 2653 	mov	a,sp
      00067A 24 FB            [12] 2654 	add	a,#0xfb
      00067C F5 81            [12] 2655 	mov	sp,a
                           00067E  2656 	C$Lab2.c$422$1$102 ==.
                                   2657 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:422: Flash_Biled();
      00067E 12r02r1E         [24] 2658 	lcall	_Flash_Biled
                           000681  2659 	C$Lab2.c$423$1$102 ==.
                           000681  2660 	XG$Mode_One$0$0 ==.
      000681 22               [24] 2661 	ret
                                   2662 ;------------------------------------------------------------
                                   2663 ;Allocation info for local variables in function 'Mode_Two'
                                   2664 ;------------------------------------------------------------
                           000682  2665 	G$Mode_Two$0$0 ==.
                           000682  2666 	C$Lab2.c$426$1$102 ==.
                                   2667 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:426: void Mode_Two(void)
                                   2668 ;	-----------------------------------------
                                   2669 ;	 function Mode_Two
                                   2670 ;	-----------------------------------------
      000682                       2671 _Mode_Two:
                           000682  2672 	C$Lab2.c$428$1$134 ==.
                                   2673 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:428: printf("\r\n\nPlayer 1 will have 1 second to adjust the potentionmeter to light up LEDs.\r\nPlayer 2 must then push the button for each LED that was lit within 1.5s\r\n"); // Instructions 
      000682 74r0B            [12] 2674 	mov	a,#___str_10
      000684 C0 E0            [24] 2675 	push	acc
      000686 74s04            [12] 2676 	mov	a,#(___str_10 >> 8)
      000688 C0 E0            [24] 2677 	push	acc
      00068A 74 80            [12] 2678 	mov	a,#0x80
      00068C C0 E0            [24] 2679 	push	acc
      00068E 12r00r00         [24] 2680 	lcall	_printf
      000691 15 81            [12] 2681 	dec	sp
      000693 15 81            [12] 2682 	dec	sp
      000695 15 81            [12] 2683 	dec	sp
                           000697  2684 	C$Lab2.c$430$1$134 ==.
                                   2685 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:430: score = 0; // keeps track of the score
      000697 E4               [12] 2686 	clr	a
      000698 F5*13            [12] 2687 	mov	_score,a
      00069A F5*14            [12] 2688 	mov	(_score + 1),a
                           00069C  2689 	C$Lab2.c$431$1$134 ==.
                                   2690 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:431: SetAllLEDs(1); // Turn off all LEDs 
      00069C 75 82 01         [24] 2691 	mov	dpl,#0x01
      00069F 12r0ArB1         [24] 2692 	lcall	_SetAllLEDs
                           0006A2  2693 	C$Lab2.c$432$1$134 ==.
                                   2694 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:432: buttonPresses = 0; // Keeps track of button presses
      0006A2 E4               [12] 2695 	clr	a
      0006A3 F5*15            [12] 2696 	mov	_buttonPresses,a
      0006A5 F5*16            [12] 2697 	mov	(_buttonPresses + 1),a
                           0006A7  2698 	C$Lab2.c$433$1$134 ==.
                                   2699 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:433: numLEDs = 0; // Counts the number of LEDs lit
      0006A7 F5*23            [12] 2700 	mov	_numLEDs,a
      0006A9 F5*24            [12] 2701 	mov	(_numLEDs + 1),a
                           0006AB  2702 	C$Lab2.c$435$1$134 ==.
                                   2703 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:435: for (tries = 0; tries < 5; tries++)
      0006AB F5*25            [12] 2704 	mov	_tries,a
      0006AD F5*26            [12] 2705 	mov	(_tries + 1),a
      0006AF                       2706 00136$:
                           0006AF  2707 	C$Lab2.c$437$2$135 ==.
                                   2708 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:437: buttonPresses = 0; // Clear number of button presses
      0006AF E4               [12] 2709 	clr	a
      0006B0 F5*15            [12] 2710 	mov	_buttonPresses,a
      0006B2 F5*16            [12] 2711 	mov	(_buttonPresses + 1),a
                           0006B4  2712 	C$Lab2.c$438$2$135 ==.
                                   2713 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:438: ClearTimer0(); // Stop and clear Timer0 and overflows
      0006B4 12r0Br0E         [24] 2714 	lcall	_ClearTimer0
                           0006B7  2715 	C$Lab2.c$439$2$135 ==.
                                   2716 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:439: SetBILED('r'); // Turn BILED red
      0006B7 75 82 72         [24] 2717 	mov	dpl,#0x72
      0006BA 12r0Br1A         [24] 2718 	lcall	_SetBILED
                           0006BD  2719 	C$Lab2.c$440$2$135 ==.
                                   2720 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:440: TR0 = 1; // Start Timer0
      0006BD D2 8C            [12] 2721 	setb	_TR0
                           0006BF  2722 	C$Lab2.c$442$2$135 ==.
                                   2723 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:442: while ( counts < 338) // Wait 1 second for player 1 to set pot
      0006BF                       2724 00101$:
      0006BF C3               [12] 2725 	clr	c
      0006C0 E5*00            [12] 2726 	mov	a,_counts
      0006C2 94 52            [12] 2727 	subb	a,#0x52
      0006C4 E5*01            [12] 2728 	mov	a,(_counts + 1)
      0006C6 94 01            [12] 2729 	subb	a,#0x01
      0006C8 50 11            [24] 2730 	jnc	00103$
                           0006CA  2731 	C$Lab2.c$444$3$136 ==.
                                   2732 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:444: LightNumLEDs(MapADC(read_AD_input(),0,4)); // Light the corresponding number of LEDs relative to the value of the potentionmeter. (Dosn't need to be here)
      0006CA 12r01r83         [24] 2733 	lcall	_read_AD_input
      0006CD 75*00 00         [24] 2734 	mov	_MapADC_PARM_2,#0x00
      0006D0 75*01 04         [24] 2735 	mov	_MapADC_PARM_3,#0x04
      0006D3 12r0ArD0         [24] 2736 	lcall	_MapADC
      0006D6 12r0ArE5         [24] 2737 	lcall	_LightNumLEDs
      0006D9 80 E4            [24] 2738 	sjmp	00101$
      0006DB                       2739 00103$:
                           0006DB  2740 	C$Lab2.c$447$2$135 ==.
                                   2741 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:447: SetBILED('o'); // Turn off BILED
      0006DB 75 82 6F         [24] 2742 	mov	dpl,#0x6f
      0006DE 12r0Br1A         [24] 2743 	lcall	_SetBILED
                           0006E1  2744 	C$Lab2.c$448$2$135 ==.
                                   2745 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:448: numLEDs = MapADC(read_AD_input(),0,4); // Read the corresponding number of LEDs relative to the value of the potentionmeter
      0006E1 12r01r83         [24] 2746 	lcall	_read_AD_input
      0006E4 75*00 00         [24] 2747 	mov	_MapADC_PARM_2,#0x00
      0006E7 75*01 04         [24] 2748 	mov	_MapADC_PARM_3,#0x04
      0006EA 12r0ArD0         [24] 2749 	lcall	_MapADC
      0006ED AF 82            [24] 2750 	mov	r7,dpl
      0006EF 8F*23            [24] 2751 	mov	_numLEDs,r7
      0006F1 75*24 00         [24] 2752 	mov	(_numLEDs + 1),#0x00
                           0006F4  2753 	C$Lab2.c$449$2$135 ==.
                                   2754 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:449: LightNumLEDs(numLEDs); // Light the corresponding number of LEDs
      0006F4 85*23 82         [24] 2755 	mov	dpl,_numLEDs
      0006F7 12r0ArE5         [24] 2756 	lcall	_LightNumLEDs
                           0006FA  2757 	C$Lab2.c$450$2$135 ==.
                                   2758 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:450: ClearTimer0(); // Clear timer and overflows
      0006FA 12r0Br0E         [24] 2759 	lcall	_ClearTimer0
                           0006FD  2760 	C$Lab2.c$451$2$135 ==.
                                   2761 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:451: TR0 = 1; // Start timer0
      0006FD D2 8C            [12] 2762 	setb	_TR0
                           0006FF  2763 	C$Lab2.c$452$2$135 ==.
                                   2764 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:452: while (counts < overflows[tries]) // Wait for round timer to end
      0006FF                       2765 00106$:
      0006FF E5*25            [12] 2766 	mov	a,_tries
      000701 25*25            [12] 2767 	add	a,_tries
      000703 FE               [12] 2768 	mov	r6,a
      000704 E5*26            [12] 2769 	mov	a,(_tries + 1)
      000706 33               [12] 2770 	rlc	a
      000707 EE               [12] 2771 	mov	a,r6
      000708 24r19            [12] 2772 	add	a,#_overflows
      00070A F9               [12] 2773 	mov	r1,a
      00070B 87 06            [24] 2774 	mov	ar6,@r1
      00070D 09               [12] 2775 	inc	r1
      00070E 87 07            [24] 2776 	mov	ar7,@r1
      000710 19               [12] 2777 	dec	r1
      000711 C3               [12] 2778 	clr	c
      000712 E5*00            [12] 2779 	mov	a,_counts
      000714 9E               [12] 2780 	subb	a,r6
      000715 E5*01            [12] 2781 	mov	a,(_counts + 1)
      000717 9F               [12] 2782 	subb	a,r7
      000718 50 12            [24] 2783 	jnc	00108$
                           00071A  2784 	C$Lab2.c$454$3$137 ==.
                                   2785 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:454: if(DebounceButton()==1) // If the button was pressed
      00071A 12r0Br3F         [24] 2786 	lcall	_DebounceButton
      00071D AF 82            [24] 2787 	mov	r7,dpl
      00071F BF 01 DD         [24] 2788 	cjne	r7,#0x01,00106$
                           000722  2789 	C$Lab2.c$456$4$138 ==.
                                   2790 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:456: buttonPresses++; // Increment number of presses
      000722 05*15            [12] 2791 	inc	_buttonPresses
      000724 E4               [12] 2792 	clr	a
      000725 B5*15 D7         [24] 2793 	cjne	a,_buttonPresses,00106$
      000728 05*16            [12] 2794 	inc	(_buttonPresses + 1)
      00072A 80 D3            [24] 2795 	sjmp	00106$
      00072C                       2796 00108$:
                           00072C  2797 	C$Lab2.c$460$2$135 ==.
                                   2798 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:460: if (buttonPresses == numLEDs) // If they got the correct number of presses
      00072C E5*23            [12] 2799 	mov	a,_numLEDs
      00072E B5*15 10         [24] 2800 	cjne	a,_buttonPresses,00110$
      000731 E5*24            [12] 2801 	mov	a,(_numLEDs + 1)
      000733 B5*16 0B         [24] 2802 	cjne	a,(_buttonPresses + 1),00110$
                           000736  2803 	C$Lab2.c$462$3$139 ==.
                                   2804 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:462: score += 10; // gain 10 points
      000736 74 0A            [12] 2805 	mov	a,#0x0a
      000738 25*13            [12] 2806 	add	a,_score
      00073A F5*13            [12] 2807 	mov	_score,a
      00073C E4               [12] 2808 	clr	a
      00073D 35*14            [12] 2809 	addc	a,(_score + 1)
      00073F F5*14            [12] 2810 	mov	(_score + 1),a
      000741                       2811 00110$:
                           000741  2812 	C$Lab2.c$465$2$135 ==.
                                   2813 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:465: ClearTimer0(); // Clear Timer0 and overflows
      000741 12r0Br0E         [24] 2814 	lcall	_ClearTimer0
                           000744  2815 	C$Lab2.c$466$2$135 ==.
                                   2816 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:466: TR0 = 1; // Start the timer
      000744 D2 8C            [12] 2817 	setb	_TR0
                           000746  2818 	C$Lab2.c$468$2$135 ==.
                                   2819 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:468: SetAllLEDs(1); // Turn off all LEDs
      000746 75 82 01         [24] 2820 	mov	dpl,#0x01
      000749 12r0ArB1         [24] 2821 	lcall	_SetAllLEDs
                           00074C  2822 	C$Lab2.c$469$2$135 ==.
                                   2823 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:469: while (counts < 7); // wait 20ms
      00074C                       2824 00111$:
      00074C C3               [12] 2825 	clr	c
      00074D E5*00            [12] 2826 	mov	a,_counts
      00074F 94 07            [12] 2827 	subb	a,#0x07
      000751 E5*01            [12] 2828 	mov	a,(_counts + 1)
      000753 94 00            [12] 2829 	subb	a,#0x00
      000755 40 F5            [24] 2830 	jc	00111$
                           000757  2831 	C$Lab2.c$470$2$135 ==.
                                   2832 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:470: SetAllLEDs(0); // Turn on all LEDs
      000757 75 82 00         [24] 2833 	mov	dpl,#0x00
      00075A 12r0ArB1         [24] 2834 	lcall	_SetAllLEDs
                           00075D  2835 	C$Lab2.c$471$2$135 ==.
                                   2836 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:471: ClearTimer0(); // Clear Timer0 and overflows
      00075D 12r0Br0E         [24] 2837 	lcall	_ClearTimer0
                           000760  2838 	C$Lab2.c$472$2$135 ==.
                                   2839 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:472: TR0 = 1; // Start the timer
      000760 D2 8C            [12] 2840 	setb	_TR0
                           000762  2841 	C$Lab2.c$473$2$135 ==.
                                   2842 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:473: while (counts < 7); // wait 20ms
      000762                       2843 00114$:
      000762 C3               [12] 2844 	clr	c
      000763 E5*00            [12] 2845 	mov	a,_counts
      000765 94 07            [12] 2846 	subb	a,#0x07
      000767 E5*01            [12] 2847 	mov	a,(_counts + 1)
      000769 94 00            [12] 2848 	subb	a,#0x00
      00076B 40 F5            [24] 2849 	jc	00114$
                           00076D  2850 	C$Lab2.c$474$2$135 ==.
                                   2851 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:474: SetAllLEDs(1); // Turn off all LEDs
      00076D 75 82 01         [24] 2852 	mov	dpl,#0x01
      000770 12r0ArB1         [24] 2853 	lcall	_SetAllLEDs
                           000773  2854 	C$Lab2.c$476$2$135 ==.
                                   2855 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:476: CompareVals(buttonPresses, numLEDs); // Turn BILED red or green if it was low or high
      000773 85*15 82         [24] 2856 	mov	dpl,_buttonPresses
      000776 85*23*2E         [24] 2857 	mov	_CompareVals_PARM_2,_numLEDs
      000779 12r0Br6B         [24] 2858 	lcall	_CompareVals
                           00077C  2859 	C$Lab2.c$478$2$135 ==.
                                   2860 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:478: if (buttonPresses == numLEDs) // If they got it correct
      00077C E5*23            [12] 2861 	mov	a,_numLEDs
      00077E B5*15 1C         [24] 2862 	cjne	a,_buttonPresses,00118$
      000781 E5*24            [12] 2863 	mov	a,(_numLEDs + 1)
      000783 B5*16 17         [24] 2864 	cjne	a,(_buttonPresses + 1),00118$
                           000786  2865 	C$Lab2.c$480$3$140 ==.
                                   2866 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:480: printf("\r\n10 points gained!"); // Show that they gained 10 points
      000786 74rA5            [12] 2867 	mov	a,#___str_11
      000788 C0 E0            [24] 2868 	push	acc
      00078A 74s04            [12] 2869 	mov	a,#(___str_11 >> 8)
      00078C C0 E0            [24] 2870 	push	acc
      00078E 74 80            [12] 2871 	mov	a,#0x80
      000790 C0 E0            [24] 2872 	push	acc
      000792 12r00r00         [24] 2873 	lcall	_printf
      000795 15 81            [12] 2874 	dec	sp
      000797 15 81            [12] 2875 	dec	sp
      000799 15 81            [12] 2876 	dec	sp
      00079B 80 15            [24] 2877 	sjmp	00119$
      00079D                       2878 00118$:
                           00079D  2879 	C$Lab2.c$484$3$141 ==.
                                   2880 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:484: printf("\r\n0 points gained!"); // Show they gained 0 points
      00079D 74rB9            [12] 2881 	mov	a,#___str_12
      00079F C0 E0            [24] 2882 	push	acc
      0007A1 74s04            [12] 2883 	mov	a,#(___str_12 >> 8)
      0007A3 C0 E0            [24] 2884 	push	acc
      0007A5 74 80            [12] 2885 	mov	a,#0x80
      0007A7 C0 E0            [24] 2886 	push	acc
      0007A9 12r00r00         [24] 2887 	lcall	_printf
      0007AC 15 81            [12] 2888 	dec	sp
      0007AE 15 81            [12] 2889 	dec	sp
      0007B0 15 81            [12] 2890 	dec	sp
      0007B2                       2891 00119$:
                           0007B2  2892 	C$Lab2.c$487$2$135 ==.
                                   2893 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:487: printf("\r\nTotal score: %d",score); // print the total score
      0007B2 C0*13            [24] 2894 	push	_score
      0007B4 C0*14            [24] 2895 	push	(_score + 1)
      0007B6 74rCC            [12] 2896 	mov	a,#___str_13
      0007B8 C0 E0            [24] 2897 	push	acc
      0007BA 74s04            [12] 2898 	mov	a,#(___str_13 >> 8)
      0007BC C0 E0            [24] 2899 	push	acc
      0007BE 74 80            [12] 2900 	mov	a,#0x80
      0007C0 C0 E0            [24] 2901 	push	acc
      0007C2 12r00r00         [24] 2902 	lcall	_printf
      0007C5 E5 81            [12] 2903 	mov	a,sp
      0007C7 24 FB            [12] 2904 	add	a,#0xfb
      0007C9 F5 81            [12] 2905 	mov	sp,a
                           0007CB  2906 	C$Lab2.c$489$2$135 ==.
                                   2907 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:489: ClearTimer0(); // Clear Timer0 and overflows
      0007CB 12r0Br0E         [24] 2908 	lcall	_ClearTimer0
                           0007CE  2909 	C$Lab2.c$490$2$135 ==.
                                   2910 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:490: TR0 = 1; // Start the timer
      0007CE D2 8C            [12] 2911 	setb	_TR0
                           0007D0  2912 	C$Lab2.c$492$2$135 ==.
                                   2913 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:492: while (counts < 338) // Wait 1 second
      0007D0                       2914 00120$:
      0007D0 C3               [12] 2915 	clr	c
      0007D1 E5*00            [12] 2916 	mov	a,_counts
      0007D3 94 52            [12] 2917 	subb	a,#0x52
      0007D5 E5*01            [12] 2918 	mov	a,(_counts + 1)
      0007D7 94 01            [12] 2919 	subb	a,#0x01
      0007D9 50 04            [24] 2920 	jnc	00122$
                           0007DB  2921 	C$Lab2.c$494$3$142 ==.
                                   2922 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:494: TR0 = 1; // Do something to get more accurate time
      0007DB D2 8C            [12] 2923 	setb	_TR0
      0007DD 80 F1            [24] 2924 	sjmp	00120$
      0007DF                       2925 00122$:
                           0007DF  2926 	C$Lab2.c$496$2$135 ==.
                                   2927 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:496: SetBILED('o'); // Turn off BILED
      0007DF 75 82 6F         [24] 2928 	mov	dpl,#0x6f
      0007E2 12r0Br1A         [24] 2929 	lcall	_SetBILED
                           0007E5  2930 	C$Lab2.c$497$2$135 ==.
                                   2931 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:497: ClearTimer0(); // Clear Timer0 and overflows
      0007E5 12r0Br0E         [24] 2932 	lcall	_ClearTimer0
                           0007E8  2933 	C$Lab2.c$498$2$135 ==.
                                   2934 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:498: TR0 = 1; // Start the timer
      0007E8 D2 8C            [12] 2935 	setb	_TR0
                           0007EA  2936 	C$Lab2.c$499$2$135 ==.
                                   2937 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:499: while (counts < 169); // Wait 0.5s
      0007EA                       2938 00123$:
      0007EA C3               [12] 2939 	clr	c
      0007EB E5*00            [12] 2940 	mov	a,_counts
      0007ED 94 A9            [12] 2941 	subb	a,#0xa9
      0007EF E5*01            [12] 2942 	mov	a,(_counts + 1)
      0007F1 94 00            [12] 2943 	subb	a,#0x00
      0007F3 40 F5            [24] 2944 	jc	00123$
                           0007F5  2945 	C$Lab2.c$435$1$134 ==.
                                   2946 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:435: for (tries = 0; tries < 5; tries++)
      0007F5 05*25            [12] 2947 	inc	_tries
      0007F7 E4               [12] 2948 	clr	a
      0007F8 B5*25 02         [24] 2949 	cjne	a,_tries,00222$
      0007FB 05*26            [12] 2950 	inc	(_tries + 1)
      0007FD                       2951 00222$:
      0007FD C3               [12] 2952 	clr	c
      0007FE E5*25            [12] 2953 	mov	a,_tries
      000800 94 05            [12] 2954 	subb	a,#0x05
      000802 E5*26            [12] 2955 	mov	a,(_tries + 1)
      000804 64 80            [12] 2956 	xrl	a,#0x80
      000806 94 80            [12] 2957 	subb	a,#0x80
      000808 50 03            [24] 2958 	jnc	00223$
      00080A 02r06rAF         [24] 2959 	ljmp	00136$
      00080D                       2960 00223$:
                           00080D  2961 	C$Lab2.c$502$1$134 ==.
                                   2962 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:502: printf("\r\nFinal score: %d", score); // Print the final score
      00080D C0*13            [24] 2963 	push	_score
      00080F C0*14            [24] 2964 	push	(_score + 1)
      000811 74rDE            [12] 2965 	mov	a,#___str_14
      000813 C0 E0            [24] 2966 	push	acc
      000815 74s04            [12] 2967 	mov	a,#(___str_14 >> 8)
      000817 C0 E0            [24] 2968 	push	acc
      000819 74 80            [12] 2969 	mov	a,#0x80
      00081B C0 E0            [24] 2970 	push	acc
      00081D 12r00r00         [24] 2971 	lcall	_printf
      000820 E5 81            [12] 2972 	mov	a,sp
      000822 24 FB            [12] 2973 	add	a,#0xfb
      000824 F5 81            [12] 2974 	mov	sp,a
                           000826  2975 	C$Lab2.c$504$1$134 ==.
                                   2976 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:504: ClearTimer0(); // Clear Timer0 and overflows
      000826 12r0Br0E         [24] 2977 	lcall	_ClearTimer0
                           000829  2978 	C$Lab2.c$505$1$134 ==.
                                   2979 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:505: TR0 = 1; // Start the timer	
      000829 D2 8C            [12] 2980 	setb	_TR0
                           00082B  2981 	C$Lab2.c$506$1$134 ==.
                                   2982 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:506: tmpCount = 0; // Create temp value
      00082B E4               [12] 2983 	clr	a
      00082C F5*17            [12] 2984 	mov	_tmpCount,a
      00082E F5*18            [12] 2985 	mov	(_tmpCount + 1),a
                           000830  2986 	C$Lab2.c$508$1$134 ==.
                                   2987 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:508: while (counts < 338) // For 1 second
      000830                       2988 00133$:
      000830 C3               [12] 2989 	clr	c
      000831 E5*00            [12] 2990 	mov	a,_counts
      000833 94 52            [12] 2991 	subb	a,#0x52
      000835 E5*01            [12] 2992 	mov	a,(_counts + 1)
      000837 94 01            [12] 2993 	subb	a,#0x01
      000839 50 3E            [24] 2994 	jnc	00135$
                           00083B  2995 	C$Lab2.c$510$2$143 ==.
                                   2996 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:510: SetBILED('r'); // Turn BILED red
      00083B 75 82 72         [24] 2997 	mov	dpl,#0x72
      00083E 12r0Br1A         [24] 2998 	lcall	_SetBILED
                           000841  2999 	C$Lab2.c$511$2$143 ==.
                                   3000 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:511: tmpCount = counts; // Save current counts
      000841 85*00*17         [24] 3001 	mov	_tmpCount,_counts
      000844 85*01*18         [24] 3002 	mov	(_tmpCount + 1),(_counts + 1)
                           000847  3003 	C$Lab2.c$512$2$143 ==.
                                   3004 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:512: while(counts < (tmpCount + 7)); // wait 20ms
      000847                       3005 00127$:
      000847 74 07            [12] 3006 	mov	a,#0x07
      000849 25*17            [12] 3007 	add	a,_tmpCount
      00084B FE               [12] 3008 	mov	r6,a
      00084C E4               [12] 3009 	clr	a
      00084D 35*18            [12] 3010 	addc	a,(_tmpCount + 1)
      00084F FF               [12] 3011 	mov	r7,a
      000850 C3               [12] 3012 	clr	c
      000851 E5*00            [12] 3013 	mov	a,_counts
      000853 9E               [12] 3014 	subb	a,r6
      000854 E5*01            [12] 3015 	mov	a,(_counts + 1)
      000856 9F               [12] 3016 	subb	a,r7
      000857 40 EE            [24] 3017 	jc	00127$
                           000859  3018 	C$Lab2.c$513$2$143 ==.
                                   3019 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:513: SetBILED('g'); // Turn BILED green
      000859 75 82 67         [24] 3020 	mov	dpl,#0x67
      00085C 12r0Br1A         [24] 3021 	lcall	_SetBILED
                           00085F  3022 	C$Lab2.c$514$2$143 ==.
                                   3023 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:514: tmpCount = counts; // Save current counts
      00085F 85*00*17         [24] 3024 	mov	_tmpCount,_counts
      000862 85*01*18         [24] 3025 	mov	(_tmpCount + 1),(_counts + 1)
                           000865  3026 	C$Lab2.c$515$2$143 ==.
                                   3027 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:515: while(counts < (tmpCount + 7)); // wait 20ms
      000865                       3028 00130$:
      000865 74 07            [12] 3029 	mov	a,#0x07
      000867 25*17            [12] 3030 	add	a,_tmpCount
      000869 FE               [12] 3031 	mov	r6,a
      00086A E4               [12] 3032 	clr	a
      00086B 35*18            [12] 3033 	addc	a,(_tmpCount + 1)
      00086D FF               [12] 3034 	mov	r7,a
      00086E C3               [12] 3035 	clr	c
      00086F E5*00            [12] 3036 	mov	a,_counts
      000871 9E               [12] 3037 	subb	a,r6
      000872 E5*01            [12] 3038 	mov	a,(_counts + 1)
      000874 9F               [12] 3039 	subb	a,r7
      000875 50 B9            [24] 3040 	jnc	00133$
      000877 80 EC            [24] 3041 	sjmp	00130$
      000879                       3042 00135$:
                           000879  3043 	C$Lab2.c$518$1$134 ==.
                                   3044 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:518: SetBILED('o'); // Turn off BILED
      000879 75 82 6F         [24] 3045 	mov	dpl,#0x6f
      00087C 12r0Br1A         [24] 3046 	lcall	_SetBILED
                           00087F  3047 	C$Lab2.c$519$1$134 ==.
                           00087F  3048 	XG$Mode_Two$0$0 ==.
      00087F 22               [24] 3049 	ret
                                   3050 ;------------------------------------------------------------
                                   3051 ;Allocation info for local variables in function 'Mode_Three'
                                   3052 ;------------------------------------------------------------
                           000880  3053 	G$Mode_Three$0$0 ==.
                           000880  3054 	C$Lab2.c$523$1$134 ==.
                                   3055 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:523: void Mode_Three(void)
                                   3056 ;	-----------------------------------------
                                   3057 ;	 function Mode_Three
                                   3058 ;	-----------------------------------------
      000880                       3059 _Mode_Three:
                           000880  3060 	C$Lab2.c$525$1$145 ==.
                                   3061 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:525: printf("\n\rUse the potentiometer to draw a bar graph on the terminal.\n\rIts length should be a percentage of the maximum length as specified by the number of LEDs lit.\n\n\rNo lit LEDs indicate that the bar should be 0% of the maximum length, 1 lit LED indicates a bar 25% of the maximum length,\n\r2 lit LEDs indicate 50%, 3 lit LEDs indicate 75%, and 4 lit LEDs indicate 100%.\n\n\rYou have one second to draw the appropriate graph. If the graph is longer than the desired value, the BILED will turn red.\n\rIf the graph is shorter than the desired value, the BILED will turn green.\n\n\rA maximum of 10 points are awarded for each correct answer.\n\rTwo points are deducted for each character position off. There are 5 rounds.\n\n\n\rPress the pushbutton to start.");
      000880 74rF0            [12] 3062 	mov	a,#___str_15
      000882 C0 E0            [24] 3063 	push	acc
      000884 74s04            [12] 3064 	mov	a,#(___str_15 >> 8)
      000886 C0 E0            [24] 3065 	push	acc
      000888 74 80            [12] 3066 	mov	a,#0x80
      00088A C0 E0            [24] 3067 	push	acc
      00088C 12r00r00         [24] 3068 	lcall	_printf
      00088F 15 81            [12] 3069 	dec	sp
      000891 15 81            [12] 3070 	dec	sp
      000893 15 81            [12] 3071 	dec	sp
                           000895  3072 	C$Lab2.c$527$1$145 ==.
                                   3073 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:527: while(DebounceButton()==0);
      000895                       3074 00101$:
      000895 12r0Br3F         [24] 3075 	lcall	_DebounceButton
      000898 E5 82            [12] 3076 	mov	a,dpl
      00089A 60 F9            [24] 3077 	jz	00101$
                           00089C  3078 	C$Lab2.c$529$1$145 ==.
                                   3079 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:529: printf("\n\n\n\rSTART");
      00089C 74rD3            [12] 3080 	mov	a,#___str_16
      00089E C0 E0            [24] 3081 	push	acc
      0008A0 74s07            [12] 3082 	mov	a,#(___str_16 >> 8)
      0008A2 C0 E0            [24] 3083 	push	acc
      0008A4 74 80            [12] 3084 	mov	a,#0x80
      0008A6 C0 E0            [24] 3085 	push	acc
      0008A8 12r00r00         [24] 3086 	lcall	_printf
      0008AB 15 81            [12] 3087 	dec	sp
      0008AD 15 81            [12] 3088 	dec	sp
      0008AF 15 81            [12] 3089 	dec	sp
                           0008B1  3090 	C$Lab2.c$531$1$145 ==.
                                   3091 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:531: score = 0;	// sets score to 0
      0008B1 E4               [12] 3092 	clr	a
      0008B2 F5*13            [12] 3093 	mov	_score,a
      0008B4 F5*14            [12] 3094 	mov	(_score + 1),a
                           0008B6  3095 	C$Lab2.c$532$1$145 ==.
                                   3096 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:532: LED0 = 1;	// turns off LED0
      0008B6 D2 B6            [12] 3097 	setb	_LED0
                           0008B8  3098 	C$Lab2.c$533$1$145 ==.
                                   3099 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:533: LED1 = 1;	// turns off LED1
      0008B8 D2 B5            [12] 3100 	setb	_LED1
                           0008BA  3101 	C$Lab2.c$534$1$145 ==.
                                   3102 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:534: LED2 = 1;	// turns off LED2
      0008BA D2 B7            [12] 3103 	setb	_LED2
                           0008BC  3104 	C$Lab2.c$535$1$145 ==.
                                   3105 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:535: LED3 = 1;	// turns off LED3
      0008BC D2 B2            [12] 3106 	setb	_LED3
                           0008BE  3107 	C$Lab2.c$536$1$145 ==.
                                   3108 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:536: SetBILED('r');	//	turns BILED red
      0008BE 75 82 72         [24] 3109 	mov	dpl,#0x72
      0008C1 12r0Br1A         [24] 3110 	lcall	_SetBILED
                           0008C4  3111 	C$Lab2.c$538$1$145 ==.
                                   3112 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:538: for (round = 0; round<=5; round++) {
      0008C4 E4               [12] 3113 	clr	a
      0008C5 F5*04            [12] 3114 	mov	_round,a
      0008C7 F5*05            [12] 3115 	mov	(_round + 1),a
      0008C9                       3116 00127$:
                           0008C9  3117 	C$Lab2.c$539$2$146 ==.
                                   3118 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:539: randomNumber = random();
      0008C9 12r0ArA4         [24] 3119 	lcall	_random
      0008CC AF 82            [24] 3120 	mov	r7,dpl
      0008CE 8F*0A            [24] 3121 	mov	_randomNumber,r7
      0008D0 75*0B 00         [24] 3122 	mov	(_randomNumber + 1),#0x00
                           0008D3  3123 	C$Lab2.c$540$2$146 ==.
                                   3124 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:540: LightNumLEDs(randomNumber);
      0008D3 85*0A 82         [24] 3125 	mov	dpl,_randomNumber
      0008D6 12r0ArE5         [24] 3126 	lcall	_LightNumLEDs
                           0008D9  3127 	C$Lab2.c$542$2$146 ==.
                                   3128 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:542: SetBILED('o'); // turns off BILED
      0008D9 75 82 6F         [24] 3129 	mov	dpl,#0x6f
      0008DC 12r0Br1A         [24] 3130 	lcall	_SetBILED
                           0008DF  3131 	C$Lab2.c$544$2$146 ==.
                                   3132 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:544: counts = 0; // sets timer to 0
      0008DF E4               [12] 3133 	clr	a
      0008E0 F5*00            [12] 3134 	mov	_counts,a
      0008E2 F5*01            [12] 3135 	mov	(_counts + 1),a
                           0008E4  3136 	C$Lab2.c$545$2$146 ==.
                                   3137 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:545: TR0 = 1; // starts timer
      0008E4 D2 8C            [12] 3138 	setb	_TR0
                           0008E6  3139 	C$Lab2.c$547$2$146 ==.
                                   3140 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:547: while (counts<337) {
      0008E6                       3141 00104$:
      0008E6 C3               [12] 3142 	clr	c
      0008E7 E5*00            [12] 3143 	mov	a,_counts
      0008E9 94 51            [12] 3144 	subb	a,#0x51
      0008EB E5*01            [12] 3145 	mov	a,(_counts + 1)
      0008ED 94 01            [12] 3146 	subb	a,#0x01
      0008EF 50 08            [24] 3147 	jnc	00106$
                           0008F1  3148 	C$Lab2.c$548$3$147 ==.
                                   3149 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:548: Draw_Bar(read_AD_input());	// continuously reads pot AD value and passes value to Draw_Bar()
      0008F1 12r01r83         [24] 3150 	lcall	_read_AD_input
      0008F4 12r0Ar48         [24] 3151 	lcall	_Draw_Bar
      0008F7 80 ED            [24] 3152 	sjmp	00104$
      0008F9                       3153 00106$:
                           0008F9  3154 	C$Lab2.c$551$2$146 ==.
                                   3155 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:551: ADC_value = (read_AD_input()/4);	// saves current (ADC value)/4
      0008F9 12r01r83         [24] 3156 	lcall	_read_AD_input
      0008FC E5 82            [12] 3157 	mov	a,dpl
      0008FE 03               [12] 3158 	rr	a
      0008FF 03               [12] 3159 	rr	a
      000900 54 3F            [12] 3160 	anl	a,#0x3f
      000902 FF               [12] 3161 	mov	r7,a
      000903 8F*0D            [24] 3162 	mov	_ADC_value,r7
      000905 75*0E 00         [24] 3163 	mov	(_ADC_value + 1),#0x00
                           000908  3164 	C$Lab2.c$553$2$146 ==.
                                   3165 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:553: while (counts<437) {	//flashes all LEDS off
      000908                       3166 00107$:
      000908 C3               [12] 3167 	clr	c
      000909 E5*00            [12] 3168 	mov	a,_counts
      00090B 94 B5            [12] 3169 	subb	a,#0xb5
      00090D E5*01            [12] 3170 	mov	a,(_counts + 1)
      00090F 94 01            [12] 3171 	subb	a,#0x01
      000911 50 0A            [24] 3172 	jnc	00110$
                           000913  3173 	C$Lab2.c$554$3$148 ==.
                                   3174 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:554: LED0 = 1;
      000913 D2 B6            [12] 3175 	setb	_LED0
                           000915  3176 	C$Lab2.c$555$3$148 ==.
                                   3177 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:555: LED1 = 1;
      000915 D2 B5            [12] 3178 	setb	_LED1
                           000917  3179 	C$Lab2.c$556$3$148 ==.
                                   3180 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:556: LED2 = 1;
      000917 D2 B7            [12] 3181 	setb	_LED2
                           000919  3182 	C$Lab2.c$557$3$148 ==.
                                   3183 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:557: LED3 = 1;
      000919 D2 B2            [12] 3184 	setb	_LED3
                           00091B  3185 	C$Lab2.c$559$2$146 ==.
                                   3186 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:559: while (counts<537) {	//flashes all LEDS on
      00091B 80 EB            [24] 3187 	sjmp	00107$
      00091D                       3188 00110$:
      00091D C3               [12] 3189 	clr	c
      00091E E5*00            [12] 3190 	mov	a,_counts
      000920 94 19            [12] 3191 	subb	a,#0x19
      000922 E5*01            [12] 3192 	mov	a,(_counts + 1)
      000924 94 02            [12] 3193 	subb	a,#0x02
      000926 50 0A            [24] 3194 	jnc	00113$
                           000928  3195 	C$Lab2.c$560$3$149 ==.
                                   3196 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:560: LED0 = 0;
      000928 C2 B6            [12] 3197 	clr	_LED0
                           00092A  3198 	C$Lab2.c$561$3$149 ==.
                                   3199 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:561: LED1 = 0;
      00092A C2 B5            [12] 3200 	clr	_LED1
                           00092C  3201 	C$Lab2.c$562$3$149 ==.
                                   3202 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:562: LED2 = 0;
      00092C C2 B7            [12] 3203 	clr	_LED2
                           00092E  3204 	C$Lab2.c$563$3$149 ==.
                                   3205 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:563: LED3 = 0;
      00092E C2 B2            [12] 3206 	clr	_LED3
                           000930  3207 	C$Lab2.c$565$2$146 ==.
                                   3208 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:565: while (counts<637) {	//flashes all LEDS off
      000930 80 EB            [24] 3209 	sjmp	00110$
      000932                       3210 00113$:
      000932 C3               [12] 3211 	clr	c
      000933 E5*00            [12] 3212 	mov	a,_counts
      000935 94 7D            [12] 3213 	subb	a,#0x7d
      000937 E5*01            [12] 3214 	mov	a,(_counts + 1)
      000939 94 02            [12] 3215 	subb	a,#0x02
      00093B 50 5D            [24] 3216 	jnc	00115$
                           00093D  3217 	C$Lab2.c$566$3$150 ==.
                                   3218 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:566: LED0 = 1;
      00093D D2 B6            [12] 3219 	setb	_LED0
                           00093F  3220 	C$Lab2.c$567$3$150 ==.
                                   3221 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:567: LED1 = 1;
      00093F D2 B5            [12] 3222 	setb	_LED1
                           000941  3223 	C$Lab2.c$568$3$150 ==.
                                   3224 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:568: LED2 = 1;
      000941 D2 B7            [12] 3225 	setb	_LED2
                           000943  3226 	C$Lab2.c$569$3$150 ==.
                                   3227 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:569: LED3 = 1;
      000943 D2 B2            [12] 3228 	setb	_LED3
                           000945  3229 	C$Lab2.c$571$3$150 ==.
                                   3230 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:571: counts = 0;			// resets counts
      000945 E4               [12] 3231 	clr	a
      000946 F5*00            [12] 3232 	mov	_counts,a
      000948 F5*01            [12] 3233 	mov	(_counts + 1),a
                           00094A  3234 	C$Lab2.c$573$3$150 ==.
                                   3235 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:573: Compare_Answer((ADC_value/16), randomNumber);
      00094A 85*0D 82         [24] 3236 	mov	dpl,_ADC_value
      00094D E5*0E            [12] 3237 	mov	a,(_ADC_value + 1)
      00094F C4               [12] 3238 	swap	a
      000950 C5 82            [12] 3239 	xch	a,dpl
      000952 C4               [12] 3240 	swap	a
      000953 54 0F            [12] 3241 	anl	a,#0x0f
      000955 65 82            [12] 3242 	xrl	a,dpl
      000957 C5 82            [12] 3243 	xch	a,dpl
      000959 54 0F            [12] 3244 	anl	a,#0x0f
      00095B C5 82            [12] 3245 	xch	a,dpl
      00095D 65 82            [12] 3246 	xrl	a,dpl
      00095F C5 82            [12] 3247 	xch	a,dpl
      000961 F5 83            [12] 3248 	mov	dph,a
      000963 85*0A*29         [24] 3249 	mov	_Compare_Answer_PARM_2,_randomNumber
      000966 12r01rD8         [24] 3250 	lcall	_Compare_Answer
                           000969  3251 	C$Lab2.c$575$3$150 ==.
                                   3252 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:575: error = (abs((randomNumber*16) - ADC_value)*2);	// calculates error
      000969 AE*0A            [24] 3253 	mov	r6,_randomNumber
      00096B E5*0B            [12] 3254 	mov	a,(_randomNumber + 1)
      00096D C4               [12] 3255 	swap	a
      00096E 54 F0            [12] 3256 	anl	a,#0xf0
      000970 CE               [12] 3257 	xch	a,r6
      000971 C4               [12] 3258 	swap	a
      000972 CE               [12] 3259 	xch	a,r6
      000973 6E               [12] 3260 	xrl	a,r6
      000974 CE               [12] 3261 	xch	a,r6
      000975 54 F0            [12] 3262 	anl	a,#0xf0
      000977 CE               [12] 3263 	xch	a,r6
      000978 6E               [12] 3264 	xrl	a,r6
      000979 FF               [12] 3265 	mov	r7,a
      00097A EE               [12] 3266 	mov	a,r6
      00097B C3               [12] 3267 	clr	c
      00097C 95*0D            [12] 3268 	subb	a,_ADC_value
      00097E F5 82            [12] 3269 	mov	dpl,a
      000980 EF               [12] 3270 	mov	a,r7
      000981 95*0E            [12] 3271 	subb	a,(_ADC_value + 1)
      000983 F5 83            [12] 3272 	mov	dph,a
      000985 12r00r00         [24] 3273 	lcall	_abs
      000988 AE 82            [24] 3274 	mov	r6,dpl
      00098A AF 83            [24] 3275 	mov	r7,dph
      00098C 8E*0F            [24] 3276 	mov	_error,r6
      00098E EF               [12] 3277 	mov	a,r7
      00098F C5*0F            [12] 3278 	xch	a,_error
      000991 25 E0            [12] 3279 	add	a,acc
      000993 C5*0F            [12] 3280 	xch	a,_error
      000995 33               [12] 3281 	rlc	a
      000996 F5*10            [12] 3282 	mov	(_error + 1),a
      000998 80 98            [24] 3283 	sjmp	00113$
      00099A                       3284 00115$:
                           00099A  3285 	C$Lab2.c$578$2$146 ==.
                                   3286 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:578: if ((10 - error)>0) {					// calculates score for round
      00099A 74 0A            [12] 3287 	mov	a,#0x0a
      00099C C3               [12] 3288 	clr	c
      00099D 95*0F            [12] 3289 	subb	a,_error
      00099F FE               [12] 3290 	mov	r6,a
      0009A0 E4               [12] 3291 	clr	a
      0009A1 95*10            [12] 3292 	subb	a,(_error + 1)
      0009A3 FF               [12] 3293 	mov	r7,a
      0009A4 4E               [12] 3294 	orl	a,r6
      0009A5 60 0E            [24] 3295 	jz	00117$
                           0009A7  3296 	C$Lab2.c$579$3$151 ==.
                                   3297 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:579: points = (10 - error);
      0009A7 74 0A            [12] 3298 	mov	a,#0x0a
      0009A9 C3               [12] 3299 	clr	c
      0009AA 95*0F            [12] 3300 	subb	a,_error
      0009AC F5*06            [12] 3301 	mov	_points,a
      0009AE E4               [12] 3302 	clr	a
      0009AF 95*10            [12] 3303 	subb	a,(_error + 1)
      0009B1 F5*07            [12] 3304 	mov	(_points + 1),a
      0009B3 80 05            [24] 3305 	sjmp	00118$
      0009B5                       3306 00117$:
                           0009B5  3307 	C$Lab2.c$582$3$152 ==.
                                   3308 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:582: points = 0;
      0009B5 E4               [12] 3309 	clr	a
      0009B6 F5*06            [12] 3310 	mov	_points,a
      0009B8 F5*07            [12] 3311 	mov	(_points + 1),a
      0009BA                       3312 00118$:
                           0009BA  3313 	C$Lab2.c$585$2$146 ==.
                                   3314 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:585: totalPoints = totalPoints + points;		// calculates total score
      0009BA E5*06            [12] 3315 	mov	a,_points
      0009BC 25*08            [12] 3316 	add	a,_totalPoints
      0009BE F5*08            [12] 3317 	mov	_totalPoints,a
      0009C0 E5*07            [12] 3318 	mov	a,(_points + 1)
      0009C2 35*09            [12] 3319 	addc	a,(_totalPoints + 1)
      0009C4 F5*09            [12] 3320 	mov	(_totalPoints + 1),a
                           0009C6  3321 	C$Lab2.c$587$2$146 ==.
                                   3322 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:587: printf("\n\n\rScore for this round: %d\n\rTotal score: %d", points, totalPoints);	// display score for round and cumulative score
      0009C6 C0*08            [24] 3323 	push	_totalPoints
      0009C8 C0*09            [24] 3324 	push	(_totalPoints + 1)
      0009CA C0*06            [24] 3325 	push	_points
      0009CC C0*07            [24] 3326 	push	(_points + 1)
      0009CE 74rDD            [12] 3327 	mov	a,#___str_17
      0009D0 C0 E0            [24] 3328 	push	acc
      0009D2 74s07            [12] 3329 	mov	a,#(___str_17 >> 8)
      0009D4 C0 E0            [24] 3330 	push	acc
      0009D6 74 80            [12] 3331 	mov	a,#0x80
      0009D8 C0 E0            [24] 3332 	push	acc
      0009DA 12r00r00         [24] 3333 	lcall	_printf
      0009DD E5 81            [12] 3334 	mov	a,sp
      0009DF 24 F9            [12] 3335 	add	a,#0xf9
      0009E1 F5 81            [12] 3336 	mov	sp,a
                           0009E3  3337 	C$Lab2.c$589$2$146 ==.
                                   3338 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:589: counts = 0;		// resets counts
      0009E3 E4               [12] 3339 	clr	a
      0009E4 F5*00            [12] 3340 	mov	_counts,a
      0009E6 F5*01            [12] 3341 	mov	(_counts + 1),a
                           0009E8  3342 	C$Lab2.c$591$2$146 ==.
                                   3343 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:591: while (counts<169) {		// delay for .5s
      0009E8                       3344 00120$:
      0009E8 C3               [12] 3345 	clr	c
      0009E9 E5*00            [12] 3346 	mov	a,_counts
      0009EB 94 A9            [12] 3347 	subb	a,#0xa9
      0009ED E5*01            [12] 3348 	mov	a,(_counts + 1)
      0009EF 94 00            [12] 3349 	subb	a,#0x00
      0009F1 50 1C            [24] 3350 	jnc	00128$
                           0009F3  3351 	C$Lab2.c$592$3$153 ==.
                                   3352 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:592: for(var=0; var<100; var++);
      0009F3 75*02 64         [24] 3353 	mov	_var,#0x64
      0009F6 75*03 00         [24] 3354 	mov	(_var + 1),#0x00
      0009F9                       3355 00126$:
      0009F9 15*02            [12] 3356 	dec	_var
      0009FB 74 FF            [12] 3357 	mov	a,#0xff
      0009FD B5*02 02         [24] 3358 	cjne	a,_var,00189$
      000A00 15*03            [12] 3359 	dec	(_var + 1)
      000A02                       3360 00189$:
      000A02 E5*02            [12] 3361 	mov	a,_var
      000A04 45*03            [12] 3362 	orl	a,(_var + 1)
      000A06 70 F1            [24] 3363 	jnz	00126$
      000A08 75*02 64         [24] 3364 	mov	_var,#0x64
      000A0B F5*03            [12] 3365 	mov	(_var + 1),a
      000A0D 80 D9            [24] 3366 	sjmp	00120$
      000A0F                       3367 00128$:
                           000A0F  3368 	C$Lab2.c$538$1$145 ==.
                                   3369 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:538: for (round = 0; round<=5; round++) {
      000A0F 05*04            [12] 3370 	inc	_round
      000A11 E4               [12] 3371 	clr	a
      000A12 B5*04 02         [24] 3372 	cjne	a,_round,00191$
      000A15 05*05            [12] 3373 	inc	(_round + 1)
      000A17                       3374 00191$:
      000A17 C3               [12] 3375 	clr	c
      000A18 74 05            [12] 3376 	mov	a,#0x05
      000A1A 95*04            [12] 3377 	subb	a,_round
      000A1C 74 80            [12] 3378 	mov	a,#(0x00 ^ 0x80)
      000A1E 85*05 F0         [24] 3379 	mov	b,(_round + 1)
      000A21 63 F0 80         [24] 3380 	xrl	b,#0x80
      000A24 95 F0            [12] 3381 	subb	a,b
      000A26 40 03            [24] 3382 	jc	00192$
      000A28 02r08rC9         [24] 3383 	ljmp	00127$
      000A2B                       3384 00192$:
                           000A2B  3385 	C$Lab2.c$596$1$145 ==.
                                   3386 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:596: printf("\n\n\rFinal score: %d", totalPoints);	// print final score
      000A2B C0*08            [24] 3387 	push	_totalPoints
      000A2D C0*09            [24] 3388 	push	(_totalPoints + 1)
      000A2F 74r0A            [12] 3389 	mov	a,#___str_18
      000A31 C0 E0            [24] 3390 	push	acc
      000A33 74s08            [12] 3391 	mov	a,#(___str_18 >> 8)
      000A35 C0 E0            [24] 3392 	push	acc
      000A37 74 80            [12] 3393 	mov	a,#0x80
      000A39 C0 E0            [24] 3394 	push	acc
      000A3B 12r00r00         [24] 3395 	lcall	_printf
      000A3E E5 81            [12] 3396 	mov	a,sp
      000A40 24 FB            [12] 3397 	add	a,#0xfb
      000A42 F5 81            [12] 3398 	mov	sp,a
                           000A44  3399 	C$Lab2.c$598$1$145 ==.
                                   3400 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:598: Flash_Biled();		// flash BILED red and green for 1s
      000A44 12r02r1E         [24] 3401 	lcall	_Flash_Biled
                           000A47  3402 	C$Lab2.c$599$1$145 ==.
                           000A47  3403 	XG$Mode_Three$0$0 ==.
      000A47 22               [24] 3404 	ret
                                   3405 ;------------------------------------------------------------
                                   3406 ;Allocation info for local variables in function 'Draw_Bar'
                                   3407 ;------------------------------------------------------------
                                   3408 ;length                    Allocated to registers r7 
                                   3409 ;i                         Allocated to registers r6 
                                   3410 ;------------------------------------------------------------
                           000A48  3411 	G$Draw_Bar$0$0 ==.
                           000A48  3412 	C$Lab2.c$606$1$145 ==.
                                   3413 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:606: void Draw_Bar(unsigned char length)		
                                   3414 ;	-----------------------------------------
                                   3415 ;	 function Draw_Bar
                                   3416 ;	-----------------------------------------
      000A48                       3417 _Draw_Bar:
                           000A48  3418 	C$Lab2.c$610$1$155 ==.
                                   3419 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:610: length = length/4;
      000A48 E5 82            [12] 3420 	mov	a,dpl
      000A4A 03               [12] 3421 	rr	a
      000A4B 03               [12] 3422 	rr	a
      000A4C 54 3F            [12] 3423 	anl	a,#0x3f
      000A4E FF               [12] 3424 	mov	r7,a
                           000A4F  3425 	C$Lab2.c$612$1$155 ==.
                                   3426 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:612: for (i=0; i<length; i++) {
      000A4F 7E 00            [12] 3427 	mov	r6,#0x00
      000A51                       3428 00104$:
      000A51 C3               [12] 3429 	clr	c
      000A52 EE               [12] 3430 	mov	a,r6
      000A53 9F               [12] 3431 	subb	a,r7
      000A54 50 11            [24] 3432 	jnc	00101$
                           000A56  3433 	C$Lab2.c$613$2$156 ==.
                                   3434 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:613: putchar('#');				// prints '#'
      000A56 75 82 23         [24] 3435 	mov	dpl,#0x23
      000A59 C0 07            [24] 3436 	push	ar7
      000A5B C0 06            [24] 3437 	push	ar6
      000A5D 12r00r4A         [24] 3438 	lcall	_putchar
      000A60 D0 06            [24] 3439 	pop	ar6
      000A62 D0 07            [24] 3440 	pop	ar7
                           000A64  3441 	C$Lab2.c$612$1$155 ==.
                                   3442 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:612: for (i=0; i<length; i++) {
      000A64 0E               [12] 3443 	inc	r6
      000A65 80 EA            [24] 3444 	sjmp	00104$
      000A67                       3445 00101$:
                           000A67  3446 	C$Lab2.c$615$1$155 ==.
                                   3447 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:615: length = 63 - length;			// clears the rest of the line
      000A67 74 3F            [12] 3448 	mov	a,#0x3f
      000A69 C3               [12] 3449 	clr	c
      000A6A 9F               [12] 3450 	subb	a,r7
      000A6B FF               [12] 3451 	mov	r7,a
                           000A6C  3452 	C$Lab2.c$616$1$155 ==.
                                   3453 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:616: for (i=0; i<length; i++) {
      000A6C 7E 00            [12] 3454 	mov	r6,#0x00
      000A6E                       3455 00107$:
      000A6E C3               [12] 3456 	clr	c
      000A6F EE               [12] 3457 	mov	a,r6
      000A70 9F               [12] 3458 	subb	a,r7
      000A71 50 11            [24] 3459 	jnc	00102$
                           000A73  3460 	C$Lab2.c$617$2$157 ==.
                                   3461 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:617: putchar(' ');				// prints (63-length) spaces
      000A73 75 82 20         [24] 3462 	mov	dpl,#0x20
      000A76 C0 07            [24] 3463 	push	ar7
      000A78 C0 06            [24] 3464 	push	ar6
      000A7A 12r00r4A         [24] 3465 	lcall	_putchar
      000A7D D0 06            [24] 3466 	pop	ar6
      000A7F D0 07            [24] 3467 	pop	ar7
                           000A81  3468 	C$Lab2.c$616$1$155 ==.
                                   3469 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:616: for (i=0; i<length; i++) {
      000A81 0E               [12] 3470 	inc	r6
      000A82 80 EA            [24] 3471 	sjmp	00107$
      000A84                       3472 00102$:
                           000A84  3473 	C$Lab2.c$619$1$155 ==.
                                   3474 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:619: putchar('|');					// prints end of bar '|'
      000A84 75 82 7C         [24] 3475 	mov	dpl,#0x7c
      000A87 12r00r4A         [24] 3476 	lcall	_putchar
                           000A8A  3477 	C$Lab2.c$621$1$155 ==.
                                   3478 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:621: putchar('\r');					// return to beginning of line
      000A8A 75 82 0D         [24] 3479 	mov	dpl,#0x0d
      000A8D 12r00r4A         [24] 3480 	lcall	_putchar
                           000A90  3481 	C$Lab2.c$622$1$155 ==.
                           000A90  3482 	XG$Draw_Bar$0$0 ==.
      000A90 22               [24] 3483 	ret
                                   3484 ;------------------------------------------------------------
                                   3485 ;Allocation info for local variables in function 'Timer0_ISR'
                                   3486 ;------------------------------------------------------------
                           000A91  3487 	G$Timer0_ISR$0$0 ==.
                           000A91  3488 	C$Lab2.c$625$1$155 ==.
                                   3489 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:625: void Timer0_ISR(void) __interrupt 1
                                   3490 ;	-----------------------------------------
                                   3491 ;	 function Timer0_ISR
                                   3492 ;	-----------------------------------------
      000A91                       3493 _Timer0_ISR:
      000A91 C0 E0            [24] 3494 	push	acc
      000A93 C0 D0            [24] 3495 	push	psw
                           000A95  3496 	C$Lab2.c$627$1$159 ==.
                                   3497 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:627: TF0 = 0;
      000A95 C2 8D            [12] 3498 	clr	_TF0
                           000A97  3499 	C$Lab2.c$628$1$159 ==.
                                   3500 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:628: counts++;	// increments the global variable 'counts'
      000A97 05*00            [12] 3501 	inc	_counts
      000A99 E4               [12] 3502 	clr	a
      000A9A B5*00 02         [24] 3503 	cjne	a,_counts,00103$
      000A9D 05*01            [12] 3504 	inc	(_counts + 1)
      000A9F                       3505 00103$:
      000A9F D0 D0            [24] 3506 	pop	psw
      000AA1 D0 E0            [24] 3507 	pop	acc
                           000AA3  3508 	C$Lab2.c$629$1$159 ==.
                           000AA3  3509 	XG$Timer0_ISR$0$0 ==.
      000AA3 32               [24] 3510 	reti
                                   3511 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   3512 ;	eliminated unneeded push/pop dpl
                                   3513 ;	eliminated unneeded push/pop dph
                                   3514 ;	eliminated unneeded push/pop b
                                   3515 ;------------------------------------------------------------
                                   3516 ;Allocation info for local variables in function 'random'
                                   3517 ;------------------------------------------------------------
                           000AA4  3518 	G$random$0$0 ==.
                           000AA4  3519 	C$Lab2.c$633$1$159 ==.
                                   3520 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:633: unsigned char random(void)
                                   3521 ;	-----------------------------------------
                                   3522 ;	 function random
                                   3523 ;	-----------------------------------------
      000AA4                       3524 _random:
                           000AA4  3525 	C$Lab2.c$635$1$161 ==.
                                   3526 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:635: return (rand()%5);  // rand returns a random number between 0 and 32767.
      000AA4 12r00r00         [24] 3527 	lcall	_rand
      000AA7 75*00 05         [24] 3528 	mov	__modsint_PARM_2,#0x05
      000AAA 75*01 00         [24] 3529 	mov	(__modsint_PARM_2 + 1),#0x00
      000AAD 12r00r00         [24] 3530 	lcall	__modsint
                           000AB0  3531 	C$Lab2.c$639$1$161 ==.
                           000AB0  3532 	XG$random$0$0 ==.
      000AB0 22               [24] 3533 	ret
                                   3534 ;------------------------------------------------------------
                                   3535 ;Allocation info for local variables in function 'SetAllLEDs'
                                   3536 ;------------------------------------------------------------
                                   3537 ;sloc0                     Allocated with name '_SetAllLEDs_sloc0_1_0'
                                   3538 ;num                       Allocated to registers r7 
                                   3539 ;------------------------------------------------------------
                           000AB1  3540 	G$SetAllLEDs$0$0 ==.
                           000AB1  3541 	C$Lab2.c$642$1$161 ==.
                                   3542 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:642: void SetAllLEDs(char num) // Sets the output of all LEDs
                                   3543 ;	-----------------------------------------
                                   3544 ;	 function SetAllLEDs
                                   3545 ;	-----------------------------------------
      000AB1                       3546 _SetAllLEDs:
                           000AB1  3547 	C$Lab2.c$644$1$163 ==.
                                   3548 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:644: LED0 = num;
      000AB1 E5 82            [12] 3549 	mov	a,dpl
      000AB3 24 FF            [12] 3550 	add	a,#0xff
      000AB5 E4               [12] 3551 	clr	a
      000AB6 33               [12] 3552 	rlc	a
      000AB7 F5*2D            [12] 3553 	mov	_SetAllLEDs_sloc0_1_0,a
      000AB9 24 FF            [12] 3554 	add	a,#0xff
      000ABB 92 B6            [24] 3555 	mov	_LED0,c
                           000ABD  3556 	C$Lab2.c$645$1$163 ==.
                                   3557 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:645: LED1 = num;
      000ABD E5*2D            [12] 3558 	mov	a,_SetAllLEDs_sloc0_1_0
      000ABF 24 FF            [12] 3559 	add	a,#0xff
      000AC1 92 B5            [24] 3560 	mov	_LED1,c
                           000AC3  3561 	C$Lab2.c$646$1$163 ==.
                                   3562 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:646: LED2 = num;
      000AC3 E5*2D            [12] 3563 	mov	a,_SetAllLEDs_sloc0_1_0
      000AC5 24 FF            [12] 3564 	add	a,#0xff
      000AC7 92 B7            [24] 3565 	mov	_LED2,c
                           000AC9  3566 	C$Lab2.c$647$1$163 ==.
                                   3567 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:647: LED3 = num;	
      000AC9 E5*2D            [12] 3568 	mov	a,_SetAllLEDs_sloc0_1_0
      000ACB 24 FF            [12] 3569 	add	a,#0xff
      000ACD 92 B2            [24] 3570 	mov	_LED3,c
                           000ACF  3571 	C$Lab2.c$648$1$163 ==.
                           000ACF  3572 	XG$SetAllLEDs$0$0 ==.
      000ACF 22               [24] 3573 	ret
                                   3574 ;------------------------------------------------------------
                                   3575 ;Allocation info for local variables in function 'MapADC'
                                   3576 ;------------------------------------------------------------
                                   3577 ;low                       Allocated with name '_MapADC_PARM_2'
                                   3578 ;high                      Allocated with name '_MapADC_PARM_3'
                                   3579 ;val                       Allocated to registers r7 
                                   3580 ;------------------------------------------------------------
                           000AD0  3581 	G$MapADC$0$0 ==.
                           000AD0  3582 	C$Lab2.c$651$1$163 ==.
                                   3583 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:651: unsigned char MapADC(unsigned char val,unsigned char low, unsigned char high)
                                   3584 ;	-----------------------------------------
                                   3585 ;	 function MapADC
                                   3586 ;	-----------------------------------------
      000AD0                       3587 _MapADC:
      000AD0 AF 82            [24] 3588 	mov	r7,dpl
                           000AD2  3589 	C$Lab2.c$665$1$165 ==.
                                   3590 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:665: return ((high - low)*((val/255)) + low); // return mapped value
      000AD2 E5*01            [12] 3591 	mov	a,_MapADC_PARM_3
      000AD4 C3               [12] 3592 	clr	c
      000AD5 95*00            [12] 3593 	subb	a,_MapADC_PARM_2
      000AD7 FE               [12] 3594 	mov	r6,a
      000AD8 75 F0 FF         [24] 3595 	mov	b,#0xff
      000ADB EF               [12] 3596 	mov	a,r7
      000ADC 84               [48] 3597 	div	ab
      000ADD 8E F0            [24] 3598 	mov	b,r6
      000ADF A4               [48] 3599 	mul	ab
      000AE0 25*00            [12] 3600 	add	a,_MapADC_PARM_2
      000AE2 F5 82            [12] 3601 	mov	dpl,a
                           000AE4  3602 	C$Lab2.c$666$1$165 ==.
                           000AE4  3603 	XG$MapADC$0$0 ==.
      000AE4 22               [24] 3604 	ret
                                   3605 ;------------------------------------------------------------
                                   3606 ;Allocation info for local variables in function 'LightNumLEDs'
                                   3607 ;------------------------------------------------------------
                                   3608 ;num                       Allocated to registers r7 
                                   3609 ;------------------------------------------------------------
                           000AE5  3610 	G$LightNumLEDs$0$0 ==.
                           000AE5  3611 	C$Lab2.c$669$1$165 ==.
                                   3612 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:669: void LightNumLEDs(unsigned char num) // Lights LEDs in order from 0 to 4
                                   3613 ;	-----------------------------------------
                                   3614 ;	 function LightNumLEDs
                                   3615 ;	-----------------------------------------
      000AE5                       3616 _LightNumLEDs:
      000AE5 AF 82            [24] 3617 	mov	r7,dpl
                           000AE7  3618 	C$Lab2.c$671$1$167 ==.
                                   3619 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:671: SetAllLEDs(1); // turn off all LEDs
      000AE7 75 82 01         [24] 3620 	mov	dpl,#0x01
      000AEA C0 07            [24] 3621 	push	ar7
      000AEC 12r0ArB1         [24] 3622 	lcall	_SetAllLEDs
      000AEF D0 07            [24] 3623 	pop	ar7
                           000AF1  3624 	C$Lab2.c$673$1$167 ==.
                                   3625 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:673: if (num >= 1) // Turn on LED0 if the number is >= 1
      000AF1 BF 01 00         [24] 3626 	cjne	r7,#0x01,00123$
      000AF4                       3627 00123$:
      000AF4 40 02            [24] 3628 	jc	00102$
                           000AF6  3629 	C$Lab2.c$675$2$168 ==.
                                   3630 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:675: LED0 = 0;
      000AF6 C2 B6            [12] 3631 	clr	_LED0
      000AF8                       3632 00102$:
                           000AF8  3633 	C$Lab2.c$677$1$167 ==.
                                   3634 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:677: if (num >= 2) // Turn on LED1 if the number is >= 2
      000AF8 BF 02 00         [24] 3635 	cjne	r7,#0x02,00125$
      000AFB                       3636 00125$:
      000AFB 40 02            [24] 3637 	jc	00104$
                           000AFD  3638 	C$Lab2.c$679$2$169 ==.
                                   3639 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:679: LED1 = 0;
      000AFD C2 B5            [12] 3640 	clr	_LED1
      000AFF                       3641 00104$:
                           000AFF  3642 	C$Lab2.c$681$1$167 ==.
                                   3643 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:681: if (num >= 3) // Turn on LED2 if the number is >= 3
      000AFF BF 03 00         [24] 3644 	cjne	r7,#0x03,00127$
      000B02                       3645 00127$:
      000B02 40 02            [24] 3646 	jc	00106$
                           000B04  3647 	C$Lab2.c$683$2$170 ==.
                                   3648 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:683: LED2 = 0;
      000B04 C2 B7            [12] 3649 	clr	_LED2
      000B06                       3650 00106$:
                           000B06  3651 	C$Lab2.c$685$1$167 ==.
                                   3652 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:685: if (num >= 4) // Turn on LED03 if the number is >= 4
      000B06 BF 04 00         [24] 3653 	cjne	r7,#0x04,00129$
      000B09                       3654 00129$:
      000B09 40 02            [24] 3655 	jc	00109$
                           000B0B  3656 	C$Lab2.c$687$2$171 ==.
                                   3657 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:687: LED3 = 0;
      000B0B C2 B2            [12] 3658 	clr	_LED3
      000B0D                       3659 00109$:
                           000B0D  3660 	C$Lab2.c$689$1$167 ==.
                           000B0D  3661 	XG$LightNumLEDs$0$0 ==.
      000B0D 22               [24] 3662 	ret
                                   3663 ;------------------------------------------------------------
                                   3664 ;Allocation info for local variables in function 'ClearTimer0'
                                   3665 ;------------------------------------------------------------
                           000B0E  3666 	G$ClearTimer0$0$0 ==.
                           000B0E  3667 	C$Lab2.c$692$1$167 ==.
                                   3668 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:692: void ClearTimer0(void) // Pauses and clears Timer0
                                   3669 ;	-----------------------------------------
                                   3670 ;	 function ClearTimer0
                                   3671 ;	-----------------------------------------
      000B0E                       3672 _ClearTimer0:
                           000B0E  3673 	C$Lab2.c$694$1$173 ==.
                                   3674 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:694: TR0 = 0; // Stop Timer0
      000B0E C2 8C            [12] 3675 	clr	_TR0
                           000B10  3676 	C$Lab2.c$695$1$173 ==.
                                   3677 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:695: TMR0 = 0; // Clear Timer0
      000B10 E4               [12] 3678 	clr	a
      000B11 F5 8A            [12] 3679 	mov	((_TMR0 >> 0) & 0xFF),a
      000B13 F5 8C            [12] 3680 	mov	((_TMR0 >> 8) & 0xFF),a
                           000B15  3681 	C$Lab2.c$696$1$173 ==.
                                   3682 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:696: counts = 0; // Clear overflows
      000B15 F5*00            [12] 3683 	mov	_counts,a
      000B17 F5*01            [12] 3684 	mov	(_counts + 1),a
                           000B19  3685 	C$Lab2.c$697$1$173 ==.
                           000B19  3686 	XG$ClearTimer0$0$0 ==.
      000B19 22               [24] 3687 	ret
                                   3688 ;------------------------------------------------------------
                                   3689 ;Allocation info for local variables in function 'SetBILED'
                                   3690 ;------------------------------------------------------------
                                   3691 ;state                     Allocated to registers r7 
                                   3692 ;------------------------------------------------------------
                           000B1A  3693 	G$SetBILED$0$0 ==.
                           000B1A  3694 	C$Lab2.c$700$1$173 ==.
                                   3695 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:700: void SetBILED(unsigned char state) // Sets the BILED color
                                   3696 ;	-----------------------------------------
                                   3697 ;	 function SetBILED
                                   3698 ;	-----------------------------------------
      000B1A                       3699 _SetBILED:
      000B1A AF 82            [24] 3700 	mov	r7,dpl
                           000B1C  3701 	C$Lab2.c$702$1$175 ==.
                                   3702 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:702: switch (state)
      000B1C BF 47 02         [24] 3703 	cjne	r7,#0x47,00118$
      000B1F 80 13            [24] 3704 	sjmp	00104$
      000B21                       3705 00118$:
      000B21 BF 52 02         [24] 3706 	cjne	r7,#0x52,00119$
      000B24 80 08            [24] 3707 	sjmp	00102$
      000B26                       3708 00119$:
      000B26 BF 67 02         [24] 3709 	cjne	r7,#0x67,00120$
      000B29 80 09            [24] 3710 	sjmp	00104$
      000B2B                       3711 00120$:
      000B2B BF 72 0C         [24] 3712 	cjne	r7,#0x72,00105$
                           000B2E  3713 	C$Lab2.c$705$2$176 ==.
                                   3714 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:705: case 'R':
      000B2E                       3715 00102$:
                           000B2E  3716 	C$Lab2.c$706$2$176 ==.
                                   3717 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:706: BILED0 = 0;
      000B2E C2 B3            [12] 3718 	clr	_BILED0
                           000B30  3719 	C$Lab2.c$707$2$176 ==.
                                   3720 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:707: BILED1 = 1;
      000B30 D2 B4            [12] 3721 	setb	_BILED1
                           000B32  3722 	C$Lab2.c$708$2$176 ==.
                                   3723 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:708: break;
                           000B32  3724 	C$Lab2.c$710$2$176 ==.
                                   3725 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:710: case 'G':
      000B32 80 0A            [24] 3726 	sjmp	00107$
      000B34                       3727 00104$:
                           000B34  3728 	C$Lab2.c$711$2$176 ==.
                                   3729 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:711: BILED0 = 1;
      000B34 D2 B3            [12] 3730 	setb	_BILED0
                           000B36  3731 	C$Lab2.c$712$2$176 ==.
                                   3732 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:712: BILED1 = 0;
      000B36 C2 B4            [12] 3733 	clr	_BILED1
                           000B38  3734 	C$Lab2.c$713$2$176 ==.
                                   3735 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:713: break;
                           000B38  3736 	C$Lab2.c$714$2$176 ==.
                                   3737 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:714: default:  // Turn BILED OFF
      000B38 80 04            [24] 3738 	sjmp	00107$
      000B3A                       3739 00105$:
                           000B3A  3740 	C$Lab2.c$715$2$176 ==.
                                   3741 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:715: BILED0 = 0;
      000B3A C2 B3            [12] 3742 	clr	_BILED0
                           000B3C  3743 	C$Lab2.c$716$2$176 ==.
                                   3744 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:716: BILED1 = 0;
      000B3C C2 B4            [12] 3745 	clr	_BILED1
                           000B3E  3746 	C$Lab2.c$718$1$175 ==.
                                   3747 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:718: }
      000B3E                       3748 00107$:
                           000B3E  3749 	C$Lab2.c$719$1$175 ==.
                           000B3E  3750 	XG$SetBILED$0$0 ==.
      000B3E 22               [24] 3751 	ret
                                   3752 ;------------------------------------------------------------
                                   3753 ;Allocation info for local variables in function 'DebounceButton'
                                   3754 ;------------------------------------------------------------
                                   3755 ;pressed                   Allocated to registers r7 
                                   3756 ;------------------------------------------------------------
                           000B3F  3757 	G$DebounceButton$0$0 ==.
                           000B3F  3758 	C$Lab2.c$722$1$175 ==.
                                   3759 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:722: char DebounceButton(void) // Debounces a button by waiting 20ms after a press
                                   3760 ;	-----------------------------------------
                                   3761 ;	 function DebounceButton
                                   3762 ;	-----------------------------------------
      000B3F                       3763 _DebounceButton:
                           000B3F  3764 	C$Lab2.c$724$1$175 ==.
                                   3765 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:724: char pressed = 0;
      000B3F 7F 00            [12] 3766 	mov	r7,#0x00
                           000B41  3767 	C$Lab2.c$726$1$178 ==.
                                   3768 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:726: TR0 = 1;
      000B41 D2 8C            [12] 3769 	setb	_TR0
                           000B43  3770 	C$Lab2.c$728$1$178 ==.
                                   3771 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:728: tmpCount = 0; // Create temp value
      000B43 E4               [12] 3772 	clr	a
      000B44 F5*17            [12] 3773 	mov	_tmpCount,a
      000B46 F5*18            [12] 3774 	mov	(_tmpCount + 1),a
                           000B48  3775 	C$Lab2.c$729$1$178 ==.
                                   3776 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:729: if (!PB0) // If the button was pressed
      000B48 20 B0 1D         [24] 3777 	jb	_PB0,00108$
                           000B4B  3778 	C$Lab2.c$731$2$179 ==.
                                   3779 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:731: tmpCount = counts; // record current count
      000B4B 85*00*17         [24] 3780 	mov	_tmpCount,_counts
      000B4E 85*01*18         [24] 3781 	mov	(_tmpCount + 1),(_counts + 1)
                           000B51  3782 	C$Lab2.c$732$2$179 ==.
                                   3783 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:732: while (counts < (tmpCount + 7)); // Wait ~20ms
      000B51                       3784 00101$:
      000B51 74 07            [12] 3785 	mov	a,#0x07
      000B53 25*17            [12] 3786 	add	a,_tmpCount
      000B55 FD               [12] 3787 	mov	r5,a
      000B56 E4               [12] 3788 	clr	a
      000B57 35*18            [12] 3789 	addc	a,(_tmpCount + 1)
      000B59 FE               [12] 3790 	mov	r6,a
      000B5A C3               [12] 3791 	clr	c
      000B5B E5*00            [12] 3792 	mov	a,_counts
      000B5D 9D               [12] 3793 	subb	a,r5
      000B5E E5*01            [12] 3794 	mov	a,(_counts + 1)
      000B60 9E               [12] 3795 	subb	a,r6
      000B61 40 EE            [24] 3796 	jc	00101$
                           000B63  3797 	C$Lab2.c$733$2$179 ==.
                                   3798 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:733: while (!PB0); // wait for button release
      000B63                       3799 00104$:
      000B63 30 B0 FD         [24] 3800 	jnb	_PB0,00104$
                           000B66  3801 	C$Lab2.c$734$2$179 ==.
                                   3802 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:734: pressed = 1;
      000B66 7F 01            [12] 3803 	mov	r7,#0x01
      000B68                       3804 00108$:
                           000B68  3805 	C$Lab2.c$737$1$178 ==.
                                   3806 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:737: return pressed;
      000B68 8F 82            [24] 3807 	mov	dpl,r7
                           000B6A  3808 	C$Lab2.c$738$1$178 ==.
                           000B6A  3809 	XG$DebounceButton$0$0 ==.
      000B6A 22               [24] 3810 	ret
                                   3811 ;------------------------------------------------------------
                                   3812 ;Allocation info for local variables in function 'CompareVals'
                                   3813 ;------------------------------------------------------------
                                   3814 ;expected                  Allocated with name '_CompareVals_PARM_2'
                                   3815 ;input                     Allocated to registers r7 
                                   3816 ;------------------------------------------------------------
                           000B6B  3817 	G$CompareVals$0$0 ==.
                           000B6B  3818 	C$Lab2.c$741$1$178 ==.
                                   3819 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:741: void CompareVals(char input, char expected) // Sets the BILED depending on if the value was lower or higher
                                   3820 ;	-----------------------------------------
                                   3821 ;	 function CompareVals
                                   3822 ;	-----------------------------------------
      000B6B                       3823 _CompareVals:
      000B6B AF 82            [24] 3824 	mov	r7,dpl
                           000B6D  3825 	C$Lab2.c$743$1$181 ==.
                                   3826 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:743: if(input < expected) // If the value was lower
      000B6D C3               [12] 3827 	clr	c
      000B6E EF               [12] 3828 	mov	a,r7
      000B6F 95*2E            [12] 3829 	subb	a,_CompareVals_PARM_2
      000B71 50 08            [24] 3830 	jnc	00105$
                           000B73  3831 	C$Lab2.c$745$2$182 ==.
                                   3832 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:745: SetBILED('r'); // Turn the BILED red
      000B73 75 82 72         [24] 3833 	mov	dpl,#0x72
      000B76 12r0Br1A         [24] 3834 	lcall	_SetBILED
      000B79 80 14            [24] 3835 	sjmp	00107$
      000B7B                       3836 00105$:
                           000B7B  3837 	C$Lab2.c$747$1$181 ==.
                                   3838 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:747: else if(input > expected) // If the value was higher
      000B7B C3               [12] 3839 	clr	c
      000B7C E5*2E            [12] 3840 	mov	a,_CompareVals_PARM_2
      000B7E 9F               [12] 3841 	subb	a,r7
      000B7F 50 08            [24] 3842 	jnc	00102$
                           000B81  3843 	C$Lab2.c$749$2$183 ==.
                                   3844 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:749: SetBILED('g'); // Turn the BILED green
      000B81 75 82 67         [24] 3845 	mov	dpl,#0x67
      000B84 12r0Br1A         [24] 3846 	lcall	_SetBILED
      000B87 80 06            [24] 3847 	sjmp	00107$
      000B89                       3848 00102$:
                           000B89  3849 	C$Lab2.c$753$2$184 ==.
                                   3850 ;	C:\Users\Ethan\Documents\RPI Classes\Fall 2018\Embeded Control\Assignments\Lab2_3\Lab2.c:753: SetBILED('o'); // Turn the BILED off
      000B89 75 82 6F         [24] 3851 	mov	dpl,#0x6f
      000B8C 12r0Br1A         [24] 3852 	lcall	_SetBILED
      000B8F                       3853 00107$:
                           000B8F  3854 	C$Lab2.c$755$1$181 ==.
                           000B8F  3855 	XG$CompareVals$0$0 ==.
      000B8F 22               [24] 3856 	ret
                                   3857 	.area CSEG    (CODE)
                                   3858 	.area CONST   (CODE)
                           000000  3859 FLab2$__str_0$0$0 == .
      000000                       3860 ___str_0:
      000000 0D                    3861 	.db 0x0d
      000001 0A                    3862 	.db 0x0a
      000002 0A                    3863 	.db 0x0a
      000003 53 65 6C 65 63 74 20  3864 	.ascii "Select a mode using the slide switches."
             61 20 6D 6F 64 65 20
             75 73 69 6E 67 20 74
             68 65 20 73 6C 69 64
             65 20 73 77 69 74 63
             68 65 73 2E
      00002A 0D                    3865 	.db 0x0d
      00002B 0A                    3866 	.db 0x0a
      00002C 50 72 65 73 73 20 74  3867 	.ascii "Press the pushbu"
             68 65 20 70 75 73 68
             62 75
      00003C 74 74 6F 6E 20 74 6F  3868 	.ascii "tton to select a mode, push it again to confirm."
             20 73 65 6C 65 63 74
             20 61 20 6D 6F 64 65
             2C 20 70 75 73 68 20
             69 74 20 61 67 61 69
             6E 20 74 6F 20 63 6F
             6E 66 69 72 6D 2E
      00006C 00                    3869 	.db 0x00
                           00006D  3870 FLab2$__str_1$0$0 == .
      00006D                       3871 ___str_1:
      00006D 0D                    3872 	.db 0x0d
      00006E 0A                    3873 	.db 0x0a
      00006F 4D 6F 64 65 20 31 3A  3874 	.ascii "Mode 1: Slide switch 1 is ON, slide switch 2 is OFF"
             20 53 6C 69 64 65 20
             73 77 69 74 63 68 20
             31 20 69 73 20 4F 4E
             2C 20 73 6C 69 64 65
             20 73 77 69 74 63 68
             20 32 20 69 73 20 4F
             46 46
      0000A2 00                    3875 	.db 0x00
                           0000A3  3876 FLab2$__str_2$0$0 == .
      0000A3                       3877 ___str_2:
      0000A3 0D                    3878 	.db 0x0d
      0000A4 0A                    3879 	.db 0x0a
      0000A5 4D 6F 64 65 20 32 3A  3880 	.ascii "Mode 2: Slide switch 1 is OFF, slide switch 2 is ON"
             20 53 6C 69 64 65 20
             73 77 69 74 63 68 20
             31 20 69 73 20 4F 46
             46 2C 20 73 6C 69 64
             65 20 73 77 69 74 63
             68 20 32 20 69 73 20
             4F 4E
      0000D8 00                    3881 	.db 0x00
                           0000D9  3882 FLab2$__str_3$0$0 == .
      0000D9                       3883 ___str_3:
      0000D9 0D                    3884 	.db 0x0d
      0000DA 0A                    3885 	.db 0x0a
      0000DB 4D 6F 64 65 20 33 3A  3886 	.ascii "Mode 3: Slide switch 1 is ON, slide switch 2 is ON"
             20 53 6C 69 64 65 20
             73 77 69 74 63 68 20
             31 20 69 73 20 4F 4E
             2C 20 73 6C 69 64 65
             20 73 77 69 74 63 68
             20 32 20 69 73 20 4F
             4E
      00010D 00                    3887 	.db 0x00
                           00010E  3888 FLab2$__str_4$0$0 == .
      00010E                       3889 ___str_4:
      00010E 0D                    3890 	.db 0x0d
      00010F 0A                    3891 	.db 0x0a
      000110 4F 46 46 3A 20 53 6C  3892 	.ascii "OFF: Slide switch 1 is OFF, slide switch 2 is OFF"
             69 64 65 20 73 77 69
             74 63 68 20 31 20 69
             73 20 4F 46 46 2C 20
             73 6C 69 64 65 20 73
             77 69 74 63 68 20 32
             20 69 73 20 4F 46 46
      000141 00                    3893 	.db 0x00
                           000142  3894 FLab2$__str_5$0$0 == .
      000142                       3895 ___str_5:
      000142 0A                    3896 	.db 0x0a
      000143 20 54 68 65 20 66 69  3897 	.ascii " The first mode generates a random number from 0 to 4."
             72 73 74 20 6D 6F 64
             65 20 67 65 6E 65 72
             61 74 65 73 20 61 20
             72 61 6E 64 6F 6D 20
             6E 75 6D 62 65 72 20
             66 72 6F 6D 20 30 20
             74 6F 20 34 2E
      000179 0A                    3898 	.db 0x0a
      00017A 20 20 20              3899 	.ascii "   "
      00017D 0A                    3900 	.db 0x0a
      00017E 0D                    3901 	.db 0x0d
      00017F 54 68 65 20 67 65 6E  3902 	.ascii "The generated number lights up none to all 4 LEDs in a line"
             65 72 61 74 65 64 20
             6E 75 6D 62 65 72 20
             6C 69 67 68 74 73 20
             75 70 20 6E 6F 6E 65
             20 74 6F 20 61 6C 6C
             20 34 20 4C 45 44 73
             20 69 6E 20 61 20 6C
             69 6E 65
      0001BA 2E 20 54 68 65 20 4C  3903 	.ascii ". The LEDs stay on 0.5 s, then turn off"
             45 44 73 20 73 74 61
             79 20 6F 6E 20 30 2E
             35 20 73 2C 20 74 68
             65 6E 20 74 75 72 6E
             20 6F 66 66
      0001E1 0A                    3904 	.db 0x0a
      0001E2 20 20 20              3905 	.ascii "   "
      0001E5 0A                    3906 	.db 0x0a
      0001E6 0D                    3907 	.db 0x0d
      0001E7 61 6E 64 20 61 20 74  3908 	.ascii "and a timer is "
             69 6D 65 72 20 69 73
             20
      0001F6 73 74 61 72 74 65 64  3909 	.ascii "started. The player then turns a potentiometer whose voltage"
             2E 20 54 68 65 20 70
             6C 61 79 65 72 20 74
             68 65 6E 20 74 75 72
             6E 73 20 61 20 70 6F
             74 65 6E 74 69 6F 6D
             65 74 65 72 20 77 68
             6F 73 65 20 76 6F 6C
             74 61 67 65
      000232 20 76 61 6C 75 65 20  3910 	.ascii " value is used to turn on the"
             69 73 20 75 73 65 64
             20 74 6F 20 74 75 72
             6E 20 6F 6E 20 74 68
             65
      00024F 0A                    3911 	.db 0x0a
      000250 20 20 20              3912 	.ascii "   "
      000253 0A                    3913 	.db 0x0a
      000254 0D                    3914 	.db 0x0d
      000255 4C 45 44 73 20 69 6E  3915 	.ascii "LEDs in sequence until th"
             20 73 65 71 75 65 6E
             63 65 20 75 6E 74 69
             6C 20 74 68
      00026E 65 20 73 61 6D 65 20  3916 	.ascii "e same pattern appears. The pushbutton is then pressed to st"
             70 61 74 74 65 72 6E
             20 61 70 70 65 61 72
             73 2E 20 54 68 65 20
             70 75 73 68 62 75 74
             74 6F 6E 20 69 73 20
             74 68 65 6E 20 70 72
             65 73 73 65 64 20 74
             6F 20 73 74
      0002AA 6F 70 20 74 68 65 20  3917 	.ascii "op the timer and"
             74 69 6D 65 72 20 61
             6E 64
      0002BA 0A                    3918 	.db 0x0a
      0002BB 20 20 20              3919 	.ascii "   "
      0002BE 0A                    3920 	.db 0x0a
      0002BF 0D                    3921 	.db 0x0d
      0002C0 72 65 63 6F 72 64 20  3922 	.ascii "record the LED pattern, which is then "
             74 68 65 20 4C 45 44
             20 70 61 74 74 65 72
             6E 2C 20 77 68 69 63
             68 20 69 73 20 74 68
             65 6E 20
      0002E6 63 6F 6D 70 61 72 65  3923 	.ascii "compared to that generated by the random number. Scoring is"
             64 20 74 6F 20 74 68
             61 74 20 67 65 6E 65
             72 61 74 65 64 20 62
             79 20 74 68 65 20 72
             61 6E 64 6F 6D 20 6E
             75 6D 62 65 72 2E 20
             53 63 6F 72 69 6E 67
             20 69 73
      000321 0A                    3924 	.db 0x0a
      000322 20 20 20              3925 	.ascii "   "
      000325 0A                    3926 	.db 0x0a
      000326 0D                    3927 	.db 0x0d
      000327 62 61 73 65 64 20 6F  3928 	.ascii "based on correctness and speed of entry. The whole proc"
             6E 20 63 6F 72 72 65
             63 74 6E 65 73 73 20
             61 6E 64 20 73 70 65
             65 64 20 6F 66 20 65
             6E 74 72 79 2E 20 54
             68 65 20 77 68 6F 6C
             65 20 70 72 6F 63
      00035E 65 73 73 20 69 73 20  3929 	.ascii "ess is repeated 5 times and the final score is"
             72 65 70 65 61 74 65
             64 20 35 20 74 69 6D
             65 73 20 61 6E 64 20
             74 68 65 20 66 69 6E
             61 6C 20 73 63 6F 72
             65 20 69 73
      00038C 0A                    3930 	.db 0x0a
      00038D 20 20 20              3931 	.ascii "   "
      000390 0A                    3932 	.db 0x0a
      000391 0D                    3933 	.db 0x0d
      000392 64 69 73 70 6C 61 79  3934 	.ascii "displaye"
             65
      00039A 64 20 6F 6E 20 74 68  3935 	.ascii "d on the terminal. The lower the score the better you did."
             65 20 74 65 72 6D 69
             6E 61 6C 2E 20 54 68
             65 20 6C 6F 77 65 72
             20 74 68 65 20 73 63
             6F 72 65 20 74 68 65
             20 62 65 74 74 65 72
             20 79 6F 75 20 64 69
             64 2E
      0003D4 00                    3936 	.db 0x00
                           0003D5  3937 FLab2$__str_6$0$0 == .
      0003D5                       3938 ___str_6:
      0003D5 53 74 61 72 74        3939 	.ascii "Start"
      0003DA 00                    3940 	.db 0x00
                           0003DB  3941 FLab2$__str_7$0$0 == .
      0003DB                       3942 ___str_7:
      0003DB 52 6F 75 6E 64 20 53  3943 	.ascii "Round Score: %d"
             63 6F 72 65 3A 20 25
             64
      0003EA 00                    3944 	.db 0x00
                           0003EB  3945 FLab2$__str_8$0$0 == .
      0003EB                       3946 ___str_8:
      0003EB 54 6F 74 61 6C 20 53  3947 	.ascii "Total Score: %d"
             63 6F 72 65 3A 20 25
             64
      0003FA 00                    3948 	.db 0x00
                           0003FB  3949 FLab2$__str_9$0$0 == .
      0003FB                       3950 ___str_9:
      0003FB 46 69 6E 61 6C 20 53  3951 	.ascii "Final Score: %d"
             63 6F 72 65 3A 20 25
             64
      00040A 00                    3952 	.db 0x00
                           00040B  3953 FLab2$__str_10$0$0 == .
      00040B                       3954 ___str_10:
      00040B 0D                    3955 	.db 0x0d
      00040C 0A                    3956 	.db 0x0a
      00040D 0A                    3957 	.db 0x0a
      00040E 50 6C 61 79 65 72 20  3958 	.ascii "Player 1 will have 1 second to adjust the potentionmeter "
             31 20 77 69 6C 6C 20
             68 61 76 65 20 31 20
             73 65 63 6F 6E 64 20
             74 6F 20 61 64 6A 75
             73 74 20 74 68 65 20
             70 6F 74 65 6E 74 69
             6F 6E 6D 65 74 65 72
             20
      000447 74 6F 20 6C 69 67 68  3959 	.ascii "to light up LEDs."
             74 20 75 70 20 4C 45
             44 73 2E
      000458 0D                    3960 	.db 0x0d
      000459 0A                    3961 	.db 0x0a
      00045A 50 6C 61 79 65 72 20  3962 	.ascii "Player 2 must then push the button for ea"
             32 20 6D 75 73 74 20
             74 68 65 6E 20 70 75
             73 68 20 74 68 65 20
             62 75 74 74 6F 6E 20
             66 6F 72 20 65 61
      000483 63 68 20 4C 45 44 20  3963 	.ascii "ch LED that was lit within 1.5s"
             74 68 61 74 20 77 61
             73 20 6C 69 74 20 77
             69 74 68 69 6E 20 31
             2E 35 73
      0004A2 0D                    3964 	.db 0x0d
      0004A3 0A                    3965 	.db 0x0a
      0004A4 00                    3966 	.db 0x00
                           0004A5  3967 FLab2$__str_11$0$0 == .
      0004A5                       3968 ___str_11:
      0004A5 0D                    3969 	.db 0x0d
      0004A6 0A                    3970 	.db 0x0a
      0004A7 31 30 20 70 6F 69 6E  3971 	.ascii "10 points gained!"
             74 73 20 67 61 69 6E
             65 64 21
      0004B8 00                    3972 	.db 0x00
                           0004B9  3973 FLab2$__str_12$0$0 == .
      0004B9                       3974 ___str_12:
      0004B9 0D                    3975 	.db 0x0d
      0004BA 0A                    3976 	.db 0x0a
      0004BB 30 20 70 6F 69 6E 74  3977 	.ascii "0 points gained!"
             73 20 67 61 69 6E 65
             64 21
      0004CB 00                    3978 	.db 0x00
                           0004CC  3979 FLab2$__str_13$0$0 == .
      0004CC                       3980 ___str_13:
      0004CC 0D                    3981 	.db 0x0d
      0004CD 0A                    3982 	.db 0x0a
      0004CE 54 6F 74 61 6C 20 73  3983 	.ascii "Total score: %d"
             63 6F 72 65 3A 20 25
             64
      0004DD 00                    3984 	.db 0x00
                           0004DE  3985 FLab2$__str_14$0$0 == .
      0004DE                       3986 ___str_14:
      0004DE 0D                    3987 	.db 0x0d
      0004DF 0A                    3988 	.db 0x0a
      0004E0 46 69 6E 61 6C 20 73  3989 	.ascii "Final score: %d"
             63 6F 72 65 3A 20 25
             64
      0004EF 00                    3990 	.db 0x00
                           0004F0  3991 FLab2$__str_15$0$0 == .
      0004F0                       3992 ___str_15:
      0004F0 0A                    3993 	.db 0x0a
      0004F1 0D                    3994 	.db 0x0d
      0004F2 55 73 65 20 74 68 65  3995 	.ascii "Use the potentiometer to draw a bar graph on the terminal."
             20 70 6F 74 65 6E 74
             69 6F 6D 65 74 65 72
             20 74 6F 20 64 72 61
             77 20 61 20 62 61 72
             20 67 72 61 70 68 20
             6F 6E 20 74 68 65 20
             74 65 72 6D 69 6E 61
             6C 2E
      00052C 0A                    3996 	.db 0x0a
      00052D 0D                    3997 	.db 0x0d
      00052E 49 74 73 20 6C 65 6E  3998 	.ascii "Its length should be a percentage of the maximum length as"
             67 74 68 20 73 68 6F
             75 6C 64 20 62 65 20
             61 20 70 65 72 63 65
             6E 74 61 67 65 20 6F
             66 20 74 68 65 20 6D
             61 78 69 6D 75 6D 20
             6C 65 6E 67 74 68 20
             61 73
      000568 20 73 70 65 63 69 66  3999 	.ascii " specified by the number of LEDs lit."
             69 65 64 20 62 79 20
             74 68 65 20 6E 75 6D
             62 65 72 20 6F 66 20
             4C 45 44 73 20 6C 69
             74 2E
      00058D 0A                    4000 	.db 0x0a
      00058E 0A                    4001 	.db 0x0a
      00058F 0D                    4002 	.db 0x0d
      000590 4E 6F 20 6C 69 74 20  4003 	.ascii "No lit LEDs indicate"
             4C 45 44 73 20 69 6E
             64 69 63 61 74 65
      0005A4 20 74 68 61 74 20 74  4004 	.ascii " that the bar should be 0% of the maximum length, 1 lit LED "
             68 65 20 62 61 72 20
             73 68 6F 75 6C 64 20
             62 65 20 30 25 20 6F
             66 20 74 68 65 20 6D
             61 78 69 6D 75 6D 20
             6C 65 6E 67 74 68 2C
             20 31 20 6C 69 74 20
             4C 45 44 20
      0005E0 69 6E 64 69 63 61 74  4005 	.ascii "indicates a bar 25% of the maximum length,"
             65 73 20 61 20 62 61
             72 20 32 35 25 20 6F
             66 20 74 68 65 20 6D
             61 78 69 6D 75 6D 20
             6C 65 6E 67 74 68 2C
      00060A 0A                    4006 	.db 0x0a
      00060B 0D                    4007 	.db 0x0d
      00060C 32 20 6C 69 74 20 4C  4008 	.ascii "2 lit LEDs indic"
             45 44 73 20 69 6E 64
             69 63
      00061C 61 74 65 20 35 30 25  4009 	.ascii "ate 50%, 3 lit LEDs indicate 75%, and 4 lit LEDs indicate 10"
             2C 20 33 20 6C 69 74
             20 4C 45 44 73 20 69
             6E 64 69 63 61 74 65
             20 37 35 25 2C 20 61
             6E 64 20 34 20 6C 69
             74 20 4C 45 44 73 20
             69 6E 64 69 63 61 74
             65 20 31 30
      000658 30 25 2E              4010 	.ascii "0%."
      00065B 0A                    4011 	.db 0x0a
      00065C 0A                    4012 	.db 0x0a
      00065D 0D                    4013 	.db 0x0d
      00065E 59 6F 75 20 68 61 76  4014 	.ascii "You have one second to draw the appropriate graph. If "
             65 20 6F 6E 65 20 73
             65 63 6F 6E 64 20 74
             6F 20 64 72 61 77 20
             74 68 65 20 61 70 70
             72 6F 70 72 69 61 74
             65 20 67 72 61 70 68
             2E 20 49 66 20
      000694 74 68 65 20 67 72 61  4015 	.ascii "the graph is longer than the desired value, the BILED will t"
             70 68 20 69 73 20 6C
             6F 6E 67 65 72 20 74
             68 61 6E 20 74 68 65
             20 64 65 73 69 72 65
             64 20 76 61 6C 75 65
             2C 20 74 68 65 20 42
             49 4C 45 44 20 77 69
             6C 6C 20 74
      0006D0 75 72 6E 20 72 65 64  4016 	.ascii "urn red."
             2E
      0006D8 0A                    4017 	.db 0x0a
      0006D9 0D                    4018 	.db 0x0d
      0006DA 49 66 20 74 68 65 20  4019 	.ascii "If the graph is shorter than the desired value, th"
             67 72 61 70 68 20 69
             73 20 73 68 6F 72 74
             65 72 20 74 68 61 6E
             20 74 68 65 20 64 65
             73 69 72 65 64 20 76
             61 6C 75 65 2C 20 74
             68
      00070C 65 20 42 49 4C 45 44  4020 	.ascii "e BILED will turn green."
             20 77 69 6C 6C 20 74
             75 72 6E 20 67 72 65
             65 6E 2E
      000724 0A                    4021 	.db 0x0a
      000725 0A                    4022 	.db 0x0a
      000726 0D                    4023 	.db 0x0d
      000727 41 20 6D 61 78 69 6D  4024 	.ascii "A maximum of 10 points are awarde"
             75 6D 20 6F 66 20 31
             30 20 70 6F 69 6E 74
             73 20 61 72 65 20 61
             77 61 72 64 65
      000748 64 20 66 6F 72 20 65  4025 	.ascii "d for each correct answer."
             61 63 68 20 63 6F 72
             72 65 63 74 20 61 6E
             73 77 65 72 2E
      000762 0A                    4026 	.db 0x0a
      000763 0D                    4027 	.db 0x0d
      000764 54 77 6F 20 70 6F 69  4028 	.ascii "Two points are deducted for each"
             6E 74 73 20 61 72 65
             20 64 65 64 75 63 74
             65 64 20 66 6F 72 20
             65 61 63 68
      000784 20 63 68 61 72 61 63  4029 	.ascii " character position off. There are 5 rounds."
             74 65 72 20 70 6F 73
             69 74 69 6F 6E 20 6F
             66 66 2E 20 54 68 65
             72 65 20 61 72 65 20
             35 20 72 6F 75 6E 64
             73 2E
      0007B0 0A                    4030 	.db 0x0a
      0007B1 0A                    4031 	.db 0x0a
      0007B2 0A                    4032 	.db 0x0a
      0007B3 0D                    4033 	.db 0x0d
      0007B4 50 72 65 73 73 20 74  4034 	.ascii "Press the pu"
             68 65 20 70 75
      0007C0 73 68 62 75 74 74 6F  4035 	.ascii "shbutton to start."
             6E 20 74 6F 20 73 74
             61 72 74 2E
      0007D2 00                    4036 	.db 0x00
                           0007D3  4037 FLab2$__str_16$0$0 == .
      0007D3                       4038 ___str_16:
      0007D3 0A                    4039 	.db 0x0a
      0007D4 0A                    4040 	.db 0x0a
      0007D5 0A                    4041 	.db 0x0a
      0007D6 0D                    4042 	.db 0x0d
      0007D7 53 54 41 52 54        4043 	.ascii "START"
      0007DC 00                    4044 	.db 0x00
                           0007DD  4045 FLab2$__str_17$0$0 == .
      0007DD                       4046 ___str_17:
      0007DD 0A                    4047 	.db 0x0a
      0007DE 0A                    4048 	.db 0x0a
      0007DF 0D                    4049 	.db 0x0d
      0007E0 53 63 6F 72 65 20 66  4050 	.ascii "Score for this round: %d"
             6F 72 20 74 68 69 73
             20 72 6F 75 6E 64 3A
             20 25 64
      0007F8 0A                    4051 	.db 0x0a
      0007F9 0D                    4052 	.db 0x0d
      0007FA 54 6F 74 61 6C 20 73  4053 	.ascii "Total score: %d"
             63 6F 72 65 3A 20 25
             64
      000809 00                    4054 	.db 0x00
                           00080A  4055 FLab2$__str_18$0$0 == .
      00080A                       4056 ___str_18:
      00080A 0A                    4057 	.db 0x0a
      00080B 0A                    4058 	.db 0x0a
      00080C 0D                    4059 	.db 0x0d
      00080D 46 69 6E 61 6C 20 73  4060 	.ascii "Final score: %d"
             63 6F 72 65 3A 20 25
             64
      00081C 00                    4061 	.db 0x00
                                   4062 	.area XINIT   (CODE)
                                   4063 	.area CABS    (ABS,CODE)
